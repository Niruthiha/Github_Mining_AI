[
  {
    "issue_number": 11660,
    "title": "Fragment \"does not exist anymore\" after reloading the page",
    "author": "maxiedaniels",
    "state": "open",
    "created_at": "2025-06-16T18:26:54Z",
    "updated_at": "2025-06-17T12:10:59Z",
    "labels": [
      "type:bug",
      "status:awaiting-user-response",
      "feature:st.fragment"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI just started using fragments, and I'm frequently getting this error: \"The fragment with id xxxxxxxxxxxxxxxx does not exist anymore - it might have been removed during a preceding full-app rerun.\"\n\nI have a pretty simple fragment setup, it's just:\n```\n@st.fragment(run_every=f\"{POLL_INTERVAL_SECONDS}s\")\ndef live_tasks_table():\n    display_tasks_table()\n\n```\n\nAfter playing around with it a bit, it seems this error starts popping up if I reload the page in my browser, or if my computer goes to sleep. It's like the fragment doesn't realize it's no longer needed (since the page reloaded and there's a new fragment).\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.11.8\n- Operating System: MacOS 14.7.1\n- Browser: Chrome 138.0.7204.15 \n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11660)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@maxiedaniels Thanks for reporting this issue. The `\"The fragment with id xxxxxxxxxxxxxxxx does not exist anymore - it might have been removed during a preceding full-app rerun.\"` message is only an info and not an error. Does your app still work as expected, or is something broken? "
      }
    ]
  },
  {
    "issue_number": 11668,
    "title": "st.markdown links not parsed correctly when content enclosed in div",
    "author": "lstolcman",
    "state": "open",
    "created_at": "2025-06-17T10:51:24Z",
    "updated_at": "2025-06-17T11:09:23Z",
    "labels": [
      "type:bug",
      "feature:markdown",
      "status:confirmed",
      "priority:P4"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\n`st.markdown` links not parsed correctly when content enclosed in `div`:\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11668)\n\n```Python\nst.chat_message(\"assistant\"):\n    st.markdown(\n        \"<div>Something1 [source](https://google.com)\\n\\nSomething2 [source](https://google.com)</div>\",\n        unsafe_allow_html=True\n    )\n\n\nst.chat_message(\"assistant\"):\n    st.markdown(\n        \"Something1 [source](https://google.com)\\n\\nSomething2 [source](https://google.com)\",\n        unsafe_allow_html=True\n    )\n```\n\n### Steps To Reproduce\n\npaste code example, go to streamlit ui and test\n\n### Expected Behavior\n\nboth should return this:\n\n![Image](https://github.com/user-attachments/assets/8711b512-bae7-4eef-8adc-ffc87849312c)\n\n### Current Behavior\n\n![Image](https://github.com/user-attachments/assets/83c0b4bb-43f5-4ec2-8ea6-6bd4fe18c6c3)\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1 (newest at the moment of writing)\n- Python version: 3.12\n- Operating System: windows 11\n- Browser: firefox 128 esr, chrome 137\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11668)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@lstolcman thanks for reporting this issue. I was able to reproduce this [here](https://issues.streamlit.app/?issue=gh-11668). Looks like to have the markdown processor work correctly, the markdown needs to be on its own paragraph, e.g. this works:\n\n```python\nwith st.chat_message(\"assistant\"):\n    st.markdown(\n        \"<div>\\n\\nSomething1 [source](https://google.com)\\n\\nSomething2 [source](https://google.com)</div>\",\n        unsafe_allow_html=True\n    ) \n```"
      }
    ]
  },
  {
    "issue_number": 11645,
    "title": "Add the ability to mute/disable messages logged by the Logger",
    "author": "skasero",
    "state": "open",
    "created_at": "2025-06-13T19:11:37Z",
    "updated_at": "2025-06-17T10:01:23Z",
    "labels": [
      "type:enhancement",
      "area:backend"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nMy team has created an API in Streamlit that makes many streamlit calls with no actually user loading up a web browser. I get thousands of messages that show this:\n```\n2025-06-13 05:56:58.507:streamlit.runtime.app_session:app_session.py:525:DEBUG: Ignoring event from non-current ScriptRunner: ScriptRunnerEvent.ENQUEUE_FORWARD_MSG\n2025-06-13 05:56:58.508:streamlit.runtime.app_session:app_session.py:525:DEBUG: Ignoring event from non-current ScriptRunner: ScriptRunnerEvent.ENQUEUE_FORWARD_MSG\n```\n\nMy feature request is looking to add a function that applies a Global Filter to log message. Similar to how urllib3 has a disable warnings function. \n`urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)`\n\n### Why?\n\nI'm an unable to easily debug my streamlit application when I get over 2000+ messages repeating the same message. I'd like a way to add a filter so that if the user wants, they can disable certain messages from being logged. \n\n### How?\n\nI'd like to introduce a function inside logger.py that adds a Global Filter to loggers. \nI wanted to see if this was possible, and I have already created working code for this. Ideally, I'd like this feature to get added and would love feedback from Streamlit team if the team decided this is a good feature. \n\nMy current code would look like this when added to a streamlit python file.\n\n```\nfrom streamlit.logger import suppress_log_event\nfrom streamlit.runtime.scriptrunner import ScriptRunnerEvent\n\nsuppress_log_event(ScriptRunnerEvent.ENQUEUE_FORWARD_MSG)\n```\n\n### Additional Context\n\nI'd like to volunteer for the solution for this issue.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11645)\n"
      },
      {
        "user": "jrieke",
        "body": "I'm a bit confused why these log messages even show up in the first place. They shouldn't show if you just `streamlit run` your app, otherwise that's a bug. Can you add a bit more detail on how you run these apps?"
      },
      {
        "user": "skasero",
        "body": "Hi @jrieke I'll give you some quick code to replicate it utilizing the API code provided by: https://gist.github.com/schaumb/d557dabf0beced7dfaa1be7acc09b1e4\n\nAnd here is a quick streamlit app.py file.\n\n```\nimport streamlit as st\nimport pandas as pd\nimport plotly.express as px\nfrom st_route import st_route\n\n@st_route(path=r\"test\", globally=True)\ndef test_api(**kwargs):\n    df = pd.DataFrame({'x': [1,2,3], 'y': [4,5,6]})\n    quick_plot(df)\n    return 200, \"Test\"\n\ndef quick_plot(df):\n    fig = px.line(df)\n    st.plotly_chart(fig)\n\nst.write(\"Test App\")\n```\n\nAfter loading up `http://127.0.0.1:8501` then you can perform a `curl http://0.0.0.0:8501/test` and inside the logs you'll see \n`2025-06-15 12:05:20.265 Ignoring event from non-current ScriptRunner: ScriptRunnerEvent.ENQUEUE_FORWARD_MSG`\n\nMake sure to enable `DEBUG` logs for streamlit.\n\nIt may not be a bug with streamlit as it wasn't designed to use API calls and may be an issue with st_route.py. But this feature still could be a good feature to add to suppress certain log message if the user wants. (Or at least I'd like that)"
      }
    ]
  },
  {
    "issue_number": 11610,
    "title": "Share button should keep hover background & pointer cursor when clicked",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-06-12T14:19:37Z",
    "updated_at": "2025-06-17T09:59:34Z",
    "labels": [
      "type:bug",
      "area:styling",
      "feature:community-cloud",
      "status:confirmed",
      "priority:P3"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nIf you hover over the app menu and click it, it keeps its gray background and the cursor is a pointer/hand as long as you keep hovering it. But when clicking on the \"Share\" button, the gray background disappears immediately and the cursor turns into a normal cursor, even if you keep hovering: \n\nhttps://github.com/user-attachments/assets/f831b3a0-0350-4404-8620-d26addf7055b\n\n\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n1. Go to an app on Community Cloud that you own, so the Share button shows up. \n2. Hover and click on the Share button and app menu button, see video above. \n\n### Expected Behavior\n\nShare button keeps gray background and cursor stays a pointer/hand as long as you're hovering the Share button. \n\n### Current Behavior\n\nGray background disappears and cursor turns back to normal. \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11610)\n"
      },
      {
        "user": "sfc-gh-smohile",
        "body": "Hey @jrieke upon further review of this, I've figured out this does not occur when reproduced locally, toolbar actions works fine. However in the community cloud the share button opens up a modal which takes the focus from the app, causing it to lose focus, and the cursor resetting, instead of displaying the custom cursor."
      },
      {
        "user": "jrieke",
        "body": "Oh got it! Is that because (as far as I remember) that modal is rendered by Cloud directly instead of going through the open source library?"
      }
    ]
  },
  {
    "issue_number": 11356,
    "title": "Unable to log in to Streamlit Community Cloud ‚Äì Receiving 403 Error",
    "author": "SantoshRottayyanavar",
    "state": "closed",
    "created_at": "2025-05-14T03:49:04Z",
    "updated_at": "2025-06-17T04:05:10Z",
    "labels": [
      "type:bug",
      "feature:community-cloud",
      "status:confirmed"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI am unable to log in to [Streamlit Community Cloud](https://share.streamlit.io). Every login attempt fails with a **403 Forbidden** error. I urgently need to deploy a Streamlit file for an upcoming project, so this issue is blocking me.\n\n\n\n\n\n\n\n\n\n\n\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n1. Go to https://share.streamlit.io\n2. Click on \"Sign in with GitHub\"\n3. After authentication, I am redirected and shown a 403 error page\n\n### Expected Behavior\n\nI should be able to log in via GitHub and access the Community Cloud dashboard to deploy my Streamlit app.\n\n### Current Behavior\n\nLogin fails with a 403 error page and I cannot access the platform.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:3.12\n- Operating System:Windows 11\n- Browser:- Browser: Version 136.0.7103.93 (Official Build) (32-bit)\n- GitHub account is working fine elsewhere\n\n\n### Additional Information\n\nThis is time-sensitive because I have a file ready for deployment and need access to the Community Cloud urgently.\n\nPlease assist in resolving this issue at the earliest. Thank you!",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11356)\n"
      },
      {
        "user": "sfc-gh-dmatthews",
        "body": "Have you logged into Community Cloud previously from your current computer/network/location? Also, where are you geographically located?"
      },
      {
        "user": "SantoshRottayyanavar",
        "body": "Yes I have logged into this previously \nI am from india"
      }
    ]
  },
  {
    "issue_number": 727,
    "title": "Top navigation bar for multipage apps",
    "author": "MarcSkovMadsen",
    "state": "closed",
    "created_at": "2019-11-21T05:20:08Z",
    "updated_at": "2025-06-17T03:27:45Z",
    "labels": [
      "type:enhancement",
      "area:layout",
      "area:frontend"
    ],
    "body": "### Problem\n\nI would like to build multi page apps with a nice layout and style for use internally in an enterprise and also for the project awesome-streamlit.org.\n\nOne problem is that there is no \"top\" bar.\n\n![image](https://user-images.githubusercontent.com/42288570/69305981-4db1a600-0c26-11ea-940d-637b02cf04c4.png)\n\n### Solution\n\nAdd a \"st.topbar\" widget similar to the sidebar.\n\nIn the topbar I would expect to have\n- Buttons\n- Dropdowns for navigation\n- Input textboxes for example for search\n- Images and Icons like fontawesome icons to help the user.\n\n### Additional context\n\nFor inspiration see\n\nhttps://getbootstrap.com/docs/4.0/examples/dashboard/\n\nand more top bars like\n\n![image](https://user-images.githubusercontent.com/42288570/69306184-f4964200-0c26-11ea-9c4d-4e498dd7b753.png)\n\n![image](https://user-images.githubusercontent.com/42288570/69306123-c0bb1c80-0c26-11ea-9f8a-70bb7415b1ec.png)\n\n![image](https://user-images.githubusercontent.com/42288570/69306142-cc0e4800-0c26-11ea-8378-042579ee91f3.png)\n\n![image](https://user-images.githubusercontent.com/42288570/69306160-d92b3700-0c26-11ea-8264-fd56c20d9124.png)\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-727)",
    "comments": [
      {
        "user": "astariul",
        "body": "We definitely need this, for multi-pages applications. "
      },
      {
        "user": "akshanshkmr",
        "body": "Hi,\r\nCan we get an update on this feature?"
      },
      {
        "user": "tvst",
        "body": "This is something we're considering. We have a few other things on the roadmap ahead of this, like multi-page app support, and we also have a few questions about what exactly people are looking for when they ask for this feature. This is important because the design system for a top bar would be fundamentally different from other content areas in Streamlit, which are laid out vertically and use certain vertical-layout-specific heuristics in their layout logic. So the more likely version of the top bar widget would be somewhat specialized, rather than a generic content area.\r\n\r\nSo while we're in this topic, we might as well use this thread for some quick user research :-)\r\n\r\nWhat do folks have in mind when they ask for a top bar widget? Are you looking for a way to set up top navigation? Or menu? Or a place to put a logo? Or something else?\r\n\r\n"
      }
    ]
  },
  {
    "issue_number": 641,
    "title": "Removing index of dataframe while using st.table or st.write",
    "author": "dJOKERdUMMY",
    "state": "closed",
    "created_at": "2019-11-07T14:28:29Z",
    "updated_at": "2025-06-16T21:19:37Z",
    "labels": [
      "type:enhancement",
      "feature:st.dataframe",
      "feature:st.table",
      "status:in-progress"
    ],
    "body": "st.write( ) and st.table( ) shows the index values of the dataframe while using. Providing a way to remove them within the st.table( ) or st.write( ) would be a very good option to show much clear dataframes without index values.\r\n\r\n![image](https://user-images.githubusercontent.com/22565141/68397265-ec56f500-0198-11ea-98da-25f50574efce.png)\r\n\r\n\r\n---\r\n\r\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\r\n\r\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\r\n",
    "comments": [
      {
        "user": "dcaminos",
        "body": "Hey @dJOKERdUMMY  thanks for the feedback. I just added this to our eng board and we'll update the issue as soon as we have more info!"
      },
      {
        "user": "xKHUNx",
        "body": "Any hack to achieve this for now?"
      },
      {
        "user": "Zigulich",
        "body": "> Any hack to achieve this for now?\r\n\r\nYou can do it:\r\n`dataframe.set_index('column', inplace=True)`\r\n\r\nThis will make the index no longer the numbering, but the indicated column"
      }
    ]
  },
  {
    "issue_number": 11665,
    "title": "Websocket Notify component to allow for Push-Notifications without polling",
    "author": "rwa96",
    "state": "open",
    "created_at": "2025-06-16T20:56:14Z",
    "updated_at": "2025-06-16T21:02:13Z",
    "labels": [
      "type:enhancement",
      "area:utilities"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nProvide a component that will trigger a server-side render when it receives a message from a specified websocket server.\n\n### Why?\n\nCurrently, streamlit requires an execution-flow, that starts in the browser. Usually, the user is interacting with a component (e.g. changing the value of input components, or pressing buttons, etc...), which triggers a render operation on the server-side. As a result of this paradigm, it is difficult to implement flows, that start with the server sending a push event to the client.\n\nSome examples would be:\n\n- A chatroom where the server notifies each of the participants that a new message was sent\n- A live presentation where the presenter wants to push updates to all viewers, e.g. for highlighting some of the presented data, or for \"changing to the next slide\" by triggering a rerun that renders a new layout\n- A dashboard that displays the current state of a system, which only changes sporadically and with long time-periods in between\n\nAll of these examples can be solved by polling for updates in an infinite loop, e.g. by using third-party components like [streamlit-autorefresh](https://github.com/kmcgrady/streamlit-autorefresh). The issue with this approach is that it results in a lot of wasted computation and requests where a rerun is triggered without any changes occurring. This also doesn't scale well with more and more session-threads.\n\nThis polling approach can be avoided by adding a component that only triggers a server-side rerun when it receives a websocket message on the client-side. The currently implemented execution-flow stays the same, since everything starts with a change on the client-side. \nBut instead of requiring a user-interaction like a button-click, a websocket server can trigger it remotely.\n\n### How?\n\nOn the python side, the implementation could look very similar to any of the existing input-widgets:\n\n```python\n# allow for http-header customization to enable authentication and individualized socket connections\nraw_message: bytes = st.websocket_receive(url=\"https://some-websocket-server-address\", http_headers={\"Authorization\": \"Basic ...\"})\n# directly receive strings\n# message: str = st.websocket_receive(url=..., encoding=\"utf-8\")\n\n# everytime a socket-message was received, this should trigger a redraw that shows the received message\nst.write(raw_message.decode(\"utf-8\"))\n```\n\nOn the client side, the component would open a websocket using the specified URL and header fields and will update the component value as soon as it receives a message. *(I am not really familiar with js/ts... so I can't provide example code for this part of the implementation)*\n\n## Added Bonus:\n\nWith such a component, the [multithreading section](https://docs.streamlit.io/develop/concepts/design/multithreading) in the docs could also be updated with an additional example. Instead of having to join the worker-thread, it could be a deamon that starts a websocket-server and asynchronously communicates with the streamlit app via the proposed websocket component.\n\n## Notes on Security\n\nThe proposed implementation requires the client to know both the URL and the custom header fields, and it should be highlighted in the documentation that those should only contain values that the client is allowed to know about.\n\n### Additional Context\n\nIssue #2927 proposes a very similar approach but also provides a [solution](https://github.com/FloWide/streamlit_callbacks/tree/main) that only uses websockets on the server-side, which doesn't really solve the polling issue. As far as I can tell, they added the socket-listener thread to the ScriptRunContext which can result in unexpected behavior and fatal errors and may not work for all streamlit commands *(according to the [multithreading documentation](https://docs.streamlit.io/develop/concepts/design/multithreading))*. What I want to propose instead, is an implementation that starts at the client-side and fits more to the currently supported execution flow of streamlit apps.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11665)\n"
      }
    ]
  },
  {
    "issue_number": 8098,
    "title": "Add an option to disable prompts when running streamlit for the first time",
    "author": "francoissharpe",
    "state": "closed",
    "created_at": "2024-02-06T19:27:49Z",
    "updated_at": "2025-06-16T19:58:23Z",
    "labels": [
      "type:enhancement",
      "feature:config",
      "feature:cli"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nIn addition to the `server.headless` configuration, can we also have another option like a `NO_PROMPT` environment variable which lets us bypass the prompt introduced in https://github.com/streamlit/streamlit/issues/63. \n\n### Why?\n\nWe do not want people within our organization to accidentally leak potentially sensitive information.\n\n### How?\n\nIntroduce a config setting and environment variable.\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8098)\n"
      },
      {
        "user": "Julian-Brendel",
        "body": "This would be very impactful for us as well.\n"
      },
      {
        "user": "SGobet",
        "body": "This would be super useful!"
      }
    ]
  },
  {
    "issue_number": 11518,
    "title": "48779840892",
    "author": "guilhermems17",
    "state": "closed",
    "created_at": "2025-06-04T15:23:04Z",
    "updated_at": "2025-06-16T12:03:01Z",
    "labels": [
      "type:kudos"
    ],
    "body": "### Message\n\nagradeco pelo seu trabalho\n",
    "comments": [
      {
        "user": "guilhermems17",
        "body": "por nada\n"
      }
    ]
  },
  {
    "issue_number": 9218,
    "title": "file_uploader with large file results in server getting killed",
    "author": "MitchellWeg",
    "state": "open",
    "created_at": "2024-08-06T08:47:42Z",
    "updated_at": "2025-06-16T07:39:37Z",
    "labels": [
      "type:enhancement",
      "feature:st.file_uploader"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nI am using st.file_uploader to upload ~3.5gb file into my streamlit dashboard. This however, results in the server getting killed.\r\nWhen I inspect using btop, Upon file upload, the server starts using an astronomic amount of RAM.\r\n\r\nEDIT: I tried imposing a RAM limit by dockerizing the dashboard and settting a 4gb RAM limit, but it just gets killed in the container.\r\n\r\n### Reproducible Code Example\r\n\r\n```Python\r\nimport streamlit as st\r\n\r\nuploaded_file = st.file_uploader(\"Choose a video file\", type=[\"mp4\", \"mov\", \"avi\"])\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\nstreamlit run dashboard.py --maxUploadSize=5000\r\n\r\n### Expected Behavior\r\n\r\nIt's probably better to stream it in chunks to disk when clicking an 'upload file' button.\r\n\r\n### Current Behavior\r\n\r\nThe server gets killed.\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version:\r\n- Python version:\r\n- Operating System:\r\n- Browser:\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9218)\n"
      },
      {
        "user": "kajarenc",
        "body": "Hey @MitchellWeg!\r\n\r\nthank you for opening this issue!\r\n\r\nAt the moment, the implementation details are such that uploaded files are stored in RAM (not on disk), and are available to the streamlit application from there.\r\n\r\nTherefore, it is expected that an attempt to upload a file that is almost the entire available RAM leads to the application crash.\r\n\r\nI will reclassify this bug into a feature request, for example, the ability to upload files directly to cloud storage (say, to S3, or similar) could partially solve this problem."
      },
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Visits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fstreamlit%2Fstreamlit%2Fissues%2F9218&title=visits&edge_flat=false)\n"
      }
    ]
  },
  {
    "issue_number": 6717,
    "title": "Data Input widgets to accept voice and convert it to text",
    "author": "shakamoushie",
    "state": "open",
    "created_at": "2023-05-21T06:57:43Z",
    "updated_at": "2025-06-15T15:03:11Z",
    "labels": [
      "type:enhancement",
      "feature:st.text_input",
      "feature:st.text_area",
      "feature:st.chat_input"
    ],
    "body": "Can all data capture widgets - or at least st.text_area and st.text_input - be tweaked to capture voice and convert that audio (in memory) to text within the widget? Eg. One can dictate into the widget instead of typing. \n\n![image](https://github.com/streamlit/streamlit/assets/88389632/d7f24261-5c08-4542-b747-c8d662f2ee7e)\n\nFor visual indication, the mic image can be of a different colour when it is recording and when it is not.\n\nUse case: Medical applications to dictate interpretations into st.text_area. Sales applications, to dictate strategies... etc.\n\n(This issue is a branch of #6685)\n\n![Views](https://api.views-badge.org/badge/st-issue-6717)",
    "comments": [
      {
        "user": "carolinefrasca",
        "body": "Thank you for sharing this request, @shakamoushie! We'll keep this open and monitor for community interest"
      },
      {
        "user": "jrieke",
        "body": "Can't you just use the voice input of your phone's keyboard? I don't think we'll ever implement that on the Streamlit side since it would be extremely complicated. But will leave this open for a while to see if others want it too."
      },
      {
        "user": "shakamoushie",
        "body": "Well, I was discussing the use of web apps in the medical industry with an Ophthalmologist. He told me that he had tried various applications in his profession, all of which he rejected, simply because he wanted an as-close-as-possible, hands-free experience to data capture. \r\n\r\nDoctors, with gloved hands, without staff, rarely type, while attending to patients. In this scenario, imagine if you just needed to click on a widget and transcribe a long medical interpretation...\r\n\r\nNevertheless, if the need from the community is minimal and/or its implementation is too complex, it makes sense not to go with this feature.\r\n\r\nCheers"
      }
    ]
  },
  {
    "issue_number": 11430,
    "title": "`st.help` shows `page.run()` header but correct docstring when called in a multipage app",
    "author": "sfc-gh-dmatthews",
    "state": "open",
    "created_at": "2025-05-22T00:33:23Z",
    "updated_at": "2025-06-15T14:03:28Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.help"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen calling `st.help` on a page of an app (not the entrypoint file), the displayed information has an incorrect header (`page.run()`) even though it displays the correct information for whatever was passed to it.\n\nWhen calling `st.help` from within a function from the entrypoint file, the function name is displayed in the help header.\n\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11430)\n\n```Python\nimport streamlit as st\n\ndef page_function():\n    st.help(st.write)\n\npage = st.navigation([st.Page(page_function)])\n\nst.header(\"Run the page returned from navigation\")\npage.run()\nst.header(\"Execute the page function directly\")\npage_function()\nst.header(\"Directly execute the commands within the page function\")\nst.help(st.write)\n```\n\n### Steps To Reproduce\n\n1. Run the app\n\n### Expected Behavior\n\nAll instances of `st.help` should show `st.write` and its docstring.\n\n### Current Behavior\n\nAll instances show the `st.write` docstring, but the header changes to reflect the parent call from within the entrypoint file.\n\nThis behavior is also exhibited in version 1.36.0 when `st.navigation` was introduced.\n\n<img width=\"820\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8fea52eb-7452-42b1-bdf7-972537e63c4a\" />\n\n<img width=\"788\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/80a87bc0-bae4-4c56-b88e-affb7665b945\" />\n\n<img width=\"797\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/66669387-f9b9-4782-b608-5d66157b70d3\" />\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11430)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Nice find, @sfc-gh-dmatthews!"
      },
      {
        "user": "Franco-15",
        "body": "Hello! Can I try to fix it?"
      }
    ]
  },
  {
    "issue_number": 8793,
    "title": "Anchor does not change on rerun()",
    "author": "esnible",
    "state": "open",
    "created_at": "2024-05-29T18:18:24Z",
    "updated_at": "2025-06-15T13:57:47Z",
    "labels": [
      "type:bug",
      "feature:markdown",
      "status:confirmed",
      "priority:P3",
      "feature:st.header"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\n`st.subheader()` generates an HTML anchor, but that anchor does not change on a re-run, even if the argument to subheader() changes.\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-8793)\n\n```Python\nimport streamlit as st\nimport datetime\n\nst.subheader(f\"Time: {datetime.datetime.now()}\")\nif st.button(\"üîÑ Refresh UI\"):\n    st.rerun()\n```\n\n\n### Steps To Reproduce\n\n1. Run the above code.\n2. Hover the mouse over the chain links to see the URL containing a fragment corresponding to the current time.\n3. Click the refresh button\n4. Hover over the chain link again, and notice the fragment does not change.\n\n### Expected Behavior\n\nThe fragment should match the displayed subheading.\n\nFor me, I was displaying an error message specific to my app.  I did a rerun() and when the page refreshed my app had cleared the error, but the hover help and href link confused my users.\n\n### Current Behavior\n\nThe hover help correctly changes in a multi-page app when I change pages.\nIn a single page app, or if I rerun() within a page, the href does not match the current subheading.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: version 1.34.0\n- Python version: Python 3.11.4\n- Operating System: Mac 14.5\n- Browser: Chrome, Firefox, Safari (hard to see on Safari, as hover link display disabled by default).\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-8793)\n"
      },
      {
        "user": "sfc-gh-wihuang",
        "body": "Hi @esnible ,\r\nI tried reproducing this on 1.35 but couldn't reproduce. Could you give more information as to what is ur setup? \r\n"
      },
      {
        "user": "willhuang1997",
        "body": "Going to close since no reply."
      }
    ]
  },
  {
    "issue_number": 6431,
    "title": "Long chart labels are cropped",
    "author": "jrieke",
    "state": "open",
    "created_at": "2023-04-04T23:42:11Z",
    "updated_at": "2025-06-15T13:54:34Z",
    "labels": [
      "type:bug",
      "status:cannot-reproduce",
      "priority:P4",
      "feature:st.altair_chart"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nReported by @astrojams1, don't have a code example unfortunately. If an Altair/Vega chart has long labels on the x axis, they get cropped by Streamlit.\r\n\r\n![image](https://user-images.githubusercontent.com/5103165/229945795-49423007-2aae-4ea6-9854-ee609fc865af.png)\r\n\n\n### Reproducible Code Example\n\n_No response_\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\nChart should just become smaller, labels should show up fully. \n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\r\n- Python version:\r\n- Operating System:\r\n- Browser:\r\n- Virtual environment:\r\n\n\n### Additional Information\n\n_No response_\n\n### Are you willing to submit a PR?\n\n- [ ] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-6431)\n"
      }
    ]
  },
  {
    "issue_number": 10115,
    "title": "Input widget does not take input from password manager",
    "author": "sandervdhimst",
    "state": "open",
    "created_at": "2025-01-06T14:24:31Z",
    "updated_at": "2025-06-15T13:53:05Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.text_input"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen my password manager (Dashlane version 6.2451.1 - latest) autofills an e-mail address into a text input widget, the on_change callback is not triggered and the session state is not updated. \n\nTyping in the e-mail address in the input widget with the keyboard works as expected.\n\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-10115)\n\n```Python\nimport streamlit as st\n\nst.text_input('Input e-mail', key='test_key')\n\nif st.button('Submit'):\n    print(\"input: \" + st.session_state['test_key'])\n```\n\n\n### Steps To Reproduce\n\n1. Setup Dashlane password manager (add some credentials for autofill)\n2. Open page with code example\n3. Use Dashlane to autofill the text input widget\n4. Click submit (does not work)\n\n\n5. Adjust the text using keyboard input\n6. Click submit again (works)\n\n### Expected Behavior\n\nI expect the session state to be updated (and on_change to be triggered) when an e-mail address is set in the input widget by the password manager.\n\n### Current Behavior\n\n\nhttps://github.com/user-attachments/assets/10fd4c53-cf87-46bb-9316-ef62f0a7b867\n\n\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.41.1\n- Python version: 3.12.3\n- Operating System: MacOs 12.6\n- Browser: Chrome version 131.0.6778.205 (Official Build) (arm64)\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10115)\n"
      },
      {
        "user": "sfc-gh-lwilby",
        "body": "Hi @sandervdhimst, \r\n\r\nThank you for filing this issue. \r\n\r\nI have reproduced it by setting the value of the input widget to \"TEST\" in the google developer tools. We believe this replicates how the password manager autofill works. \r\n\r\nI observe that the value is correctly set in the UI, but when I click the \"Submit\" button -- this will trigger a script rerun -- the value is reset indicating this change is not detected by the Streamlit FE and not sent to the server. \r\n\r\n"
      },
      {
        "user": "axelcarapinha",
        "body": "I was able to reproduce the same bug under the following conditions:\n\n- Streamlit version: 1.42.2\n- Python version: 3.12.3\n- Operating System: Ubuntu 24.04.2 LTS\n- Browser: Chrome 133.0.6943.141 (Official Build) (64-bit)\n\nI‚Äôd like to work on this issue, could you assign it to me @sfc-gh-lwilby ? \nI'm currently pinpointing the root cause to work on a fix.\n\nThank you both for already providing a detailed description of the bug."
      }
    ]
  },
  {
    "issue_number": 9387,
    "title": "Popover in sidebar is outside of the viewable page",
    "author": "alon-sht",
    "state": "open",
    "created_at": "2024-09-02T16:19:56Z",
    "updated_at": "2025-06-15T13:51:59Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.popover"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nPopover in sidebar is cropped and overflows to outside of the viewable page\n\n![image](https://github.com/user-attachments/assets/e0c1d97d-b249-4834-9216-ce72289b2a15)\n\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-9387)\n\n```Python\nimport streamlit as st\n\nwith st.sidebar:\n    st.selectbox(\"Selectbox\", [\"A\", \"B\", \"C\"], key=\"selectbox1\")\n    st.selectbox(\"Selectbox\", [\"A\", \"B\", \"C\"], key=\"selectbox2\")\n    st.selectbox(\"Selectbox\", [\"A\", \"B\", \"C\"], key=\"selectbox3\")\n    st.selectbox(\"Selectbox\", [\"A\", \"B\", \"C\"], key=\"selectbox4\")\n\nwith st.sidebar.popover(\"Check 123\"):\n    st.slider(\"Slider\", key=\"slider1\")\n    st.slider(\"Slider\", key=\"slider2\")\n    st.slider(\"Slider\", key=\"slider3\")\n    st.slider(\"Slider\", key=\"slider4\")\n    st.slider(\"Slider\", key=\"slider5\")\n```\n\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9387)\n"
      },
      {
        "user": "Socvest",
        "body": "Could you try perhaps calling the contents inside the popover within a container like so:\r\n\r\n```\r\nwith st.sidebar.popover(\"Check 123\").container(height=300):\r\n    st.slider(\"Slider\", key=\"slider1\")\r\n    st.slider(\"Slider\", key=\"slider2\")\r\n    st.slider(\"Slider\", key=\"slider3\")\r\n    st.slider(\"Slider\", key=\"slider4\")\r\n    st.slider(\"Slider\", key=\"slider5\")\r\n```\r\n\r\nProduced this for me:\r\n\r\n![image](https://github.com/user-attachments/assets/fe18d4ca-f06f-4dcf-9c29-d928ed09c2a3)\r\n"
      },
      {
        "user": "raethlein",
        "body": "Thanks for opening the issue! I am able to reproduce it and it seems like this line is the culprit: https://github.com/streamlit/streamlit/blob/develop/frontend/lib/src/components/elements/Popover/Popover.tsx#L71\r\nIf I set to `false`, the popover is shown correctly and does not flow over. However, it also does not look as nice in general in the sidebar which is probably the reason why the flag was set like this.\r\n@Socvest's reply seems to be a great way of \"styling\" it I guess. I wonder what the preferred alternative would be, scrolling?\r\n"
      }
    ]
  },
  {
    "issue_number": 11489,
    "title": "Crash while trying to render SVG plots with matplotlib",
    "author": "joaoeeq",
    "state": "open",
    "created_at": "2025-05-30T13:27:43Z",
    "updated_at": "2025-06-15T13:48:14Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.pyplot"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHi.\n\nInvoking `streamlit.pyplot(..., format=\"svg\")` crashes with matplotlib plots.\n\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11489)\n\n```Python\nimport matplotlib.pyplot as plt\nimport streamlit\n\nstreamlit.set_page_config(page_title=\"Crash\")\nfig, ax = plt.subplots(1, 1, figsize=(30, 15))\nstreamlit.pyplot(fig, format=\"svg\")\n```\n\n### Steps To Reproduce\n\n1. Run `streamlit run my_page.py`\n2. Open web browser\n3. Crash\n\n### Expected Behavior\n\nThe plot to be rendered in SVG, not blurry.\n\n### Current Behavior\n\nCrash\n```\n2025-05-30 15:21:55.997 Uncaught app execution\nTraceback (most recent call last):\n  File \"streamlit\\runtime\\scriptrunner\\exec_code.py\", line 121, in exec_func_with_error_handling\n    result = func()\n  File \"streamlit\\runtime\\scriptrunner\\script_runner.py\", line 648, in code_to_exec\n    exec(code, module.__dict__)\n  File \"my_page.py\", line 8, in <module>\n    streamlit.pyplot(fig, format=\"svg\")\n  File \"streamlit\\runtime\\metrics_util.py\", line 444, in wrapped_func\n    result = non_optional_func(*args, **kwargs)\n  File \"streamlit\\elements\\pyplot.py\", line 125, in pyplot\n    marshall(\n  File \"streamlit\\elements\\pyplot.py\", line 180, in marshall\n    marshall_images(\n  File \"streamlit\\elements\\lib\\image_utils.py\", line 442, in marshall_images\n    proto_img.url = image_to_url(\n  File \"streamlit\\elements\\lib\\image_utils.py\", line 334, in image_to_url\n    image_data = _ensure_image_size_and_format(image_data, width, image_format)\n  File \"streamlit\\elements\\lib\\image_utils.py\", line 188, in _ensure_image_size_and_format\n    pil_image: PILImage = Image.open(io.BytesIO(image_data))\n  File \"PIL\\Image.py\", line 3281, in open\n    raise UnidentifiedImageError(msg)\nPIL.UnidentifiedImageError: cannot identify image file b'<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n  \"http://www.w3.org/Graph'\n```\n\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.0\n- Python version: 3.10\n- Operating System: Windows\n- Browser: any (using chrome)\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11489)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @joaoeeq thanks for filing this issue. I can confirm this is reproducible in the latest nightly of streamlit."
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "For anyone else running into this, we suggest using a different value such as `png` for this parameter."
      }
    ]
  },
  {
    "issue_number": 11276,
    "title": "Plotly bar graph point selection giving wrong values for x and label",
    "author": "dcoe-jkpaper",
    "state": "open",
    "created_at": "2025-05-05T19:30:05Z",
    "updated_at": "2025-06-15T13:45:48Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.plotly_chart",
      "upstream"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI'm plotting a `group` bar chart using plotly. It has 3 columns, namely `Date`, `Value1` and `Value2`. `Date` is on `x-axis` while `Value1` and `Value2` are plotted as group bars on `y-axis`. If I enable `on_select='rerun'` and `selection_mode='points'`, the selected points are giving the wrong value for `x` and `label`. On selection of the chart, the returned values have the following issues:\n1. It automatically converts `date` to `datetime` and adds hour and minutes as `14:24`\n2. It gives random month day for the selected bar e.g. if I select 2025-07-31 on the bar, it will return `x` as 2025-08-05 14:24. This is very weird because this date is not even in the dataframe. \n3. The return data type is `str` while the `x-axis` is `date`\n4. The values on the plolty bar chart are showing correctly but the returned values for `x` and `label` are different\n![Image](https://github.com/user-attachments/assets/8c95ddd0-25ef-45cc-9b12-ff50ce013f4f)\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11276)\n\n```Python\nimport streamlit as st\nimport pandas as pd\nimport plotly.express as px\nimport numpy as np\n\nif 'value1' not in st.session_state:\n    st.session_state['value1'] = np.random.randint(1, 100, size=20)\n    st.session_state['value2'] = np.random.randint(1, 100, size=20)\n    \ndf = pd.DataFrame({})\ndf['date'] = pd.date_range(start='2025-01-01', periods=20, freq='ME').date\ndf['value1'] = st.session_state['value1']\ndf['value2'] = st.session_state['value2']\nc1, c2 = st.columns([1, 1], gap='small', vertical_alignment='bottom')\nc1.dataframe(df, height=200, use_container_width=True, hide_index=True)\nfig = px.bar(df, x='date', y=['value1', 'value2'], barmode='group', height=300, text_auto=True, color_discrete_sequence=px.colors.qualitative.Bold)\nselected_point = c2.plotly_chart(fig, use_container_width=True, on_select='rerun', selection_mode='points')\nselected_point\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45\n- Python version: 3.12.7\n- Operating System: Windows 11\n- Browser: Edge\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11276)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @dcoe-jkpaper, thanks for your submission! I was able to confirm the bug - looks like this is the data as received from `react-plotly.js`'s `Plotly.PlotSelectionEvent`.\n\nJust in case its helpful, the below should help you work around the inconsistent labels:\n```python\nif \"value1\" not in st.session_state:\n    st.session_state[\"value1\"] = np.random.randint(1, 100, size=20)\n    st.session_state[\"value2\"] = np.random.randint(1, 100, size=20)\n\ndf = pd.DataFrame({})\ndf['date'] = pd.date_range(start='2025-01-01', periods=20, freq='ME').date\ndf['value1'] = st.session_state['value1']\ndf['value2'] = st.session_state['value2']\nc1, c2 = st.columns([1, 1], gap='small', vertical_alignment='bottom')\nc1.dataframe(df, height=200, use_container_width=True, hide_index=True)\nfig = px.bar(df, x='date', y=['value1', 'value2'], barmode='group', height=300, text_auto=True, color_discrete_sequence=px.colors.qualitative.Bold)\nselected_point = c2.plotly_chart(fig, use_container_width=True, on_select='rerun', selection_mode='points')\n\nif selected_point.selection.points:\n    value_set = \"Value 1\"\n    if selected_point.selection.points[0][\"curve_number\"] == 1:\n        value_set = \"Value 2\"\n    point_index = selected_point.selection.points[0][\"point_index\"]\n    st.write(f\"**Date**: {df['date'][point_index]}\")\n    st.write(f\"**{value_set}**: {st.session_state['value2'][point_index]}\")\n```"
      },
      {
        "user": "heitormarcal",
        "body": "I also have a problem with the new streamlit version. \n\nThis is how my plotly bar chart was rendering before:\n\n![Image](https://github.com/user-attachments/assets/677716f7-6e54-4f31-b2de-469524ef73b8)\n\nThis is how it's rendering in the current version:\n\n![Image](https://github.com/user-attachments/assets/e250feff-6f2c-431d-9689-62c5e45bc90e)"
      }
    ]
  },
  {
    "issue_number": 8531,
    "title": "Altair Grouped Barchart with st.altair_chart(use_container_width=True) creates multiple charts instead of one single grouped chart",
    "author": "sapphire008",
    "state": "open",
    "created_at": "2024-04-18T09:47:38Z",
    "updated_at": "2025-06-15T13:43:51Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.altair_chart"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen creating a grouped bar chart using Altair and render it with `st.altair_chart(fig, use_container_width=True)`, multiple charts for each group, rather than a combined single chart, is created. See screenshot attached. Code to reproduce is also attached.\n\n<img width=\"1504\" alt=\"Screenshot 2024-04-18 at 5 42 59‚ÄØPM\" src=\"https://github.com/streamlit/streamlit/assets/3713023/dbd46a10-a216-463a-850f-40fe84102ab8\">\n\n\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-8531)\n\n```Python\nimport streamlit as st\nimport altair as alt\nfrom vega_datasets import data\n\ndef make_plot():\n    source = data.barley()\n\n    fig = alt.Chart(source).mark_bar().encode(\n        x='year:O',\n        y='sum(yield):Q',\n        color='year:N',\n        column='site:N'\n    )\n    return fig\n\ndef main():\n    fig = make_plot()\n    # This is okay\n    st.markdown(\"This is okay\")\n    st.altair_chart(fig)\n    \n    # This creates multiple charts instead of one chart\n    st.markdown(\"This creates multiple chart, each for a 'site'/column value\")\n    with st.container():\n        st.altair_chart(fig, use_container_width=True)\n\n\nif __name__ == '__main__':\n    main()\n```\n\n\n### Steps To Reproduce\n\n1. Save the above code in a script, and run `streamlit run app.py`.\n\n### Expected Behavior\n\nExpecting a single grouped bar chart is created and spans over the width of the container, rather than having multiple charts created when rendering with `st.altair_chart(fig, use_container_width=True)`.\n\n### Current Behavior\n\nCurrent behavior is: multiple charts for each column/group is created.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.33.0\n- Python version: 3.11.7\n- Operating System: MacOS 14.4\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-8531)\n"
      },
      {
        "user": "kmcgrady",
        "body": "Hey @sapphire008 Thanks for the issue.\r\n\r\nSo the problem is this faceted chart in vega ignores any hints from us about the responsive width. I think the goal would be to make sure vega can address this issue in their code, so we don't have to calculate the optimal size for each chart.\r\n\r\nThere is certainly more we can do to better inform the users, but we will keep track of updates."
      }
    ]
  },
  {
    "issue_number": 11367,
    "title": "Bug st.toast breaks the app when executed from a callback",
    "author": "injeniero",
    "state": "open",
    "created_at": "2025-05-15T00:35:17Z",
    "updated_at": "2025-06-15T13:41:57Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.toast",
      "feature:st.dialog"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nst.toast breaks the app when executed from a callback within a dialogue.\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11367)\n\n```Python\nimport streamlit as st\n\ndef on_click_callback():\n    st.toast(\"This is a toast notification!\", icon=\"üîî\")\n\n@st.dialog(title=\"Streamlit Toast Notification\", width=\"large\")\ndef toast_notification():\n   st.markdown(\"## Toast Notification\")\n   st.button(\"Show Toast\", on_click=on_click_callback)\n\nif st.button(\"Show Dialogue\"):\n    toast_notification()\n```\n\n### Steps To Reproduce\n\nclick the button to show the dialogue, then click on the button on the dialogue\n\n### Expected Behavior\n\nIt should not break the app\n\n### Current Behavior\n\nIt render the page white and the JS console shows\n\n<img width=\"626\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2a11d3b6-eab9-4b9c-8d9d-4bff9b30a599\" />\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.0\n- Python version: 3.11.11\n- Operating System: macos\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11367)\n"
      }
    ]
  },
  {
    "issue_number": 11424,
    "title": "Showing the same Plotly chart multiple times leads to `StreamlitDuplicateElementId`",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-05-21T16:35:18Z",
    "updated_at": "2025-06-15T13:39:50Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P2",
      "feature:st.plotly_chart"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nShowing the same Plotly chart (i.e. same figure object) multiple times leads to a `StreamlitDuplicateElementId` error after the chart is shown the first time. This shouldn't happen in my eyes since the chart is not interactive (i.e. chart selections are not activated). For Altair charts, the same thing works without any problems. \n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11424)\n\n```Python\nimport streamlit as st\nimport plotly.express as px\n\nfor i in range(10):\n    df = px.data.iris()\n    fig = px.scatter(\n        df,\n        x=\"sepal_width\",\n        y=\"sepal_length\",\n        color=\"species\",\n        size=\"petal_length\",\n        hover_data=[\"petal_width\"],\n    )\n    st.plotly_chart(fig)\n```\n\n### Steps To Reproduce\n\nRun the app\n\n### Expected Behavior\n\nThe chart should show up 10 times. \n\n### Current Behavior\n\n![Image](https://github.com/user-attachments/assets/35e0d851-3f0a-4e9d-846b-30b5240c06b5)\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11424)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @jrieke thanks for filing this. I've confirmed that it is reproducible. For anyone experiencing this before we fix it, please use a `key` as a workaround."
      },
      {
        "user": "lukasmasuch",
        "body": "This is suboptimal but expected. We decided to add this a long time ago to resolve various state-related issues with plotly, and we needed a stable identity to resolve those issues. We have similar cases with other non-widget cases, e.g. with `st.audio` / `st.video` & `autoplay` (see https://github.com/streamlit/streamlit/issues/11360) and prominent outstanding issues (e.g. https://github.com/streamlit/streamlit/issues/8239) where we need stable identities for non-widget elements.\n\nMy general suggestion would be to focus on minimizing `StreamlitDuplicateElementId` as much as possible while still allowing us to create a stable identity for any element. I think there are a couple of good ways to do this."
      }
    ]
  },
  {
    "issue_number": 11219,
    "title": "`st.multiselect` no longer supports repeated labels in `options`",
    "author": "sfc-gh-dmatthews",
    "state": "open",
    "created_at": "2025-04-28T17:21:22Z",
    "updated_at": "2025-06-15T13:38:07Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWith the introduction of `accept_new_options`, Streamlit uses the string value instead of the index internally to track selections. This means repeated labels aren't supported anymore\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11219)\n\n```Python\nimport streamlit as st\n\nclass foo():\n    def __init__(self, a):\n        self.a = a\n    def __repr__(self):\n        return \"foo \" + self.a\n    def __str__(self):\n        return self.a\n\noptions = [foo(\"a\"),\"a\"]\n\nc = st.multiselect(\"C\", options=options)\nc\n\nb = st.multiselect(\"D\", options=[\"A\", \"B\", \"B\", \"C\", \"C\", \"C\"])\nb\n```\n\n### Steps To Reproduce\n\n1. Run the app.\n2. Select either of the two items in the first multiselect. In both cases, the first instance is selected and no further selection can be made.\n3. Select \"B\" from the second multiselect and see that the second \"B\" can't be selected.\n4. Select \"C\" from the second multiselect and see that the other \"C\" items can't be selected.\n\n### Expected Behavior\n\nBefore the introduction of `accept_new_options` these multiple items could be selected.\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44.2.dev20250424\n- Python version: 3.13\n- Operating System: Mac\n- Browser: Prisma\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11219)\n"
      },
      {
        "user": "tnkuehne",
        "body": "For a bit more context: This makes this [answer](https://discuss.streamlit.io/t/select-same-item-several-times-in-multiselect-within-a-form/42854/2) from the forum invalid."
      }
    ]
  },
  {
    "issue_number": 11031,
    "title": "st.plotly_chart ignores font_family and font_color in fig.update_layout for Sankey diagrams, but fig.show() renders correctly",
    "author": "jjaviergalvez",
    "state": "open",
    "created_at": "2025-04-04T00:12:58Z",
    "updated_at": "2025-06-15T13:35:49Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P4",
      "feature:st.plotly_chart"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHi Streamlit team üëã\n\nI'm experiencing an issue when displaying a Plotly Sankey diagram in Streamlit. When I use `fig.update_layout()` to customize the font ‚Äî specifically `font_family` and `font_color` ‚Äî these settings are not reflected in the Streamlit app using `st.plotly_chart()`. However, when I call `fig.show()`, the chart renders correctly with the intended font and color\n\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11031)\n\n```Python\nimport streamlit as st\nimport plotly.graph_objects as go\n\nfig = go.Figure(data=[go.Sankey(\n    node=dict(\n        pad=15,\n        thickness=20,\n        line=dict(color=\"black\", width=0.5),\n        label=[\"A\", \"B\", \"C\", \"D\"],\n        color=\"blue\"\n    ),\n    link=dict(\n        source=[0, 1, 0, 2, 3],\n        target=[2, 3, 3, 3, 0],\n        value=[8, 4, 2, 8, 4]\n    )\n)])\n\nfig.update_layout(\n    title=\"Sankey Diagram Example\",\n    font_family=\"Times New Roman\",\n    font_color=\"blue\",\n    font_size=14  # This is the only setting that works\n)\n\nst.plotly_chart(fig)  # Font family and color are ignored\n# fig.show()          # Shows correct font and color\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\nAll font-related layout settings (family, color, size) should be applied when rendering the chart via `st.plotly_chart.`\n\n### Current Behavior\n\n* `font_size` works ‚úÖ\n\n* `font_family` and `font_color` are ignored ‚ùå when rendered in Streamlit, but work in native Plotly (`fig.show()`)\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44.1\n- Plotly version: 6.0.1\n- Python version: 3.11.11\n- Operating System: macOS\n- Browser: Brave Version 1.74.50\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11031)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @jjaviergalvez thank you for filing this ticket!\n\nThe theming behavior with the code written here is expected since we apply a Streamlit theme by default for a great out of-the-box experience. However, Streamlit also supports utilizing Plotly theming constructs! Utilize the `theme=None` parameter to do so. In this example, it would become `st.plotly_chart(fig, theme=None)`.\n\nFor additional documentation, take a look at our [doc pages for Plotly theming](https://docs.streamlit.io/develop/api-reference/charts/st.plotly_chart#:~:text=Copy-,Theming,-Plotly%20charts%20are).\n\nLet me know if this solves the issue at hand. Thanks for using Streamlit!"
      },
      {
        "user": "jjaviergalvez",
        "body": "Hi @sfc-gh-bnisco, thanks for getting back to me!\n\nI hadn't noticed that parameter before‚Äîappreciate the pointer. I gave it a try, and while it does change the title styling, it doesn‚Äôt seem to affect the node name text.\n\nHere‚Äôs what I tested:\n\n```\nfig.show()\ncol1, col2 = st.columns(2)\nwith col1:\n    st.plotly_chart(fig)\nwith col2:\n    st.plotly_chart(fig, theme=None)\n```\n\nAnd here‚Äôs what I‚Äôm seeing in the Streamlit app:\n\n<img width=\"1437\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a0e9b254-3d7c-4be5-ad0f-98bb20313c10\" />\n\nThis is the output from`fig.show()`:\n\n<img width=\"1432\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7e53fd5e-e08a-4e77-a77d-35c01a415fe8\" />\n\nInterestingly, even in the native Plotly render, the node font color doesn't change‚Äîbut in the Streamlit app, the font style is noticeably different and harder to read.\n\nLet me know if I might be missing something else or if there's a workaround for the font styling in node labels.\n"
      }
    ]
  },
  {
    "issue_number": 11342,
    "title": "Empty Altair Plots (Unrecognized Dataset)",
    "author": "itsToggle",
    "state": "open",
    "created_at": "2025-05-13T11:49:32Z",
    "updated_at": "2025-06-15T13:34:08Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P2",
      "feature:st.altair_chart"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHey guys,\n\nOver the years a few people have reported a seemingly unreproducable frontend error, where Altair charts are either empty or, in the older streamlit versions, show an \"unrecognized dataset\" error in the fronend only without any indication in the streamlit console. (see https://github.com/streamlit/streamlit/issues/9616)\nThis bug does seem to happen less frequently for me in the lastest releases, but its still happening a few times a day. The Altair chart that is affected is shown as an empty plot without any grid or data, and in the chrome console I can see a message like this:\n\n![Image](https://github.com/user-attachments/assets/8cdf0d6f-ad3e-4bee-8de1-dd4e85d01c82)\n\nThe issue seems to happen more often, if the plotted datasets are larger or if there are more plots to render and if there is fast user interaction that generates the data - so its possibly a miscommunication or synchronization issue between the front- and backend. This has been reported a few times, but I hope I can provide a reproducable example this time. My usecase is often to show dataframes with selectable rows, where I then generate plots based on the selected data - so this is what I used in the code example. I do believe that the error can happen without the dataframe selection part, but this was the easiest way for me to provide an example. \n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11342)\n\n```Python\nimport altair as alt\nimport numpy as np\nimport pandas as pd\nimport streamlit as st\n\n\n@st.cache_data\ndef generate_data(num_rows: int, list_length: int, n: int = 5) -> pd.DataFrame:\n    x_data = [list(np.linspace(0, 10, list_length)) for _ in range(num_rows)]\n    data = {\"x\": x_data}\n    for i in range(1, n + 1):\n        data[f\"y{i}\"] = [list(np.random.rand(list_length)) for _ in range(num_rows)]\n    return pd.DataFrame(data)\n\n\ndef main():\n    st.dataframe(df, on_select=\"rerun\", key=\"selections\")\n    tabs = st.tabs([f\"y{i}\" for i in range(1, 6)])\n    for i, tab in enumerate(tabs, start=1):\n        with tab:\n            st.subheader(f\"Plot y{i} over x\")\n            selected = st.session_state.selections.get(\"selection\", {}).get(\"rows\", [])\n            if selected:\n                x_vals, y_vals, labels = [], [], []\n                for idx in selected:\n                    x_list = df.at[idx, \"x\"]\n                    y_list = df.at[idx, f\"y{i}\"]\n                    x_vals.extend(x_list)\n                    y_vals.extend(y_list)\n                    labels.extend([str(idx)] * len(x_list))\n                plot_df = pd.DataFrame({\"x\": x_vals, \"y\": y_vals, \"row\": labels})\n                chart = (\n                    alt.Chart(plot_df)\n                    .mark_line()\n                    .encode(x=\"x:Q\", y=\"y:Q\", color=\"row:N\")\n                    .properties(width=700, height=400)\n                )\n                st.altair_chart(chart, use_container_width=True)\n            else:\n                st.info(\"Please select at least one row to display the plot.\")\n\n\ndf = generate_data(num_rows=5, list_length=5000, n=5)\nmain()\n```\n\n### Steps To Reproduce\n\n1) run this app and go to the developer tools, open the tabs console\n2) start selecting random rows, switching the selection multiple times in quick succession so there is fast user interaction that changes the plots. Perhaps play with the amount of tabs or the length of the generated datasets, to increase the amount of data that needs to be transmitted.\n3) look for the error messages to appear in the console\n\nThe provided example, at least in my tests, does show the errors in the console but in this simple case doesnt leave the altair plots empty. In my real world application the plots are more complex, with interactive elements and more complex structures. I do think that the underlying issue is the same though, and I hope you can reproduce this.\n\n### Expected Behavior\n\nI expect the plots to always render correctly, and for there to be no errors in the console.\n\n### Current Behavior\n\nThe console shows errors, and at least in more complex cases, the altair charts are staying empty in case of an unrecognized dataset error.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.11.7\n- Operating System: Windows\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11342)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @itsToggle, thanks for your submission!\nI was able to repro the error on speedy user interaction as mentioned. On quick investigation looks like the error is coming from the `insert` call here, but not sure how to best resolve at this point.\nhttps://github.com/streamlit/streamlit/blob/e5655997b212f7bbedb14b0e4c37509d3c03d7da/frontend/lib/src/components/elements/ArrowVegaLiteChart/useVegaEmbed.ts#L155-L159\n"
      },
      {
        "user": "Napuh",
        "body": "Having the same issue. In my usecase, the chart quickly render on hover."
      }
    ]
  },
  {
    "issue_number": 10519,
    "title": "Programmatically update multiselect selected values",
    "author": "MaxMargolis",
    "state": "open",
    "created_at": "2025-02-26T00:51:30Z",
    "updated_at": "2025-06-15T13:03:20Z",
    "labels": [
      "type:enhancement",
      "feature:st.multiselect"
    ],
    "body": "I would like to be able to programmatically update the selected values for the multiselect widget. For example, I have an app where it is common to select upwards of 30 values and have the app's UI update accordingly. It would be handy if I could allow the user to, say, upload a csv file and use its contents to programmatically select values.\nHere is another user looking for similar functionality: [https://discuss.streamlit.io/t/dynamically-updating-the-displayed-selections-in-a-multiselect/66239?u=maxmargolis](url). As you can see that topic got closed without an answer, so I assume it is not currently possible.",
    "comments": [
      {
        "user": "lukasmasuch",
        "body": "@MaxMargolis Curious question: How did you create this issue without using our issue templates? I think we are enforcing templates, is there a bug in Github that allows to create blank issues?"
      },
      {
        "user": "MaxMargolis",
        "body": "Hahaha. I hit this link:\n\n<img width=\"538\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/01c868e2-a0b9-4db5-a3ad-f6d24d2011c7\" />\n\n"
      },
      {
        "user": "jrieke",
        "body": "Can't you just do this with session state, e.g. with something like this:\n\n```python\nimport streamlit as st\n\ndef select_b_c():\n    st.session_state.multi = [\"B\", \"C\"]\n    \nst.multiselect(\"Multiselect\", [\"A\", \"B\", \"C\"], key=\"multi\")\nst.button(\"Select B and C\", on_click=select_b_c)\n```\n\nOr do you want something different?"
      }
    ]
  },
  {
    "issue_number": 11572,
    "title": "Add a command or menu item to help developers diagnose their environments",
    "author": "sfc-gh-dmatthews",
    "state": "open",
    "created_at": "2025-06-09T22:12:32Z",
    "updated_at": "2025-06-15T13:01:10Z",
    "labels": [
      "type:enhancement",
      "area:utilities"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nCurrently, Streamlit apps have an \"About\" dialog that shows the current Streamlit version by default. By default, this is visible to viewers and developers.\n\nIt would be nice to have a command and/or menu item to help developers see how their environment is resolved. A command would be helpful for deployed apps so developers have an option that doesn't require them to change their app's configuration. A menu item would be helpful since it would be accessible to developers automatically in development mode without changing their app's code.\n\n\n### Why?\n\nWhen building and deploying apps, an environment may be different than what a developer believes it to be. In some cases, this mismatch may happen silently, especially if a host platform has some UI element that may give a false impression. Therefore, it's good to have concrete proof within a running app to know how the environment is configured.\n\n### How?\n\nThe following example app shows the kind of information that could be added to About (or a similar menu item) and/ or displayed in a command similar to `st.help`.\n\n```python\nimport streamlit as st\nimport sys\nimport os\nimport pkg_resources\n\nst.write(f\"The version of Streamlit is {st.__version__}.\")\nst.write(f\"The version of Python is {sys.version}.\")\n\nst.write(\"The following Python packages are installed.\")\nst.dataframe(pkg_resources.working_set) # Or setuptools\n\nst.write(f\"The root of your working directory contains the following:\")\nst.dataframe(os.listdir())\n```\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11572)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "Related to https://github.com/streamlit/streamlit/issues/119"
      }
    ]
  },
  {
    "issue_number": 4859,
    "title": "st.cache_data ignores ttl argument when persist='disk'",
    "author": "franekp",
    "state": "open",
    "created_at": "2022-06-13T08:28:26Z",
    "updated_at": "2025-06-15T12:59:52Z",
    "labels": [
      "type:enhancement",
      "feature:cache"
    ],
    "body": "### Summary\r\n\r\nst.experimental_memo ignores ttl argument when persist='disk'. I have set ttl=`60*60*24`, but the data has never been updated besides the first time.\r\n\r\n### Steps to reproduce\r\nUse persist='disk' and set ttl to something.\r\n\r\n**Expected behavior:**\r\nData in cache should be updated.\r\n\r\n### Is this a regression?\r\nThis is a regression with regards to st.cache.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.4.0\r\n- Python version: 3.8.5\r\n- Using Conda? PipEnv? PyEnv? Pex? No.\r\n- OS version: Ubuntu x86-64\r\n- Browser version: Firefox 100.0.2 (64-bit)",
    "comments": [
      {
        "user": "willhuang1997",
        "body": "Hi @franekp , you're saying that 1.10 streamlit version is not working for st_experimental_memo but it was working with version 1.4? Or are you saying with streamlit version 1.4.0, it doesn't work and the experimental_memo was working with a version before 1.4.0? "
      },
      {
        "user": "franekp",
        "body": "I am saying that it doesn't work in version 1.4.0. I have written that it is a regression wrt. st.cache - previous version of st.experimental_memo. TTL has been working in st.cache. I suppose the code that handles that TTL should be similar in these two functions."
      },
      {
        "user": "franekp",
        "body": "> you're saying that 1.10 streamlit version is not working for st_experimental_memo but it was working with version 1.4?\r\n\r\nI have not mentioned 1.10 at all in my post, why are you asking?\r\n\r\nWe are using 1.4.0, because:\r\n1. We consider URL persistence and sane cache-ing (st.experimental_memo) as a basic functionality essential to all our use-cases.\r\n2. This functionality has currently no stability guarantees due to being in the \"experimental\" namespace.\r\n\r\nTherefore, we are pinning version of Streamlit because we rely on it for our day-to-day work and don't want to deal with frequent breakages."
      }
    ]
  },
  {
    "issue_number": 4675,
    "title": "Time Input Function doesn't support each single time",
    "author": "murattasci06",
    "state": "open",
    "created_at": "2022-05-03T07:07:22Z",
    "updated_at": "2025-06-15T12:59:18Z",
    "labels": [
      "type:enhancement",
      "feature:st.time_input"
    ],
    "body": "Is there any way to show the time menu like below on streamlit? This menu should show every single hour and minute. Other hand streamlit time input provides only pre defined time arrivals like 08:00 08:15 08:30 08:45 etc. I don't want this. How can I solve this problem?\r\nHere the details and issue related this:\r\nhttps://stackoverflow.com/questions/72054228/streamlit-time-input-function-doesnt-support-each-single-time\r\nƒ∞f the above feature is not possible the enhancement is required for number input. Because there is no way for choosing every single time value as 00:00 format on streamlit . Here the related issue link:\r\nhttps://stackoverflow.com/questions/72069754/format-changing-problem-of-number-input-in-streamlit",
    "comments": [
      {
        "user": "murattasci06",
        "body": "\r\n![streamlit](https://user-images.githubusercontent.com/71190059/166415963-c264e858-6de6-44b7-a9bc-546e39d48ad6.png)\r\n\r\n"
      },
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-4675)\n"
      }
    ]
  },
  {
    "issue_number": 5659,
    "title": "Password fields don't update on tab when using 1password browser extension",
    "author": "blackary",
    "state": "open",
    "created_at": "2022-11-08T15:34:27Z",
    "updated_at": "2025-06-15T12:57:48Z",
    "labels": [
      "type:enhancement",
      "feature:st.text_input"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nThere's some strange interaction between the 1password browser extension and the password field. I'm not at all confident this is a streamlit issue, but wanted to make note of it in case there's an apparent fix on the streamlit side.\r\n\r\nWhen adding a password field and using tab to navigate around a form, the password value entered does not get returned back to the app when using the 1password browser extension. If the extension is disabled, it works as expected. I did check the value of the input using `document.getElementsByTagName(\"input\")[0].value` and it had the value as expected.\r\n\r\n### Reproducible Code Example\r\n\r\n```Python\r\nimport streamlit as st\r\n\r\npwd = st.text_input(\"Password\", type=\"password\")\r\n\r\nif st.button(\"Submit\"):\r\n    st.write(\"Password:\", pwd)\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n1. Enable the 1password browser extension\r\n1. Click on password input\r\n1. Type some text\r\n1. Hit tab to go to button\r\n1. Hit enter to submit\r\n\r\n### Expected Behavior\r\n\r\nPrint the password entered\r\n\r\n### Current Behavior\r\n\r\nPrints `password: ` as if a password had not been entered\r\n\r\nNote that the input borders remain red as if they haven't been submitted.\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.14.0\r\n- Python version: 3.10.3\r\n- Operating System: OSX\r\n- Browser: Chrome 107.0.5304.87\r\n- Virtual environment: pip + venv\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_\r\n\r\n### Are you willing to submit a PR?\r\n\r\n- [ ] Yes, I am willing to submit a PR!\r\n\r\n---\r\n\r\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\r\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-5659)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "Related to https://github.com/streamlit/streamlit/issues/10115"
      }
    ]
  },
  {
    "issue_number": 11037,
    "title": "Watch changes in uv workspaces",
    "author": "NixBiks",
    "state": "open",
    "created_at": "2025-04-04T11:21:50Z",
    "updated_at": "2025-06-15T12:51:53Z",
    "labels": [
      "type:enhancement",
      "area:deployment",
      "area:backend"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nSupport watching/hot reloading of uv workspaces modules.\n\n### Why?\n\n`uv` have become extremely popular package manager (for good reason). I'm often leaning into using [`uv workspaces`](https://docs.astral.sh/uv/concepts/projects/workspaces/). However I can't get it working properly with streamlit's watch feature.\n\n### How?\n\nI'm not sure how to do it unfortunately.\n\n### Additional Context\n\nI've made this [repo](https://github.com/NixBiks/uv-workspaces-with-streamlit) is to investigate how to make [`uv workspaces`](https://docs.astral.sh/uv/concepts/projects/workspaces/) work properly with `streamlit`s hot reload feature.\n\n### Project structure\n\n```\n‚îú‚îÄ‚îÄ apps\n‚îÇ   ‚îî‚îÄ‚îÄ streamlit-app\n‚îÇ       ‚îú‚îÄ‚îÄ main.py\n‚îÇ       ‚îî‚îÄ‚îÄ pyproject.toml\n‚îú‚îÄ‚îÄ packages\n‚îÇ   ‚îî‚îÄ‚îÄ hello-world\n‚îÇ       ‚îú‚îÄ‚îÄ pyproject.toml\n‚îÇ       ‚îî‚îÄ‚îÄ src\n‚îÇ           ‚îî‚îÄ‚îÄ hello_world\n‚îÇ               ‚îú‚îÄ‚îÄ __init__.py\n‚îÇ               ‚îî‚îÄ‚îÄ py.typed\n‚îú‚îÄ‚îÄ pyproject.toml\n‚îî‚îÄ‚îÄ uv.lock\n```\n\n\n### The problem\n\nIf I run my streamlit app\n\n```\nuv run streamlit run apps/streamlit-app/main.py\n```\n\nthen the hot reload works just fine if I make changes in `apps/streamlit-app`. However any changes to `packages/hello-world` is not picked up.\n\n\nStreamlit suggests to update [`PYTHONPATH`](https://docs.streamlit.io/knowledge-base/using-streamlit/streamlit-watch-changes-other-modules-importing-app) but that's not working together with uv workspaces AFAIK.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11037)\n"
      }
    ]
  },
  {
    "issue_number": 6404,
    "title": "Race conditions resulting in KeyError in module reloading",
    "author": "martinal",
    "state": "open",
    "created_at": "2023-03-31T13:42:55Z",
    "updated_at": "2025-06-15T12:45:20Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "area:backend"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe streamlit module reloading has race conditions that lead to \"KeyError: 'mylib'\" from deep inside python import machinery. It has been mentioned in passing in other issues before but here I'm making it reproducible.\n\n### Reproducible Code Example\n\n```Python\nA single code example is not enough to reproduce, but I managed to create a stress test setup that should reproduce the issue quickly by simulating editing files in the background with randomized timing while streamlit is trying to keep up with hotreloading.\n```\n\n\n### Steps To Reproduce\n\n1. Go to https://github.com/martinal/streamlit-stresstest\r\n2. Download repo\r\n3. Run stress test per the repo README \n\n### Expected Behavior\n\nNo exceptions.\n\n### Current Behavior\n\n```\r\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Traceback (most recent call last) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\r\n  /.../streamlit-stresstest/venv/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py:565 in _run_script                                        \r\n                                                                                        \r\n  /.../streamlit-stresstest/main.py:5 in <module>                                   \r\n\r\n...                                                                                        \r\n  ‚ù±  5 import mylib                                                                     \r\n...\r\n\r\n  in _find_and_load:1027                                                                \r\n  in _find_and_load_unlocked:1006                                                       \r\n  in _load_unlocked:699                                                                 \r\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\r\nKeyError: 'mylib'\r\n```\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.20\r\n- Python version: 3.10\r\n- Operating System: Linux\r\n- Browser: Any\r\n- Virtual environment: Minimal plus editable modules in PYTHONPATH, see linked gitrepo.\r\n\n\n### Additional Information\n\nI won't pretend to comprehend the full picture here, this is tricky stuff! Some clues I've found:\r\n\r\nThe KeyError issue was mentioned in passing in the comments on this issue in October 2022 but that issue is about another topic:\r\nhttps://github.com/streamlit/streamlit/issues/4595\r\n\r\nA possible source of the problem was pointed out in this issue in 2020:\r\nhttps://github.com/streamlit/streamlit/issues/1430\r\n\r\nThe problem probably stems from non-threadsafe manipulation of sys.modules such as in this code:\r\nhttps://github.com/streamlit/streamlit/blob/develop/lib/streamlit/runtime/scriptrunner/script_runner.py#L558\r\n\r\nThis is similar to what you can optionally have the runpy module do with alter_sys=True, explained in the python documentation as not threadsafe here:\r\nhttps://docs.python.org/3/library/runpy.html#runpy.run_module\r\n\r\nA better solution then might be using runpy.run_module with alter_sys=False. This will however have some side effects, as you mention in comments in script_runner.py. I may be willing to help out fixing this but these side effect issues seem to run deep so the streamlit core developers would need to give their blessing to the approach.\n\n### Are you willing to submit a PR?\n\n- [X] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "AnOctopus",
        "body": "Thanks for providing the reproduction code, I was able to see the attribute error after tweaking the edit script to run a bit faster. \r\n\r\nSince there are some reasons to want the path to be updated, it might not be viable to switch to `run_module` with the sys modification turned off, but I haven't dived into the exact behavioral requirements of our import machinery in about a year. I'd be happy to work with you on a PR for this, or once I have more slack I might look into it myself, since this kind of thing is tricky to work on in a very fun way."
      },
      {
        "user": "martinal",
        "body": "Thanks for the fast response. What are the reasons for keeping the sys modifications? Is it only to allow the ```__name__ == \"__main__\"``` notation or is there something else as well?\r\n\r\nI do understand you can't just switch behaviour, some user code could break for sure. Myself I would be happy with a configuration option to skip sys modifications that defaults to current behaviour if that's possible. Depends on how deep this goes?"
      },
      {
        "user": "martinal",
        "body": "If it's only to set ```__name__```, there's an argument for that:\r\n```\r\nrunpy.run_module(\"pagename\", run_name=\"__main__\")\r\n```"
      }
    ]
  },
  {
    "issue_number": 10229,
    "title": "Page Refresh detection and data persistance between refresh page",
    "author": "learncodingforweb",
    "state": "open",
    "created_at": "2025-01-22T16:13:29Z",
    "updated_at": "2025-06-15T12:44:02Z",
    "labels": [
      "type:enhancement",
      "area:server",
      "area:execution-model"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nCurrently, \n- There is no way to detect page refresh \n- There is no way to persists data between page refresh\n\n### Why?\n\nI want to open serial port manually and it should be keep opened serial port object, even user press page refresh button on browser. secondly it should close it on page exist.\n\n### How?\n\nCurrently i am using @st.cache_resource to open it by opening fixed serial port and close it using atexit.register(app_closed)\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-10229)\n"
      },
      {
        "user": "eaudet",
        "body": "This is very important. We have tried using threads to handle long running process. When the page refreshes, the thread is also killed.  We thought of using a persistent websocket connection but I think one the page is refreshed, the http session is renewed."
      }
    ]
  },
  {
    "issue_number": 10379,
    "title": "Possibility of a hub/server for all Streamlit apps created",
    "author": "FerriLuli",
    "state": "open",
    "created_at": "2025-02-12T13:46:14Z",
    "updated_at": "2025-06-15T12:42:04Z",
    "labels": [
      "type:enhancement",
      "area:deployment"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nHi everyone, hope you all are doing well.\nI have been using Streamlit in some little projects and upscaled it to bigger projects over the time, and I have to say it works very well with my type of use. \nRecently I had an idea to make a hub (one or two Streamlit pages, one welcome page and one with all apps to choose which to use) for my Streamlit apps. So I started looking into Streamlit docs to see if it already had this server/hub feature builded into it, I found it to not be the case.\nIn my reaserch I found an issue adressed to the same requirement (Issue #2709) and apparently te user Jayden-Elliott made a project in a repo named streamlit-server that brings this feature to life, but I still wanted it to be integrated with all the Streamlit vast enviroment.\n\n### Why?\n\nMake a hub that contains all your created apps with the possibility of making user authentication, put text and images to present the hub and host all of your apps inside of it. \n\n### How?\n\nI think in this case it is more of structure case than a st command case, I think it like the \"Pages\" folder, a structure in a folder that categorizes it as the hub like Jayden made it. \n\n### Additional Context\n\nhttps://github.com/Jayden-Elliott/streamlit-server",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-10379)\n"
      }
    ]
  },
  {
    "issue_number": 9021,
    "title": "Disable rerun on user resize window or interact with application (froze interface) when heavy tasks are running, with global thread state",
    "author": "vquilon",
    "state": "open",
    "created_at": "2024-07-03T10:20:11Z",
    "updated_at": "2025-06-15T12:41:39Z",
    "labels": [
      "type:enhancement",
      "area:threading/processing"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nI'm just wondering if is possible to **disable** reruning on user resize window or interact with application (froze interface) when heavy tasks are running, with global thread state or similar.\r\n\r\nBecause, I already see all documentation, blogs and issues related, but solutions are not fitted to our problem.\r\n\r\n### Why?\r\n\r\n# Context\r\nWe have a Front (streamlit) with connection with other micro-services (FastAPIs), and I know we can change to an event service approach, but is more suitable for us in this moment, to have an option in streamlit to not reruning the application if it isrunning specific tasks in the script thread.\r\n\r\n# Problem\r\nSo when my application (Streamlit) sends a request streaming the response of a micro-service, if I a user cliks or resizes, or interacts with other component in the interface, streamlit it raises a StopException, because has to rerun, but my streaming response is still running and updating the interface, we don't want to rerun or take care of user interaction until specific process ends.\r\n\r\n### How?\r\n\r\n# Feature Propose\r\nWe noted that this behaviour is more notorious in the last update in streamlit~=1.36.0. So we just wondering, if there is a way or can be a way to encapsulates some runing process, and do not stops until it ends. In addition, we want to use all streamlit stuff inside that process, because want to update the interface or session_state, while we recieve the streaming response.\r\n\r\nA functional approach can be to have a global lock, that all the code inside this block, cannot be stoppable until it ends, so interactions when enter on this blocks are blocked or enqueued, or give to the developer the control to manage this rerun.\r\n\r\nI know that blocks of freeze interaction is not user friendly, but sometimes it needed, maybe showing in the interface a loader dialog or something similar, to make understand to the user that this cannot be cancelable or similar\r\n\r\n### Additional Context\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-9021)\n"
      }
    ]
  },
  {
    "issue_number": 9638,
    "title": "non-edited files with class definitions appear to be re-imported whenever any project code is changed",
    "author": "HoopyFreud",
    "state": "open",
    "created_at": "2024-10-09T19:03:22Z",
    "updated_at": "2025-06-15T12:41:15Z",
    "labels": [
      "type:docs",
      "area:execution-model"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nThere seems to be an issue where, even when the class is defined in an external module, isinstance fails. Per https://docs.streamlit.io/develop/concepts/design/custom-classes, \"As long as you are not editing the file where your class is defined, Streamlit will not re-import it with each rerun.\" But I am finding that the re-import seems to happen when any code anywhere in the project is changed, breaking isinstance\r\n\r\n### Reproducible Code Example\r\n\r\nhttps://github.com/HoopyFreud/st-isinstance-example\r\n\r\n### Steps To Reproduce\r\n\r\n1. Edit interactive_page.py (just add a space or newline) while Streamlit is running\r\n2. Save the file\r\n3. Re-run the page in Streamlit when prompted\r\n\r\n### Expected Behavior\r\n\r\nisinstance returns true because testclass is defined in a different file\r\n\r\n### Current Behavior\r\n\r\nisinstance returns false\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.39.0\r\n- Python version: 3.11.9\r\n- Operating System: Windows\r\n- Browser: Firefox",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9638)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "Thanks for reporting this issue. I was able to reproduce it with 1.39 and older versions (e.g., 1.26). I think it is expected that the class gets re-initialized if you change the code anywhere in your project.  I'm not sure if there is a good way to prevent this. We should probably update our docs to better reflect this (cc @sfc-gh-dmatthews)."
      }
    ]
  },
  {
    "issue_number": 6779,
    "title": "Execute streamlit scripts/apps by Python without any warning as a pure script",
    "author": "xareelee",
    "state": "open",
    "created_at": "2023-06-02T10:09:00Z",
    "updated_at": "2025-06-15T12:39:43Z",
    "labels": [
      "type:enhancement",
      "area:deployment",
      "area:backend"
    ],
    "body": "### Problem\r\n\r\nThe streamlit run a Python script as following:\r\n\r\n```\r\n$ streamlit run app.py\r\n```\r\n\r\nThis will create a server and we can browse the results in a web page.\r\n\r\nHowever, I want to use `streamlit` as a **logging** tool to print out the results of each step when debugging, and deploy the scripts without any streamlit server.\r\n\r\nFor example, I write a web crawler, which should be run in **headless mode** (no server/browser required), and when I develop/debug that script, I want to print out the results for each step in the script. The `streamlit` is a **good visualization logging tool for complex results** (e.g. JSON, dataframe...), and we can view the well organized results in the browser instead of the console. For some scenarios, this will be a better dev tool than Jupyter Notebook or `print()`.\r\n\r\nCurrently, I can run the script by Python directly, but it shows warnings which I don't want:\r\n\r\n```\r\n# instead of `streamlit run`\r\n$ python app.py\r\n2023-06-02 17:37:09.208 \r\n  Warning: to view this Streamlit app on a browser, run it with the following\r\n  command:\r\n\r\n    streamlit run uber_pickups.py [ARGUMENTS]\r\n2023-06-02 17:37:09.208 No runtime found, using MemoryCacheStorageManager\r\n2023-06-02 17:37:09.210 No runtime found, using MemoryCacheStorageManager\r\n```\r\n\r\n## Question and Feature Request\r\n\r\nHow can I silence the warning and make sure that the `streamlit` code in that script does not do anything while being executed by `python` (no performance impact/overhead)?\r\n\r\nI don't want to remove the streamlit \"logging\" code when deploying, and when I need to debug that script, I just need to run it with `streamlit run app.py` again.\r\n\r\n\r\n",
    "comments": [
      {
        "user": "maxibor",
        "body": "Same as #6620 "
      }
    ]
  },
  {
    "issue_number": 11370,
    "title": "Missing Submit Button Issue",
    "author": "rm17tink",
    "state": "open",
    "created_at": "2025-05-15T13:15:26Z",
    "updated_at": "2025-06-15T11:30:24Z",
    "labels": [
      "feature:st.form",
      "type:no-streamlit-issue",
      "feature:st.form_submit_button",
      "area:snowbooks"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI am trying to build streamlit(1.39.1) within a notebook(snowflake) and when I build out the form in the cell it will create the error(really only a warning)\n\n```\nThis form has no submit button, which means that user interactions will never be sent to your Streamlit app.\nTo create a submit button, use the st.form_submit_button() function.\nFor more information, refer to the documentation for forms.\n```\n\n\nEven a small test case does the same thing. I put the two choices in a dropdown but on my actual I even tried to have 2 buttons \n\nFYI:  It will allow the user to actually execute but it performs the error both on the run of the cell and the execution of the button \n\n### Reproducible Code Example\n\n```Python\n\nstate_codes = [\"NY\", \"CA\", \"TX\"]\n\nimport streamlit as st\n\nwith st.form(\"query_builder_form\"):\n    \n    st.header(\"üîé Enter Your Filters\")\n    \n    col1, col2 = st.columns(2)\n    \n    with col1:\n        dgns_cd_filter = st.text_input(\"Enter Report Diagnosis Code:\", \"All\")\n    \n    with col2:\n        blg_st_filter = st.selectbox(\"State Code Set:\", state_codes)\n    \n    action = st.selectbox(\"Choose Action\", [\"Generate SQL Script\", \"Run Report\"])\n    submitted = st.form_submit_button(\"Submit\")\n    \n    if submitted:\n        st.write(\"Form submitted!\")\n```\n\n### Steps To Reproduce\n\n1. run in cell \n2. Click and see error message\n\n\n### Expected Behavior\n\nId assume the formatting is perfect and the form with form buttons work well.\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.39.1\n- Python version: 3.9\n- Snowflake: latest(run by org)\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11370)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @rm17tink thanks for filing this. I've brought it to the notebook team's attention."
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hello again @rm17tink we're having some trouble trying to reproduce this issue.\n\n![Image](https://github.com/user-attachments/assets/428ab4ca-89d9-4767-b0a5-2a82adf16903)\n\nDoes this reproduce with a newly created notebook?"
      }
    ]
  },
  {
    "issue_number": 2975,
    "title": "Server shutdown fails to exit while processing infinite loop",
    "author": "AnOctopus",
    "state": "open",
    "created_at": "2021-03-18T00:13:56Z",
    "updated_at": "2025-06-15T11:10:19Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "area:backend"
    ],
    "body": "### Summary\r\n\r\nPython process does not exit when shutting down the server while processing an infinite loop in a script\r\n\r\n### Steps to reproduce\r\n\r\nCode snippet: (using a recent SessionState prototype, before I fixed the implementation)\r\n\r\n```\r\nimport streamlit as st\r\n\r\nstate = st.get_state()\r\nst.write(\"printed something\")\r\nst.write(\"foobar\" in state) # this line infinite looped before I fixed the implementation\r\n```\r\n\r\nIf applicable, please provide the steps we should take to reproduce the bug:\r\n\r\n1. Run the above snippet against the [previous state prototype](https://github.com/AnOctopus/streamlit/tree/c17d119aef34ae1f15f0e7dff5051469d8bb745d) (I ran the react server as a separate process from the dev install of that commit, rather than running them together via a wheel, don't know if that affects this)\r\n2. C-c in the shell running the python server\r\n\r\n**Expected behavior:**\r\n\r\nPython server stops, process exits and control returns to my shell\r\n\r\n**Actual behavior:**\r\n\r\nLogs indicate server goes into the STOPPING state and then almost immediately the STOPPED state, but after 20 seconds it still has not exited the process. Sending SIGTERM repeatedly afterwards fails to cause the process to exit, and SIGKILL was required to regain control.\r\n\r\n### Is this a regression?\r\n\r\nUnknown\r\n\r\n### Debug info\r\n\r\n- Streamlit version: Session state prototype, as linked above, development install\r\n- Python version: 3.8.6\r\n- Using Conda? PipEnv? PyEnv? Pex?: Pipenv\r\n- OS version: Arch Linux\r\n- Shell version: Zsh 5.8\r\n",
    "comments": [
      {
        "user": "kmcgrady",
        "body": "Interesting. I wonder if the ScriptRunner is closing the thread when it receives the stop signal @AnOctopus "
      },
      {
        "user": "tvst",
        "body": "AFAICT this is working as expected.\r\n\r\nWhen you ctrl-c out of Streamlit (and at some other points, like when you click \"stop\" in the UI) we need to kill running thread(s), but Python doesn't actually have a way to kill threads. \r\n\r\nSo what we do is:\r\n1. Set a boolean when we want to kill a thread\r\n2. Before every st.foo command, we check if the thread running that command has the boolean set to True\r\n3. If True, raise a special exception. (Because exceptions kill threads)\r\n    _So the thread is now stopped ‚Äî yay!_\r\n4. Handle the exception at the parent thread if needed\r\n\r\nThis works well any script where the interpreter often encounters an st.foo command. And it doesn't work at all when you have a loop that has no st.foo command. \r\n\r\nIn this case, the loop has no st command, so it runs forever. "
      },
      {
        "user": "robertmartin8",
        "body": "Is there a graceful way of shutting down a streamlit app without killing the terminal?\r\n\r\n![Screenshot 2021-06-23 at 10 34 41](https://user-images.githubusercontent.com/11792905/123073872-ba96ae80-d40e-11eb-9eb9-d907c2b03b41.png)\r\n"
      }
    ]
  },
  {
    "issue_number": 9239,
    "title": "Old AI response duplicating (faded)",
    "author": "chrissimmerman",
    "state": "open",
    "created_at": "2024-08-08T13:50:23Z",
    "updated_at": "2025-06-15T11:09:45Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.spinner",
      "feature:st.chat_message",
      "area:execution-model"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-9239)\r\n\r\nI have a langchain RAG chatbot app where the user can ask the AI assistant questions. A bug I am consistently running into is that the previous AI response duplicates when the user inputs a question. The response is faded for some reason, and it disappears once the new AI message is displayed in the app. Please see the screenshot below:\r\n\r\n![bug](https://github.com/user-attachments/assets/400a5ecb-f804-467d-8775-574d88db26ef)\r\n\r\n\r\n### Reproducible Code Example\r\n\r\n```Python\r\nimport streamlit as st\r\nimport uuid\r\nfrom langchain_community.chat_message_histories import StreamlitChatMessageHistory\r\nfrom langchain_core_runnables.history import RunnableWithMessageHistory\r\n\r\n# Generate random uuid for session_id\r\nif 'session_id' not in st.session_state:\r\n   st.session_state.session_id = str(uuid.uuid4())\r\nsesson_id = st.session_state.session_id\r\n\r\n# Create Streamlit configuration with session_id\r\nconfig = {\"configurable\": {\"session_id\": session_id}}\r\n\r\n# Create Streamlit Chat Message History\r\nmsgs = StreamlitChatMessageHistory(key=\"chat_messages\")\r\n\r\n# Create LLM Chains, where final chain has streamlit chat message history\r\n[code cut for brevity...]\r\n\r\nconversational_rag_chain = RunnableWithMessageHistory(\r\n   rag_chain,\r\n   lambda session_id: msgs,\r\n   input_messages_key=\"input\",\r\n   history_messages_key=\"chat_history\",\r\n   output_messages_key=\"answer\"\r\n)\r\n\r\n# Show chat history in streamlit UI\r\nfor msg in msgs.messages:\r\n   if msg.type == \"ai\":\r\n      st.chat_message(msg.type, avatar=\"images/assistant.png\").write(msg.content.replace(\"$\", \"\\$\"))\r\n   else:\r\n      st.chat_message(msg.type).write(msg.content.replace(\"$\", \"\\$\"))\r\n\r\n# Get user input and show it (executes for each user input)\r\nif user_input := st.chat_input(\"Ask a question:\"):\r\n    st.chat_message(\"human\").write(user_input.replace(\"$\", \"\\$\"))\r\n\r\n    # Begin AI response code block\r\n    with st.chat_message(\"ai\", avatar=\"images/assistant.png\"):\r\n        with st.spinner(\"Thinking...\"):\r\n            response_container = st.empty()\r\n            # Get AI response (config is needed to pass streamlit session_id)\r\n            response = conversational_rag_chain.invoke(\r\n               {\"input\": user_input},\r\n               config=config\r\n            )\r\n            # Fill empty container with AI response, replace \"$\" with ‚Äú\\$‚Äù to prevent latex formatting\r\n            response_container.write(response[\"answer\"].replace(\"$\", \"\\$\"))\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### Current Behavior\r\n\r\n_No response_\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version:\r\n- Python version:\r\n- Operating System:\r\n- Browser:\r\n\r\n\r\n### Additional Information\r\n\r\nThis bug was reported on the streamlit forum, but was never given a fix: https://discuss.streamlit.io/t/old-response-still-displaying-faded/68553",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9239)\n"
      },
      {
        "user": "zalexk",
        "body": "Accrding to my test results, the bug emerges in version 1.33.0. I also encounter the same bug. When I downgrade my streamlit version to 1.32.0, the bug seemingly disappears.\r\n\r\nYou may also downgrade to version 1.32.0 if no new features are used in your projects."
      },
      {
        "user": "chrissimmerman",
        "body": "> Accrding to my test results, the bug emerges in version 1.33.0. I also encounter the same bug. When I downgrade my streamlit version to 1.32.0, the bug seemingly disappears.\r\n> \r\n> You may also downgrade to version 1.32.0 if no new features are used in your projects.\r\n\r\nI cannot downgrade because I am using the new st.feedback function. "
      }
    ]
  },
  {
    "issue_number": 11357,
    "title": "Connection error: Failed to process a Websocket message. Error: Cached ForwardMsg",
    "author": "thisisbhupendrasingh",
    "state": "open",
    "created_at": "2025-05-14T06:20:47Z",
    "updated_at": "2025-06-15T11:08:53Z",
    "labels": [
      "type:bug",
      "area:frontend",
      "status:confirmed"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhile navigating between the sidebar navigation pages this error comes sometimes in a pop up mode.\n\nConnection error\nFailed to process a Websocket message. Error: Cached ForwardMsg MISS [hash=2bfb624899ce8fccd8366a84b9f07fb1]. This is not expected to happen. Please [report this bug](https://github.com/streamlit/streamlit/issues).\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45\n- Python version: 3.11.7\n- Operating System:  Windows 11 pro\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11357)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @thisisbhupendrasingh, thanks for your submission! We made a fix in the `1.45.1` patch release which should hopefully resolve this issue - could you upgrade and let us know if you still encounter the error?"
      },
      {
        "user": "itsToggle",
        "body": "Hey guys, Im still encountering this in 1.45.1 after the patch. Its again fast user interaction, like with the missing dataset in https://github.com/streamlit/streamlit/issues/11342"
      }
    ]
  },
  {
    "issue_number": 7452,
    "title": "Passing the Authentication token from domain A to domain B, CORS issue ",
    "author": "spicoflorin",
    "state": "open",
    "created_at": "2023-09-29T12:32:07Z",
    "updated_at": "2025-06-15T11:08:24Z",
    "labels": [
      "type:enhancement",
      "feature:authentication"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\n1) We have an application A hosted on the domain a.my-domain.com that incorporates an iframe to the application b.my-domain.com, which is implemented with Streamlit. \r\n2) a.my-domain.com wants to send an X-Access-Token via the header to b.my-domain.com. \r\n\r\n3) b.my-domain.com needs to retrieve the information from the header and grant access to the application. \r\n\n\n### Why?\n\nProblem:\r\n\r\n Access to fetch at 'a.my-domain.com' from origin 'https://a.my-domain.com/' has been blocked by CORS (Cross-Origin Resource Sharing) policy. The response to the preflight request does not pass the access control check, as there is no 'Access-Control-Allow-Origin' header present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\n\n### How?\n\nPlease advice how to pass the CORS error and how to get the headers values in the app hosted on b.my-domain.com.\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-7452)\n"
      }
    ]
  },
  {
    "issue_number": 10503,
    "title": "unicode error",
    "author": "madhukarjadhav736",
    "state": "open",
    "created_at": "2025-02-25T07:19:20Z",
    "updated_at": "2025-06-15T11:07:50Z",
    "labels": [
      "type:bug",
      "area:windows",
      "status:confirmed",
      "priority:P4"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nwindows10 pro, python13.2, streamlit 1.40, error while importing heyoo module like...\n\n.\n.\n.\nthere is no error if run with windows10 pro, python9/11, streamlit1.39/1.38\n\n### Reproducible Code Example\n\n```Python\nfrom heyoo import WhatsApp\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\nUnicodeEncodeError: 'utf-8' codec can't encode characters in position 155-156: surrogates not allowed\nTraceback:\nFile \"C:\\Users\\niramay\\PycharmProjects\\clinic\\.venv\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\exec_code.py\", line 121, in exec_func_with_error_handling\n    result = func()\nFile \"C:\\Users\\niramay\\PycharmProjects\\clinic\\.venv\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 591, in code_to_exec\n    exec(code, module.__dict__)\n    ~~~~^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\niramay\\PycharmProjects\\clinic\\pages\\zPrescription.py\", line 23, in <module>\n    import util\nFile \"C:\\Users\\niramay\\PycharmProjects\\clinic\\util.py\", line 39, in <module>\n    from heyoo import WhatsApp\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:1.40\n- Python version:13.2\n- Operating System:windows10pro\n- Browser:chrome latest\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10503)\n"
      },
      {
        "user": "sfc-gh-lwilby",
        "body": "Hi @madhukarjadhav736, \n\nI've reproduced this issue and narrowed it down to python 3.13 with any version of Streamlit. \n\nAre you able to use python 3.12.9 as a mitigation?\n\nLaura"
      },
      {
        "user": "madhukarjadhav736",
        "body": "Yes, thank u for help!\r\n\r\nOn Tue, 25 Feb 2025, 23:27 Laura Wilby, ***@***.***> wrote:\r\n\r\n> Hi @madhukarjadhav736 <https://github.com/madhukarjadhav736>,\r\n>\r\n> I've reproduced this issue and narrowed it down to python 3.13 with any\r\n> version of Streamlit.\r\n>\r\n> Are you able to use python 3.12.9 as a mitigation?\r\n>\r\n> Laura\r\n>\r\n> ‚Äî\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/streamlit/streamlit/issues/10503#issuecomment-2682862433>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/A2C2ZYJPUZQDEQLQSZIJS532RSVITAVCNFSM6AAAAABXZ37VKOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMOBSHA3DENBTGM>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n> [image: sfc-gh-lwilby]*sfc-gh-lwilby* left a comment\r\n> (streamlit/streamlit#10503)\r\n> <https://github.com/streamlit/streamlit/issues/10503#issuecomment-2682862433>\r\n>\r\n> Hi @madhukarjadhav736 <https://github.com/madhukarjadhav736>,\r\n>\r\n> I've reproduced this issue and narrowed it down to python 3.13 with any\r\n> version of Streamlit.\r\n>\r\n> Are you able to use python 3.12.9 as a mitigation?\r\n>\r\n> Laura\r\n>\r\n> ‚Äî\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/streamlit/streamlit/issues/10503#issuecomment-2682862433>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/A2C2ZYJPUZQDEQLQSZIJS532RSVITAVCNFSM6AAAAABXZ37VKOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMOBSHA3DENBTGM>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n"
      }
    ]
  },
  {
    "issue_number": 9428,
    "title": "`TypeError` when requesting `_stcore/metrics` with sqlalchemy engine in session state",
    "author": "greg-el",
    "state": "open",
    "created_at": "2024-09-09T17:06:40Z",
    "updated_at": "2025-06-15T11:07:23Z",
    "labels": [
      "type:bug",
      "area:dependencies",
      "priority:P4",
      "area:integrations"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nRequesting `/_stcore/metrics` will throw a `TypeError` if an instance of [Engine](https://github.com/sqlalchemy/sqlalchemy/blob/75ab6b370034e69bc798f9a77751afb200e24f1d/lib/sqlalchemy/engine/base.py#L2926) from sqlalchemy is present in session state.\n\n### Reproducible Code Example\n\n```Python\nimport sqlalchemy\r\nimport streamlit as st\r\n\r\nst.session_state.engine = sqlalchemy.create_engine(\"sqlite:///:memory:\")\n```\n\n\n### Steps To Reproduce\n\n1. Create a new python project, installing `streamlit 1.38.0` and `sqlalchemy 2.0.34`\r\n2. Create a `main.py` and copy the above example into it\r\n3. run `main.py` with `streamlit`\r\n4. run `curl localhost:8501/_stcore/metrics` in another terminal\n\n### Expected Behavior\n\n- No errors in the terminal running Streamlit\r\n\r\n- Should return something to the effect of the following from the curl command:\r\n```\r\n‚ùØ curl localhost:8501/_stcore/metrics\r\n# TYPE cache_memory_bytes gauge\r\n# UNIT cache_memory_bytes bytes\r\n# HELP Total memory consumed by a cache.\r\ncache_memory_bytes{cache_type=\"st_session_state\",cache=\"\"} 2120\r\n# EOF\r\n```\r\n\r\n\n\n### Current Behavior\n\nError message:\r\n```\r\nprometheus-test-5XL8qTz3-py3.12 ‚ùØ poetry run streamlit run main.py\r\n\r\n  You can now view your Streamlit app in your browser.\r\n\r\n  Local URL: http://localhost:8501\r\n  Network URL: http://192.168.50.198:8501\r\n\r\n  For better performance, install the Watchdog module:\r\n\r\n  $ xcode-select --install\r\n  $ pip install watchdog\r\n\r\n2024-09-09 17:57:11.607 Uncaught exception GET /_stcore/metrics (::1)\r\nHTTPServerRequest(protocol='http', host='localhost:8501', method='GET', uri='/_stcore/metrics', version='HTTP/1.1', remote_ip='::1')\r\nTraceback (most recent call last):\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/tornado/web.py\", line 1788, in _execute\r\n    result = method(*self.path_args, **self.path_kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/web/server/stats_request_handler.py\", line 46, in get\r\n    stats = self._manager.get_stats()\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/runtime/stats.py\", line 107, in get_stats\r\n    all_stats.extend(provider.get_stats())\r\n                     ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/runtime/state/session_state.py\", line 723, in get_stats\r\n    stats.extend(session_state.get_stats())\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/runtime/state/session_state.py\", line 667, in get_stats\r\n    stat = CacheStat(\"st_session_state\", \"\", asizeof(self))\r\n                                             ^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 2665, in asizeof\r\n    s = _asizer.asizeof(*t)\r\n        ^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 2034, in asizeof\r\n    return sum(self._sizer(o, 0, 0, None) for o in objs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 2034, in <genexpr>\r\n    return sum(self._sizer(o, 0, 0, None) for o in objs)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 1970, in _sizer\r\n    s += z(o, i, d, None)\r\n         ^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 1970, in _sizer\r\n    s += z(o, i, d, None)\r\n         ^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 1970, in _sizer\r\n    s += z(o, i, d, None)\r\n         ^^^^^^^^^^^^^^^^\r\n  [Previous line repeated 5 more times]\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 1969, in _sizer\r\n    for o in v.refs(obj, False):\r\n             ^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 539, in _refs\r\n    for a, o in _dir2(obj, **kwds):\r\n                ^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/streamlit/vendor/pympler/asizeof.py\", line 339, in _dir2\r\n    if hasattr(obj, a):\r\n       ^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py\", line 1308, in __getattr__\r\n    value = getattr(self, f\"_memoized_attr_{key}\")()\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gregleonard/Library/Caches/pypoetry/virtualenvs/prometheus-test-5XL8qTz3-py3.12/lib/python3.12/site-packages/sqlalchemy/event/attr.py\", line 81, in _memoized_attr_ref\r\n    return weakref.ref(self, registry._collection_gced)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: cannot create weak reference to '_EmptyListener' object\r\n2024-09-09 17:57:11.617 500 GET /_stcore/metrics (::1) 117.88ms\r\n```\r\n\r\ncurl response:\r\n```\r\n‚ùØ curl localhost:8501/_stcore/metrics\r\n<html><title>500: Internal Server Error</title><body>500: Internal Server Error</body></html>\r\n```\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.38.0\r\n- Python version: 3.12\r\n- Operating System: macOS 14.6.1\r\n- Browser: n/a\r\n\n\n### Additional Information\n\nThis is also reproduceable by placing an instance of the class it's complaining about, `_EmptyListener`, into session state. The following will produce the same error when the `_stcore/metrics` endpoint is requested:\r\n\r\n```py\r\nfrom typing import Any\r\n\r\nimport streamlit as st\r\nimport sqlalchemy\r\nfrom sqlalchemy.event.attr import _EmptyListener, _ClsLevelDispatch\r\nfrom sqlalchemy.event.base import _HasEventsDispatch\r\n\r\n\r\nst.session_state.test = _EmptyListener(\r\n    parent=_ClsLevelDispatch(\r\n        parent_dispatch_cls=_HasEventsDispatch[Any], fn=lambda _: _\r\n    ),\r\n    target_cls=object,\r\n)\r\n```",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9428)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @greg-el thanks for submitting this issue. It seems there's two problems:\n1) putting your db connection is session_state isn't the best place for that kind of thing to live. I'd take a look at [`st.connection`](https://docs.streamlit.io/develop/api-reference/connections/st.connection) instead\n2) this has uncovered an issue with how were measuring memory for session_state as part of our metrics\n\nI'll keep this issue open to track (2), but would recommend you trying (1) to see if it can unblock you."
      }
    ]
  },
  {
    "issue_number": 11426,
    "title": "Colored Material icons",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-05-21T19:07:35Z",
    "updated_at": "2025-06-15T11:06:54Z",
    "labels": [
      "type:enhancement",
      "feature:markdown"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nWhile you can make Material icons colored in Markdown (e.g. `st.markdown(\":red[:material/home:]\")`, there's no way to do this in `icon` parameters, e.g. for `st.toast` or `st.button`. We should add this!\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11426)\n"
      },
      {
        "user": "xtliu97",
        "body": "I‚Äôve just finished an initial implementation of the colored icon support.\nHere‚Äôs a preview of the current result. I generated some buttons with icons randomly.\n\n<img width=\"400\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0beec565-e400-459e-9478-5399a266f7dd\" />\n\nDoes this direction align with what you had in mind?\n\n"
      },
      {
        "user": "jrieke",
        "body": "Yeah that directionally looks good. I'd only allow the colors we allow for colored text here. And the main question is how you set the color for the icon. I think the main options are:\n\n1. Add a new parameter, e.g. `icon_color=\"red\"|...`. \n2. Define the color inside the `icon` parameter, re-using what we do for colored text, e.g. `icon=\":red[:material/home:]\"`.\n3. Define the color inside the `icon` parameter with a new way, e.g. `icon=\":material/home/red:\"`. \n\nI like (2) best at the moment I think but can discuss this with the team again in case you're coming up with a PR. \n\nBtw we'd definitely want to have this for all `icon` parameters at the same time, so we don't end up with some `icon` parameters supporting this and others not. "
      }
    ]
  },
  {
    "issue_number": 9424,
    "title": "Debugging Flow and Error Logging in the UI",
    "author": "om-tericsoft1",
    "state": "open",
    "created_at": "2024-09-09T10:58:21Z",
    "updated_at": "2025-06-15T11:05:46Z",
    "labels": [
      "type:enhancement",
      "area:debugging"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nI am looking for a way to debug the entire flow locally before running the code in the user interface (UI). Specifically, I want to:\r\n\r\nDebug the complete flow locally to catch issues early on.\r\nSave error logs for the whole flow to identify problems during execution.\r\nIs there a solution or a tool that can help achieve this?\r\n\r\n\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-9424)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hmm the only headless running experience I'm aware of is [this](https://docs.streamlit.io/develop/api-reference/app-testing)."
      },
      {
        "user": "jrieke",
        "body": "Yeah, not sure what you're looking for but it sounds like app testing (what Nico linked) might be your best bet. We don't really have any other debugging tools in Streamlit today. If you have specific ideas or requests, feel free to open dedicated issues on here! "
      }
    ]
  },
  {
    "issue_number": 4660,
    "title": "ability to make JS calls from within the user session inside the browser",
    "author": "derfryday",
    "state": "open",
    "created_at": "2022-04-27T15:39:04Z",
    "updated_at": "2025-06-15T11:05:16Z",
    "labels": [
      "type:enhancement",
      "feature:custom-components"
    ],
    "body": "### Problem\r\n\r\nA Streamlit app I'm working on needs to be able to send Ajax requests from within the web browser to communicate  with some APIs that rely on CORS and needs the request to be sent from the app user directly and can't go over the server itself.\r\n\r\nMy current workaround is a very crude custom component that renders a button in itself that does the Ajax call and then sends the JSON response from the API back to python, the problem with that is, the button won't conform with the Streamlit theme the user sets for themselves and always look out of place.\r\nI tried putting the custom component behind a Streamlit button so it gets rendered and thus sends the Ajax requests once button is pressed but that didn't work out at all.\r\n\r\n### Solution\r\n\r\n**MVP:** What's the smallest possible solution that would get 80% of the problem out of the way?\r\n\r\nA way to send Ajax requests from within the web app by clicking a button that returns a JSON object that can be used within the Python code. Perhaps it could be done by triggering the Ajax call via a button and then writing the response to into the session_state.\r\n\r\n**Possible additions:** What are other things that could be added to the MVP over time to make it better?\r\n\r\nA possible addition would be to also allow normal get/post requests from within the browsers.\r\n\r\nWould that be possible or is this too specific of a use case?\r\n\r\nThank you in advance.\r\n\r\n### Voting for feature requests\r\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\r\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\r\n",
    "comments": [
      {
        "user": "jrieke",
        "body": "Thanks for the suggestion. We've considered allowing raw JavaScript in Streamlit apps but haven't made a decision yet. This is obviously a pretty fundamental decision + it's not super high on our priority list, so expect that this will take some time."
      },
      {
        "user": "snehankekre",
        "body": "@derfryday have you had a chance to look into @aghasemi's custom component [Streamlit JS Eval](https://discuss.streamlit.io/t/new-component-streamlit-js-eval/30861)?"
      },
      {
        "user": "derfryday",
        "body": "@snehankekre I'll check it out, thanks."
      }
    ]
  },
  {
    "issue_number": 11230,
    "title": "allow any element to be programatically 'focus'ed based on its key/id",
    "author": "sammlapp",
    "state": "open",
    "created_at": "2025-04-29T17:27:25Z",
    "updated_at": "2025-06-15T11:04:36Z",
    "labels": [
      "type:enhancement",
      "area:utilities"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nFunction takes key as input and focuses the element\n\n### Why?\n\n_No response_\n\n### How?\n\nA wrapper function on js:\n```\ndef st.focus(key):\n\n... do this in js:\n\nconst element = document.querySelector('.st-key-{key}');\nelement.focus();\n\n```\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11230)\n"
      },
      {
        "user": "madhukarjadhav736",
        "body": "yes, currently doing it with javascript injection"
      }
    ]
  },
  {
    "issue_number": 9947,
    "title": "More consistent handling of relative paths",
    "author": "sfc-gh-dmatthews",
    "state": "open",
    "created_at": "2024-11-29T09:14:30Z",
    "updated_at": "2025-06-15T11:04:20Z",
    "labels": [
      "type:enhancement",
      "area:elements"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nWe have two main ways relative paths are parsed:\r\n- For Page and navigation commands, paths are relative to the entrypoint file\r\n- For most other command (like media), paths are relative to the current working directory\r\n\r\nAlthough this may be the same for many people, Community Cloud in particular used the root of the repository as the current working directory which can necessitate some rearranging of files/path handling for complex apps. When it comes to Community Cloud's handling of Python dependencies, both the entrypoint-file directory and the root of the repository are searched, in that order. (This is not the case for packages.txt, nor for Streamlit's config.toml. The former must be handled in Cloud, but the latter may be handled in open source.)\r\n\r\nIt would be nice if all of Streamlit's paths prioritized \"relative to the entrypoint file\" then fell back to \"relative to the current working directory.\" This could be implemented for `.streamlit/config.toml` (or anything in the `.streamlit` folder before falling back to the user's global settings). This could also be used for all local file paths (`st.image`, `st.video`, etc).\r\n\r\nRelated to #7731, #7578 (though more restrictive than those requests).\r\n\r\ncc @tvst @sfc-gh-tteixeira \r\n\r\n### Why?\r\n\r\nConsistency.\r\n\r\n### How?\r\n\r\n_No response_\r\n\r\n### Additional Context\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-9947)\n"
      }
    ]
  },
  {
    "issue_number": 11030,
    "title": "Clicking a button in a fragment doesn't interrupt the fragment to immediately rerun.",
    "author": "sfc-gh-dmatthews",
    "state": "open",
    "created_at": "2025-04-03T21:19:21Z",
    "updated_at": "2025-06-15T11:03:18Z",
    "labels": [
      "type:enhancement",
      "feature:st.fragment"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI was trying to create some equivalent of the stop button in the app chrome. To do this, I created a fragment that writes to an external container, planning to use a button to interrupt the fragment and stop it somewhere in the middle. However, the fragment does not stop and initiate a rerun when its button is clicked; it just continues with its initial run.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nimport time\n\n@st.fragment()\ndef frag_writer(container):\n    if st.button(\"Stop\"):\n        st.stop()\n    for i in range(50):\n        container.write(i)\n        time.sleep(.2)\n\nheader = st.container()\nbody = st.container()\nwith header:\n    frag_writer(body)\n```\n\n### Steps To Reproduce\n\n1. Visit the app\n2. Click stop before the sequence finishes displaying\n3. Observe that Streamlit does not stop\n\n### Expected Behavior\n\nIf a user interacts with a widget during a run, I expect the run to be interrupted and to start over. If a widget is clicked during a fragment rerun, I expect the fragment to be interrupted and rerun.\n\nUnderstanding that there is a finicky detail of a fragment being run as part of a full script run, I tried adding a start button to the fragment so that it would only be writing the sequence as part of a fragment rerun, but it still fails to be interrupted even then.\n\n### Current Behavior\n\nWhether the fragment is running as a script rerun or a fragment rerun, the button in the fragment fails to interrupt the run.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44.1\n- Python version: 3.13\n- Operating System: Mac\n- Browser: Prisma\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11030)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @sfc-gh-dmatthews , thank you for filing this issue!\n\nI am able to reproduce the behavior you're seeing with the provided code, thank you for a clear repro!\n\nWith that said, this is currently expected behavior as written today. The request from clicking the `st.button` in the fragment triggers a request, which determines that this request should not preempt the the script [here in this block](https://github.com/streamlit/streamlit/blob/1.44.1/lib/streamlit/runtime/scriptrunner_utils/script_requests.py#L84-L95). Thus the request ends up getting handled after the execution is complete. I believe the intention behind this is to prevent partial updates or side effects outside the fragment scope during a non-fragment-scoped rerun trigger.\n\nI can definitely see how this may be unexpected from a user-perspective! I will talk with the team more about this. Thank you!\n\nI do have a potential workaround with many caveats. It utilizes session state and manually handles the looping logic via `st.run()`. It's not as performant as a python `for` loop on a thread. It is interruptable, but only once the task in a given iteration (in this case, a `time.sleep(0.2)`) is complete. It's also quite verbose!\n\n```python\nimport time\nimport streamlit as st\n\n# Initialize session state\nif \"run_process\" not in st.session_state:\n    st.session_state.run_process = False\nif \"process_counter\" not in st.session_state:\n    st.session_state.process_counter = 0\n\n\n@st.fragment()\ndef frag_writer(container):\n    if st.session_state.run_process:\n        limit = 50\n        start_index = st.session_state.process_counter\n        container.write(f\"Process running... (Iteration {start_index + 1}/{limit})\")\n        container.write(start_index)\n\n        time.sleep(0.2)\n\n        if start_index + 1 < limit:\n            st.session_state.process_counter += 1\n            # Schedule a rerun to continue the process\n            st.rerun()\n        else:\n            # Process finished\n            container.success(\"Process finished normally.\")\n            st.session_state.run_process = False  # Stop running\n            st.session_state.process_counter = 0  # Reset counter\n    else:\n        if st.session_state.process_counter > 0:\n            container.warning(\n                f\"Process stopped at iteration {st.session_state.process_counter}.\"\n            )\n        else:\n            container.info(\"Process is stopped. Click Start to run.\")\n\n\nheader = st.container()\nbody = st.container()\n\nwith header:\n    col1, col2 = st.columns(2)\n    with col1:\n        if st.button(\"Start/Resume Process\", disabled=st.session_state.run_process):\n            st.session_state.run_process = True\n            if st.session_state.process_counter == 0:\n                body.empty()\n            st.rerun()\n    with col2:\n        if st.button(\"Stop Process\", disabled=not st.session_state.run_process):\n            st.session_state.run_process = False\n            st.rerun()\n\n\nfrag_writer(body)\n```"
      },
      {
        "user": "sfc-gh-dmatthews",
        "body": "> I believe the intention behind this is to prevent partial updates or side effects outside the fragment scope during a non-fragment-scoped rerun trigger.\n\nJust to be clear, the same behavior is exhibited during a fragment-scoped rerun. Run the app, then after the complete script run, click start to trigger a fragment rerun: same problem that the fragment-scoped rerun can't be interrupted either.\n\n```\nimport streamlit as st\nimport time\n\n@st.fragment()\ndef frag_writer(container):\n    start = st.button(\"Start\")\n    if st.button(\"Stop\"):\n        st.stop()\n    if start:\n        for i in range(50):\n            container.write(i)\n            time.sleep(.2)\n\nheader = st.container()\nbody = st.container()\nwith header:\n    with st.spinner(\"Before the fragment\"):\n        time.sleep(2)\n    frag_writer(body)\n    with st.spinner(\"After the fragment\"):\n        time.sleep(2)\n\n```"
      }
    ]
  },
  {
    "issue_number": 10959,
    "title": "time_input does not keep the entered value when tabbing out of it",
    "author": "pkunze",
    "state": "open",
    "created_at": "2025-03-29T21:25:32Z",
    "updated_at": "2025-06-15T11:03:18Z",
    "labels": [
      "type:enhancement",
      "feature:st.time_input",
      "upstream"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nTabbing out of a time_input field after entering a value using the keyboard resets the value to the previous state.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nst.time_input(\"Time\")\n```\n\n### Steps To Reproduce\n\n1. Click on the time_input field\n2. Enter a value using the keyboard (do not use the selection list)\n3. Leave the field by using <kbd>tab</kbd> (do not click out of the filed using the mouse)\n\n### Expected Behavior\n\nI would expect the same behaviour as other input fields: the newly entered value remains after tabbing out.\n\n\n### Current Behavior\n\nThe value is reset to the value the field had when you clicked on it in the first place.\n\nThis affects people that cannot use the selection list because they have \"odd\" times to enter.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44.0\n- Python version: 3.13.2\n- Operating System: Windows 11\n- Browser: MS Edge, Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10959)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @pkunze thank you for filing this ticket!\n\nI can reproduce the behavior you've described. With that said, a user can hit enter and the entered value will persist (as long as it's a valid time):\n\n1. Click on the time_input field\n2. Enter a value using the keyboard\n3. Hit <kbd>enter</kbd>\n4. Leave the field by using <kbd>tab</kbd>\n\nI believe given the way this component is structured right now, this behavior is expected. I am going to turn this into an enhancement request since the UX could be improved per the details in your ticket. Thank you!"
      }
    ]
  },
  {
    "issue_number": 9031,
    "title": "Current recommended way to deal with restarted Streamlit sessions, for both recovering the session state and continuing calculations",
    "author": "andrew-weisman",
    "state": "open",
    "created_at": "2024-07-03T18:42:30Z",
    "updated_at": "2025-06-15T11:00:51Z",
    "labels": [
      "type:enhancement",
      "feature:st.session_state"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\n**Background:**\r\n\r\nUnfortunately the platform where we are primarily deploying Streamlit, Palantir Foundry Code Workspaces, randomly restarts Streamlit sessions. It seems they are unable or unwilling to fix this, which is probably the right way to solve the problem, but I am posting here in case others have similar issues, as this could be a more general topic.\r\n\r\nIf you run a Jupyter notebook in say JupyterLab and then restart the browser, you see in the console that Jupyter reconnects to the session and everything is preserved nicely.\r\n\r\nHowever, we all know that when Streamlit is restarted (and I personally think Streamlit could be utilized as a more user-friendly Jupyter notebook), nothing is preserved.\r\n\r\nWe have partially combatted the problem by allowing the user to manually save the session state, but if our users forget, then their work since their last save is lost. Note a consideration at least in our case is that we are performing sometimes complex analyses on large datasets, so at times we have 10-15 GB of data in the session state and are running hours-long computations using multiple cores. Each manual save can therefore take a significant amount of time (~a minute).\r\n\r\n**Questions:**\r\n\r\n1. What is Streamlit's current recommended way to _continuously_ save the session state so that if the session is randomly restarted, all is recovered. This has to be a fast process since again we often have large datasets in memory.\r\n2. What is Streamlit's current recommended way to persist jobs being run by Streamlit instead of them getting killed if the session is restarted?\r\n\r\nThanks so much in advance for your help!\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-9031)\n"
      },
      {
        "user": "Asaurus1",
        "body": "Streamlit isn't _really_ designed to be a \"more user-friendly jupyter notebook\", but here are some answers to your questions: \r\n\r\n> What is Streamlit's current recommended way to continuously save the session state so that if the session is randomly restarted, all is recovered. This has to be a fast process since again we often have large datasets in memory.\r\n\r\nThere isn't a \"streamlit\" way to do this -- you can handle it like you handle any other long-running python process: periodically save off a representation of your calculation \"state\" to disk and then program a means to load that state back into memory on application startup. One easy way to do this would be to periodically `pickle` the contents of `st.session_state`, although your mileage may vary depending on how \"large\" these large datasets you're talking about are. Large pandas datasets or numpy arrays have faster and more performant ways to be written to disk than the `pickle` library. You may also find it best to program in a way to detect which portions of the data have changed since the last save, and only save _those_ portions.\r\n\r\nNone of this is something that streamlit natively provides; so it will require you to write your own code for your own application.\r\n\r\n> What is Streamlit's current recommended way to persist jobs being run by Streamlit instead of them getting killed if the session is restarted?\r\n\r\nIf the entire `streamlit` python process is getting killed and restarted:\r\n* You need to run your long-running jobs as separate processes on the computer, and communicate with them via some means. What you're looking for is something like [Celery](https://docs.celeryq.dev/en/stable/getting-started/introduction.html), a python-based task scheduler that can be run along-side a streamlit-based UI. You can send it messages to have it start and stop certain jobs, and monitor their status as they run.\r\n\r\nIf it's just the user sessions that are getting removed and restarted (but the streamlit python process is persisting):\r\n* You may be able to use something like my https://github.com/Asaurus1/streamlit-process-manager to spawn child python processes that will process your data and output results to a file that you can then read back into the streamlit front-end. Keep in mind, these library is in alpha so use it at your own risk."
      },
      {
        "user": "andrew-weisman",
        "body": "Thanks so much for your suggestions and comments @Asaurus1!\r\n\r\nGood points with your first set of suggestions. We are actually having users manually save the session, but there are performance issues with this and haven't put the effort into implementing incremental saves. We haven't tried the df.to_pickle() etc. ideas you suggest so that could help with performance... right now we're basically saving everything in the session state, saving what we can with pickle (fast), and everything else (basically custom classes) with dill (slow), since pickle can't reliably handle custom classes. Regardless, would be really nice if Streamlit acted like Jupyter that seems to be completely robust to these session disconnects/restarts.\r\n\r\nGood ideas with Celery and your streamlit-process-manager tool. We toyed around with our own custom solutions for this sort of thing but good to know what else is out there. Will give them a try!"
      }
    ]
  },
  {
    "issue_number": 8180,
    "title": "Issue with user defined class identity between script reruns",
    "author": "kajarenc",
    "state": "open",
    "created_at": "2024-02-19T19:11:19Z",
    "updated_at": "2025-06-15T10:59:38Z",
    "labels": [
      "type:enhancement",
      "area:backend"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nWe have a recurring issue about preserving class identity defined in Streamlit app connected with Stremalit execution model.\r\n\r\nIn some special cases (e.g. `st.multiselect` options and Enum), we solve this at Streamlit core level, but in most cases, app developers should not rely on preserving class identity between reruns.\r\n\r\nThis article explains in detail the causes and ways to solve this problem.\r\nhttps://docs.streamlit.io/library/advanced-features/custom-classes\r\n\r\nClosed:\r\nhttps://github.com/streamlit/streamlit/issues/4909\r\nhttps://github.com/streamlit/streamlit/issues/5316\r\nhttps://github.com/streamlit/streamlit/issues/6765\r\n\r\n\r\nWere open at the moment of consolidation:\r\nhttps://github.com/streamlit/streamlit/issues/2379\r\nhttps://github.com/streamlit/streamlit/issues/6985\r\nhttps://github.com/streamlit/streamlit/issues/7419\r\nhttps://github.com/streamlit/streamlit/issues/8129\r\n\r\n\r\n### Why?\r\n\r\n_No response_\r\n\r\n### How?\r\n\r\n_No response_\r\n\r\n### Additional Context\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8180)\n"
      }
    ]
  },
  {
    "issue_number": 6953,
    "title": "Page automatically scrolls itself when interacting with widgets ",
    "author": "xinyu-dev",
    "state": "open",
    "created_at": "2023-07-06T02:00:46Z",
    "updated_at": "2025-06-15T10:59:04Z",
    "labels": [
      "type:bug",
      "area:frontend",
      "status:cannot-reproduce"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen a user interacts with widgets and the page reloads, Streamlit has some weird scrolling behaviors\r\n\r\nIn the gif below, I first selected choice 1, scrolled the page down a bit, then alternating clicks between choice 1 and choice 2. You can see that the page appears automatically moves up by itself. \r\n\r\n![gif](https://res.cloudinary.com/dpfqlyh21/image/upload/v1688608607/github/resized_gif_ckgjjc.gif)\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\n\r\nst.set_page_config(\r\n    layout='wide',\r\n    page_icon='üéà'\r\n)\r\n\r\n\r\nst.title('üß´ Title')\r\n\r\n\r\nst.header('Subtitle 1')\r\nchoice = st.radio(label='labels', options=['choice1', 'choice2'], label_visibility='collapsed')\r\n\r\nif choice == 'choice1':\r\n\r\n    st.write(\"\"\"\r\n    Choice 1: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n    \"\"\")\r\n\r\n    st.dataframe(\r\n        pd.DataFrame({\r\n            'A': np.arange(1, 12),\r\n            'B': np.arange(1, 12),\r\n            'C': np.arange(1, 12),\r\n        }),\r\n    )\r\n\r\nelse:\r\n    st.write(\"\"\"\r\n    Choice 2: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n    Choice 2: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n    Choice 2: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n    Choice 2: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n    Choice 2: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n    Choice 2: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n    Choice 2: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n    \"\"\")\n```\n\n\n### Steps To Reproduce\n\n1. Create a script as shown above\r\n2. Move the page down a bit\r\n3. alternate clicks between choice 1 & 2\n\n### Expected Behavior\n\nscroll bar position stays roughly the same when alternating between choice 1 and choice 2\n\n### Current Behavior\n\nPage automatically scrolls itself up \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.23.0 and 1.24.0\r\n- Python version: 3.10\r\n- Operating System: MAC OS\r\n- Browser: Chrome\r\n\r\n\n\n### Additional Information\n\n_No response_\n\n### Are you willing to submit a PR?\n\n- [ ] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "benseddikmo",
        "body": "Hello, having the same issue ! I have apps with tabs, and when changing filter values, the selected tab re-sets to the first tab in the list, which is very annoying.."
      },
      {
        "user": "helixworld",
        "body": "This worked fine in 1.23.1 but it started to show up in 1.24.0"
      },
      {
        "user": "benseddikmo",
        "body": "Rolled back to 1.23 as well"
      }
    ]
  },
  {
    "issue_number": 3082,
    "title": "Streamlit protobuf names may collide with those of other packages",
    "author": "thiemoToadi",
    "state": "open",
    "created_at": "2021-04-06T13:19:22Z",
    "updated_at": "2025-06-15T10:57:15Z",
    "labels": [
      "type:bug",
      "area:protobuf",
      "status:confirmed",
      "priority:P3"
    ],
    "body": "### Summary\r\n\r\nWhen import streamlit and supervisely_lib together in a project there occurs a TypeError.\r\n\r\n### Steps to reproduce\r\n\r\nCode snippet:\r\n\r\n```\r\nimport streamlit as st\r\nimport supervisely_lib as sly\r\n```\r\n\r\nIf applicable, please provide the steps we should take to reproduce the bug:\r\n\r\n1. run the code with streamlit run ...\r\n2. see error/traceback when you open the streamlit page\r\n\r\n\r\n**Expected behavior:**\r\n\r\nNo error when both libraries are imported together.\r\n\r\n**Actual behavior:**\r\n\r\nWe get the following error/traceback:\r\n\r\n`TypeError: Couldn't build proto file into descriptor pool! Invalid proto descriptor for file \"worker_api.proto\": Empty: \"Empty\" is already defined in file \"streamlit/proto/Empty.proto\". Image: \"Image\" is already defined in file \"streamlit/proto/Image.proto\". ImagesInfo.infos: \"Image\" seems to be defined in \"streamlit/proto/Image.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. ImagesToAdd.images: \"Image\" seems to be defined in \"streamlit/proto/Image.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. ChunkImage.image: \"Image\" seems to be defined in \"streamlit/proto/Image.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.UploadArchive: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.SetProjectFinished: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.Log: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.GetNewTask: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.GetStopTask: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.AgentPing: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.AgentPing: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.UploadModel: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.GenerateNewModelId: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.GetTelemetryTask: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.UpdateTelemetry: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.UploadImages: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.GetUsedImageList: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.GetUsedModelList: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.GetGeneralEventsStream: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.GetGeneralEventData: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.SendGeneralEventData: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import. GeneralAPI.AddMetaToProject: \"Empty\" seems to be defined in \"streamlit/proto/Empty.proto\", which is not imported by \"worker_api.proto\". To use it here, please add the necessary import.\r\nTraceback:\r\nFile \"/Users/thiemoseys/PycharmProjects/test_streamlit_with_supervisely/venv/lib/python3.8/site-packages/streamlit/script_runner.py\", line 333, in _run_script\r\n    exec(code, module.__dict__)\r\nFile \"/Users/thiemoseys/PycharmProjects/test_streamlit_with_supervisely/test_imports.py\", line 1, in <module>\r\n    import supervisely_lib as sly\r\nFile \"/Users/thiemoseys/PycharmProjects/test_streamlit_with_supervisely/venv/lib/python3.8/site-packages/supervisely_lib/__init__.py\", line 64, in <module>\r\n    import supervisely_lib.worker_proto.worker_api_pb2 as api_proto\r\nFile \"/Users/thiemoseys/PycharmProjects/test_streamlit_with_supervisely/venv/lib/python3.8/site-packages/supervisely_lib/worker_proto/worker_api_pb2.py\", line 18, in <module>\r\n    DESCRIPTOR = _descriptor.FileDescriptor(\r\nFile \"/Users/thiemoseys/PycharmProjects/test_streamlit_with_supervisely/venv/lib/python3.8/site-packages/google/protobuf/descriptor.py\", line 965, in __new__\r\n    return _message.default_pool.AddSerializedFile(serialized_pb)`\r\n\r\n### Is this a regression?\r\ni do not know if this has ever worked before.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 0.79.0\r\n- Python version: 3.8.3\r\n- Using Conda? VirtualEnvironment \r\n- OS version: macos Catalina 10.15.5\r\n- Browser version: google chrome 89.0.4389.90 \r\n\r\n### Additional information\r\nNone",
    "comments": [
      {
        "user": "vdonato",
        "body": "Hi @thiemoToadi, thanks for reporting this!\r\n\r\nLooks like this bug is half on our end and half on `supervisely_lib`s. What I think is happening is that both their and our protobufs don't specify a package, so types in the two libraries run into namespace collisions when imported together.\r\n\r\nI think the fix should be quick and can get around to looking into this if I have the bandwidth in the next week or so (unless anyone lurking / monitoring our GitHub issues wants to volunteer to pick this one up before then)."
      },
      {
        "user": "unserh",
        "body": "Hey, alluded-to lurker here, I'd be interested in looking into this issue if you don't mind!"
      },
      {
        "user": "thiemoToadi",
        "body": "@vdonato Thanks for the update, I also reported this to the Supervisely team so they are also aware of the issue and can look into a possible fix from their side."
      }
    ]
  },
  {
    "issue_number": 11420,
    "title": "Officially support bootstrap.run",
    "author": "wobrschalek",
    "state": "open",
    "created_at": "2025-05-21T02:57:38Z",
    "updated_at": "2025-06-15T10:55:42Z",
    "labels": [
      "type:enhancement",
      "area:deployment"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nHi,\n\nStreamlit supports running the app via cli streamlit run your_app.py\n\nI request bootstrap.run to be supported, and documented, so it can run within python.\nso streamlit apps can be distributed standalone with frameworks like nuitka.\n\n\nfrom streamlit import config as _config\nfrom streamlit.web.bootstrap import run\n_config.set_option(\"server.headless\", True)\nrun('your_app.py', args=[], flag_options=[], is_hello=False)\n\nBut method run it‚Äôs not stable, nor documented.\nIt‚Äôs an internal method\n\nThank you,\nRobert\n\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11420)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @wobrschalek, thanks for filing this enhancement request. We'll take a look at it."
      }
    ]
  },
  {
    "issue_number": 10550,
    "title": "Discrepancy of selectbox value in AppTest",
    "author": "ams1",
    "state": "open",
    "created_at": "2025-02-27T22:12:38Z",
    "updated_at": "2025-06-15T10:55:00Z",
    "labels": [
      "type:enhancement",
      "feature:app-testing"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHi, great project - keep up the great work!\n\nWe're using a selectbox with `Dict` (not `str`!) options (see Reproducible Code Example) via `format_func` - each option is like `{\"db_id\": 1, \"name\": \"Option 1\"}`.\nWhen the user selects an option, we retrieve the selected `db_id` and lookup things in the database - ex. refresh other cascading selectboxes etc.\nEverything works as expected in the normal app.\n\nBut when writing the tests, we noticed that with AppTest, the selectbox returns just the label and NOT the whole `Dict` like in the normal app.\n\nGiven that the app relies on getting the `db_id` from the selectbox for other logic, tests fail.\n\nThanks\n\n### Reproducible Code Example\n\n```Python\nimport pytest\nfrom streamlit.testing.v1 import AppTest\n\ndef the_app():\n    import streamlit as st\n\n    if \"sb_options\" not in st.session_state:\n        st.session_state[\"sb_options\"] = [\n            {\"db_id\": 1, \"name\": \"Option 1\"},\n            {\"db_id\": 2, \"name\": \"Option 2\"},\n        ]\n\n    sb_value = st.selectbox(\"Select an option\", options=st.session_state[\"sb_options\"], format_func=lambda x: x[\"name\"], index=None)\n\n    # when selecting \"Option 1\", sb_value gets the dict -> Selected option: {'id': 1, 'name': 'Option 1'}\n    st.write(f\"Selected option: {sb_value}\")\n\ndef test_sb():\n    ap = AppTest.from_function(the_app).run()\n\n    sb = ap.selectbox[0]\n\n    sb.select_index(0)\n\n    assert sb.value == {\"db_id\": 1, \"name\": \"Option 1\"}\n    # above assertion fails with:\n    # E       AssertionError: assert 'Option 1' == {'id': 1, 'name': 'Option 1'}\n    # E        +  where 'Option 1' = Selectbox(_value='Option 1', label='Select an option', options=['Option 1', 'Option 2']).value\n```\n\n### Steps To Reproduce\n\n1. save Reproducible Code Example as test_sb_value.py\n2. run `pytest test_sb_value.py`\n\n### Expected Behavior\n\n* I'm expecting that the value of the selectbox in the test case (using AppTest) to be the same as the value returned in the normal app\n\n### Current Behavior\n\nIn case of a selectbox that has `options: List[Dict]` and uses `format_func`, the value returned by the selectbox in a test case (using AppTest) is different than the one returned in a normal app.\n\nIn the app, the selectbox returns the Dict, as expected: `{'id': 1, 'name': 'Option 1'}`\nIn the AppTest test, it returns just the option string compiled with `format_func`: `'Option 1'`\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.42.0\n- Python version: 3.13.1\n- Operating System: macOS Sonoma\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10550)\n"
      },
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Visits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fstreamlit%2Fstreamlit%2Fissues%2F10550&title=visits&edge_flat=false)\n"
      },
      {
        "user": "sfc-gh-lwilby",
        "body": "Hi @ams1 , \n\nThank you for submitting this issue. I have confirmed it, and I agree it is less useful to have only the labels. I think this might be better classified as an enhancement. \n\nLaura"
      }
    ]
  },
  {
    "issue_number": 8713,
    "title": "Custom 404 / Error Page / Maintenance Page that is displayed whenever a bug is pushed or the app encounters and issue on boot",
    "author": "Emad-Eldin-G",
    "state": "open",
    "created_at": "2024-05-19T15:37:40Z",
    "updated_at": "2025-06-15T10:54:43Z",
    "labels": [
      "type:enhancement",
      "area:utilities"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nI think this is definitely a useful feature if, for example:\r\n- The developers want to some time down to work on a new feature or fix something\r\n- A bug is accidentally pushed, instead of seeing the ugly error message, a nicer 404 page is presented \r\n\r\nThis is similar to something like [this](https://vercel.com/guides/custom-404-page)\r\n\r\nPerhaps this could be implemented by checking for all errors before running script, but having it in its own command would be helpful.\r\n\r\n### Why?\r\n\r\n_No response_\r\n\r\n### How?\r\n\r\nSuggestions:\r\n- st.default_error_page()\r\n- st.default_maintenance_page()\r\n\r\nWhere these commands are on the top of the script, and can be turned on or off based on developer preference:\r\n- st.default_error_page(some_error_page.py, true) - Params: custom_page(python script) which would link to the custom script written by the developer, always_on(boolean) would constantly intercept errors and show the default error page\r\n- st.default_maintenance_page(some_error_page.py) - Params: custom_page(python script) which would link to the custom script written by the developer, similar to the error page command\r\n\r\n### Additional Context\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8713)\n"
      },
      {
        "user": "giacomochiarella",
        "body": "Actually having the not found error personalised would partially mitigate [this](https://discuss.streamlit.io/t/default-page-when-the-requested-page-is-not-in-the-navigation-page-list/94434/2) problem"
      }
    ]
  },
  {
    "issue_number": 612,
    "title": "Enable Google Analytics or any kind of traffic tracking tools requires some Javascript",
    "author": "noklam",
    "state": "open",
    "created_at": "2019-11-03T09:42:22Z",
    "updated_at": "2025-06-15T10:54:24Z",
    "labels": [
      "type:enhancement",
      "type:possible-component",
      "area:integrations"
    ],
    "body": "### Problem\n\nI would like to track the traffic with Google Analytic however I cannot find a way to inject the script tag\n\n### Solution\n\nIt would be greate if there are direct function call to hook it with Google Analytic or just some hacky solution to add script tag.\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-612)\n",
    "comments": [
      {
        "user": "mzeidhassan",
        "body": "I second this. This is vital and standard in all apps these days. "
      },
      {
        "user": "kurt-rhee",
        "body": "This would also add functionality for UserSnap which my organization uses.\r\n"
      },
      {
        "user": "feliperoque",
        "body": "any news about this feature?"
      }
    ]
  },
  {
    "issue_number": 8970,
    "title": "Thank you",
    "author": "arvidjohansen",
    "state": "open",
    "created_at": "2024-06-24T19:13:23Z",
    "updated_at": "2025-06-15T10:54:14Z",
    "labels": [
      "type:kudos"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nI just wanted - thank you -\r\n\r\n- all of you - \r\n\r\nfor the time and work you have put into making this product what it is\r\n\r\n\r\nEvery now and then \r\nI discover a tool \r\nthat's just so\r\nawesome\r\nunique\r\nand revolutionary \r\nthat any promise I've made to business clients\r\nfriends or family\r\nfor that day\r\nsimply will have to wait till tomorrow.\r\n\r\nToday was one of those days.\r\n\r\nUsing Streamlit is like playing world of warcraft.\r\n\r\nIts actually addictive.\r\n\r\nLast time I felt like this was when I discovered Markdown.\r\n\r\nEven the documentation....\r\n\r\nI've never even seen..... anything close..... is just.... PERFECT.  MWAH!\r\n\r\nSo thank you all and keep up the good work.\r\n\r\nExploring the various features of this app is truly a BLESSING.\r\n\r\nThere is however, one thing I don't understand.\r\n\r\nI spent like almost two hours (yeah I know) trying to figure out...\r\nthe whole dependenciy conflict with streamlit_pandas_profilng vs streamlit_ydata_profiling\r\nand something about the **visions** module being unable to meet both dependencies anyway\r\nI saw a post about it earlier but I think it didnt solve my problem\r\nand I almost gave up....\r\nuntil I found out AHA! there is a streamlit_ydata_profiling that we can use for newer versions\r\nbut you still have the link to the old streamlit_pandas_profiling listed on the documentation\r\n\r\nmay I ask if that is intentional or a bug?\r\n\r\nAnyway... *hat's off yo y'all*\r\n\r\nKeep doing the lords work!\r\n\r\nRegards\r\nArvid\r\n\r\n\r\n\r\n\n\n### Why?\n\nOut of Love.\n\n### How?\n\nUsing Words.\n\n### Additional Context\n\nIt's nice to say nice things",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8970)\n"
      },
      {
        "user": "kmcgrady",
        "body": "Hey @arvidjohansen ! From the bottom of my heart. Thank you for the kind words! We love making Streamlit and creating (healthy) addictions üòÑ.\r\n\r\nCan you provide the url where you found the reference to streamlit_pandas_profiling? If it's one of our sites, I can make sure it is updated! :-)"
      },
      {
        "user": "jrieke",
        "body": "Thanks for this very poetic issue, made me smile a lot. üòâ ‚ù§Ô∏è We shared it with the team!"
      }
    ]
  },
  {
    "issue_number": 4585,
    "title": "Calling Julia from Streamlit App using PyJulia",
    "author": "mercicle",
    "state": "open",
    "created_at": "2022-04-03T15:07:32Z",
    "updated_at": "2025-06-15T10:53:51Z",
    "labels": [
      "type:enhancement",
      "area:integrations"
    ],
    "body": "### Summary\r\n\r\nI'm trying to use a julia function from a streamlit app. Created a toy example to test the interaction, simply returning a matrix from a julia functions based on a single parameter to specify the value of the diagonal elements. \r\n\r\nWill also note at the outset that both `julia_import_method = \"api_compiled_false\"` and `julia_import_method = \"main_include\"` works when importing the function in Spyder IDE (rather than at the command line to launch the  streamlit app via `streamlit run streamlit_julia_test.py`). \r\n\r\nMy project directory looks like:\r\n\r\n-my_project_directory\r\n--julia_test.jl\r\n--streamlit_julia_test.py\r\n\r\nThe julia function is in `julia_test.jl` and just simply returns a matrix with diagonals specified by the v parameter:\r\n\r\n    function get_matrix_from_julia(v::Int)\r\n       m=[v 0\r\n          0 v]\r\n     return m\r\n    end\r\n\r\nThe streamlit app is `streamlit_julia_test.py` and is defined as:\r\n\r\n    import os\r\n    from io import BytesIO\r\n    \r\n    import numpy as np\r\n    import seaborn as sns\r\n    import matplotlib.pyplot as plt\r\n    import streamlit as st\r\n    \r\n    # options:\r\n    # main_include\r\n    # api_compiled_false\r\n    # dont_import_julia\r\n    julia_import_method = \"api_compiled_false\"\r\n    \r\n    if julia_import_method == \"main_include\":\r\n    \r\n        import julia\r\n        from julia import Main\r\n        Main.include(\"julia_test.jl\")\r\n    \r\n    elif julia_import_method == \"api_compiled_false\":\r\n\r\n        # works in Spyder IDE\r\n        from julia.api import Julia\r\n        jl = Julia(compiled_modules=False)\r\n    \r\n        this_dir = os.getcwd()\r\n        julia_test_path = \"\"\"include(\\\"\"\"\"+ this_dir + \"\"\"/julia_test.jl\\\"\"\"\" +\")\"\"\"\r\n        print(julia_test_path)\r\n        jl.eval(julia_test_path)\r\n        get_matrix_from_julia = jl.eval(\"get_matrix_from_julia\")\r\n    \r\n    elif julia_import_method == \"dont_import_julia\":\r\n        print(\"Not importing \")\r\n    else:\r\n        ValueError(\"Not handling this case:\" + julia_import_method)\r\n    \r\n    \r\n    st.header('Using Julia in Streamlit App Example')\r\n    \r\n    st.text(\"Using Method:\" + julia_import_method)\r\n    \r\n    matrix_element = st.selectbox('Set Matrix Diagonal to:', [1,2,3])\r\n    \r\n    matrix_numpy = np.array([[matrix_element,0],[0,matrix_element]])\r\n    \r\n    col1, col2 = st.columns([4,4])\r\n    \r\n    with col1:\r\n    \r\n        fig, ax = plt.subplots(figsize=(5,5))\r\n        sns.heatmap(matrix_numpy, ax = ax, cmap=\"Blues\",annot=True)\r\n        ax.set_title('Matrix Using Python Numpy')\r\n        buf = BytesIO()\r\n        fig.savefig(buf, format=\"png\")\r\n        st.image(buf)\r\n    \r\n    with col2:\r\n    \r\n        if julia_import_method == \"dont_import_julia\":\r\n            matrix_julia = matrix_numpy\r\n        else:\r\n            matrix_julia = get_matrix_from_julia(matrix_element)\r\n    \r\n        fig, ax = plt.subplots(figsize=(5,5))\r\n        sns.heatmap(matrix_julia, ax = ax, cmap=\"Blues\",annot=True)\r\n        ax.set_title('Matrix from External Julia Script')\r\n        buf = BytesIO()\r\n        fig.savefig(buf, format=\"png\")\r\n        st.image(buf)\r\n\r\n\r\nIf the app were working correctly, it would look like this (which can be reproduced by setting the `julia_import_method = \"dont_import_julia\"` on line 13):\r\n\r\n[![enter image description here][1]][1]\r\n\r\n**Testing**\r\n\r\nWhen I try `julia_import_method = \"main_include\"`, I get the well known error:\r\n\r\n    julia.core.UnsupportedPythonError: It seems your Julia and PyJulia setup are not supported.\r\n    \r\n    Julia executable:\r\n        julia\r\n    Python interpreter and libpython used by PyCall.jl:\r\n        /Users/myusername/opt/anaconda3/bin/python3\r\n        /Users/myusername/opt/anaconda3/lib/libpython3.9.dylib\r\n    Python interpreter used to import PyJulia and its libpython.\r\n        /Users/myusername/opt/anaconda3/bin/python\r\n        /Users/myusername/opt/anaconda3/lib/libpython3.9.dylib\r\n    \r\n    Your Python interpreter \"/Users/myusername/opt/anaconda3/bin/python\"\r\n    is statically linked to libpython.  Currently, PyJulia does not fully\r\n    support such Python interpreter.\r\n    \r\n    The easiest workaround is to pass `compiled_modules=False` to `Julia`\r\n    constructor.  To do so, first *reboot* your Python REPL (if this happened\r\n    inside an interactive session) and then evaluate:\r\n    \r\n        >>> from julia.api import Julia\r\n        >>> jl = Julia(compiled_modules=False)\r\n    \r\n    Another workaround is to run your Python script with `python-jl`\r\n    command bundled in PyJulia.  You can simply do:\r\n    \r\n        $ python-jl PATH/TO/YOUR/SCRIPT.py\r\n    \r\n    See `python-jl --help` for more information.\r\n    \r\n    For more information, see:\r\n    \r\n        https://pyjulia.readthedocs.io/en/latest/troubleshooting.html\r\n\r\n\r\nAs suggested, when I set `julia_import_method = \"api_compiled_false\"`, I get a seg fault:\r\n\r\n\r\n    include(\"my_project_directory/julia_test.jl\")\r\n    2022-04-03 10:23:13.406 Traceback (most recent call last):\r\n      File \"/Users/myusername/opt/anaconda3/lib/python3.9/site-packages/streamlit/script_runner.py\", line 430, in _run_script\r\n        exec(code, module.__dict__)\r\n      File \"my_project_directory/streamlit_julia_test.py\", line 25, in <module>\r\n        jl = Julia(compiled_modules=False)\r\n      File \"/Users/myusername/.local/lib/python3.9/site-packages/julia/core.py\", line 502, in __init__\r\n        if not self.api.was_initialized:  # = jl_is_initialized()\r\n      File \"/Users/myusername/.local/lib/python3.9/site-packages/julia/libjulia.py\", line 114, in __getattr__\r\n        return getattr(self.libjulia, name)\r\n      File \"/Users/myusername/opt/anaconda3/lib/python3.9/ctypes/__init__.py\", line 395, in __getattr__\r\n        func = self.__getitem__(name)\r\n      File \"/Users/myuserame/opt/anaconda3/lib/python3.9/ctypes/__init__.py\", line 400, in __getitem__\r\n        func = self._FuncPtr((name_or_ordinal, self))\r\n    AttributeError: dlsym(0x21b8e5840, was_initialized): symbol not found\r\n    \r\n    \r\n    signal (11): Segmentation fault: 11\r\n    in expression starting at none:0\r\n    Allocations: 35278345 (Pool: 35267101; Big: 11244); GC: 36\r\n    zsh: segmentation fault  streamlit run streamlit_julia_test.py\r\n\r\n\r\nI've also tried the alternative recommendation provided in the PyJulia response message regarding the use of:\r\n\r\n    python-jl my_project_directory/streamlit_julia_test.py\r\n\r\nBut I get this error when running the python-jl command:\r\n\r\n    INTEL MKL ERROR: dlopen(/Users/myusername/opt/anaconda3/lib/libmkl_intel_thread.1.dylib, 0x0009): Library not loaded: @rpath/libiomp5.dylib\r\n      Referenced from: /Users/myusername/opt/anaconda3/lib/libmkl_intel_thread.1.dylib\r\n      Reason: tried: '/Applications/Julia-1.7.app/Contents/Resources/julia/bin/../lib/libiomp5.dylib' (no such file), '/usr/local/lib/libiomp5.dylib' (no such file), '/usr/lib/libiomp5.dylib' (no such file).\r\n    Intel MKL FATAL ERROR: Cannot load libmkl_intel_thread.1.dylib.\r\n\r\nSo I'm stuck, thanks in advance for a modified reproducible example or instructions for the following system specs! \r\n\r\n\r\n    System specs:\r\n    Mac OS Monterey 12.2.1 (Chip - Mac M1 Pro)\r\n    Python 3.9.7\r\n    Julia 1.7.2\r\n    PyJulia 0.5.8.dev\r\n    Streamlit 1.7.0\r\n\r\n  [1]: https://i.stack.imgur.com/sVaBz.jpg",
    "comments": [
      {
        "user": "LucaPaganin",
        "body": "Same issue here on Mac OS Monterey on intel"
      },
      {
        "user": "lukasmasuch",
        "body": "@mercicle Thanks for reporting this issue. Not sure if this is related specifically to Streamlit. Is PyJulia running fine if you are using it with pure python scripts? It could be that `PyJulia` is not supported well on the M1 processor yet?"
      },
      {
        "user": "asgolovin",
        "body": "Same problem here on Ubuntu 22 on Intel. :( Running PyJulia in normal python scripts does work, but if I try using it from a streamlit app, it throws a segfault. It happens even when simply importing PyJulia. So the minimum example in my case would be \r\n\r\n```python\r\n# main.py\r\nfrom julia import Main\r\nimport streamlit as st\r\n\r\nst.title(\"Hello, world! üëã\")\r\n```\r\nRunning it with `streamlit run main.py` throws a segfault. If I instead try \r\n```python\r\n# test.py\r\nfrom julia import Main\r\nprint(Main.eval(\"2 + 2\"))\r\n```\r\nand run it with `python test.py`, everything works fine. "
      }
    ]
  },
  {
    "issue_number": 8476,
    "title": "Live chat inside of an app",
    "author": "jivishov",
    "state": "open",
    "created_at": "2024-04-10T19:45:31Z",
    "updated_at": "2025-06-15T10:52:09Z",
    "labels": [
      "type:enhancement",
      "type:possible-component",
      "area:elements"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nA solution for an instant peer-to-peer chat/messaging feature with as little configuration as possible. Being able to choose a user from a list of \"Contacts\" and leave a message for an \"offline\" person, and/or being able to initiate a live chat session with an \"online\" contact. Similar to a WhatsApp or analogous IM apps.\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8476)\n"
      },
      {
        "user": "jrieke",
        "body": "Hey, I guess what you mean here is to have a live chat with other people who are viewing the same app, correct? Changed the title so we don't confuse it with chat features geared towards LLM apps. "
      },
      {
        "user": "jivishov",
        "body": "> Hey, I guess what you mean here is to have a live chat with other people who are viewing the same app, correct? Changed the title so we don't confuse it with chat features geared towards LLM apps.\r\n\r\nYou nailed it! I missed to mention \"with real people viewing/using the same app\"."
      }
    ]
  },
  {
    "issue_number": 11555,
    "title": "`st.thread` object for chains of `st.chat_message`",
    "author": "davidhu-openai",
    "state": "open",
    "created_at": "2025-06-07T03:50:11Z",
    "updated_at": "2025-06-15T10:51:51Z",
    "labels": [
      "type:enhancement",
      "feature:st.chat_message"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nLong chains of many `st.chat_message`s be difficult to manage and also require long amounts of time to load. It would be useful to have a `st.thread` class, with functions such as collapsing groups of chat messages (or even others, such as searching, etc.), to manage these chains of `st.chat_message`s.\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11555)\n"
      },
      {
        "user": "sfc-gh-tteixeira",
        "body": "I see two user related problems related to long sequences of `st.chat_message`s. We should have good answers for both.\n\nThey are:\n\n1. **Visual pollution from repeated avatars when there's a series of multiple messages from the same user:**\n\n    <details><summary>How Slack solves it: only show avatar for the first message</summary>\n    \n    ![Image](https://github.com/user-attachments/assets/e9c12a26-8b36-4761-b944-cea111f236c1)\n    </details>\n    \n    <details><summary>Solution ideas</summary>\n\n    `st.chat_message` could just hide repeated avatars automatically.\n\n    Or maybe we'd add a `show_avatar=True|False|\"auto\"` argument, though I'm not sure that's even needed.\n    \n    The nice thing about this solution is that the developer wouldn't have to write any logic to coalesce consecutive messages from the same user into a single `st.thread`.\n    </details>\n\n2. **It's hard to read/internalize the whole conversation when there are too many messages.**\n\n    <details><summary>How Github attempts to solve this: fold the middle messages into a collapsed-message section.</summary>\n\n    ![Image](https://github.com/user-attachments/assets/811ef2a7-7022-4b8d-8df5-54579656b23c)\n    </details>\n\n    But notice that there are two versions of this problem:\n    \n    a. Too many messages\n    b. Individual messages are too large\n    \n    It would be great to find a solution that works for both cases.\n    \n    <details><summary>Solution ideas</summary>\n    \n    The solution space is:\n    \n    1. Add a new primitive for grouping messages, `st.thread(head_length=5, tail_length=5)` which, in this example, collapses all messages after the 5th and before the 5th-to-last. \n      * Pro: solves 2a\n      * Con: doesn't solve 2b\n      * Con: requires the developer to group messages they want to collapse.\n          <details><summary>For example:</summary>\n\n          ```py\n          # Group together consecutive messages from the same user\n          msg_groups = itertools.group_by(msgs, lambda msg: msg[\"user\"]\n          \n          # Draw message groups\n          for group in msg_groups:\n            with st.thread(head_length=5, tail_length=5):\n              for msg in group:\n                with st.chat_message(msg[\"user\"]):\n                  st.write(msg[\"body\"])\n          ```\n          </details>\n\n    2.  Add this behavior to `st.chat_message` itself, like `st.chat_message(msg[\"user\"], collapse_if_too_many=True)`\n      * Pro: solves 2a\n      * Con: doesn't solve 2b\n      * Pro: the developer doesn't have to write logic to group messages\n      * Con: either we'd need additional parameters to say how many messages are \"too many\", or the dev is in charge of tracking it manually.\n\n          <details><summary>For example:</summary>\n\n          ```py\n          # Group together consecutive messages from the same user\n          msg_groups = itertools.group_by(msgs, lambda msg: msg[\"user\"]\n          \n          for group in msg_groups:\n            for msg in group[:5]:\n              with st.chat_message(msg[\"user\"], collapse_if_too_many=False):\n                  st.write(msg[\"body\"])\n\n            for msg in group[5:-5]:\n              with st.chat_message(msg[\"user\"], collapse_if_too_many=True):\n                  st.write(msg[\"body\"])\n\n            for msg in group[-5:]:\n              with st.chat_message(msg[\"user\"], collapse_if_too_many=False):\n                  st.write(msg[\"body\"])\n          ```\n          </details>\n\n    Ok, now that I wrote this, it looks super complex! üòÜ \n\n    3.  Create a higher-level abstraction around chat\n      * Pro: solves 2a\n      * Con: could solve 2b, depending on how we do this\n      * Pro: the developer doesn't have to write logic to group messages\n      * Con: very prescriptive. As soon as devs want to do something that's not supported, they need to eject out into lower-level components.\n      * Pro: we can solve other problems with chat, such as simplifying the logic required to show the latest message and handling state. \n    \n        <details><summary>For example:</summary>\n    \n        ```py\n        st.chat_thread(msgs, coalesce_avatars=True, head_length=5, tail_length=5)\n        ```\n        </details>\n    \n        This solution is purely additive, in that it doesn't preclude us from implementing solutions i/ii as well. This is basically syntax sugar."
      }
    ]
  },
  {
    "issue_number": 11554,
    "title": "Navigation through long `st.chat` blocks",
    "author": "davidhu-openai",
    "state": "open",
    "created_at": "2025-06-07T03:30:26Z",
    "updated_at": "2025-06-15T10:51:40Z",
    "labels": [
      "type:enhancement",
      "feature:st.chat_message"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nThere's no easy way to navigate through a `st.chat` block other than scrolling. Especially for long `st.chat` blocks, it would be useful to add an option for a minimap or scrollbar.\n\n\n\n\n\n\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11554)\n"
      }
    ]
  },
  {
    "issue_number": 9431,
    "title": "The StreamlitCallbackHandler output of langchain React Agent is missing the ‚ÄúThought ‚Äù part.",
    "author": "SenvenJ",
    "state": "open",
    "created_at": "2024-09-10T12:03:40Z",
    "updated_at": "2025-06-15T10:50:54Z",
    "labels": [
      "type:enhancement",
      "feature:st.status",
      "upstream"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\n![‰ºÅ‰∏öÂæÆ‰ø°Êà™Âõæ_48ebaae7-a48e-4c67-b137-112bb8929e8b](https://github.com/user-attachments/assets/57d5f421-145d-4ff9-bfee-a97412c52751)\r\n![‰ºÅ‰∏öÂæÆ‰ø°Êà™Âõæ_e67b4949-bf30-4268-915f-9c4a01afef60](https://github.com/user-attachments/assets/dda458f0-232a-4e2b-b23a-8dab3bd03964)\r\n\r\nI am using the React agent framework of langchain and displaying the execution process on the web interface using the StreamlitCallbackHandler. However, I cannot see the relevant information of Agent Thought on the web interface, as shown in the red box in the figure. But I can see it when printing locally. Could you please advise on how to display all the reasoning information of the Agent on the web interface? I have referred to the approach in https://blog.langchain.dev/langchain-streamlit/, but the problem still persists.\n\n### Reproducible Code Example\n\n```Python\nimport requests\r\nfrom typing import Any, List, Mapping, Optional, Dict\r\n\r\nfrom langchain.callbacks.manager import CallbackManagerForLLMRun\r\nfrom langchain.llms.base import LLM\r\n\r\nfrom langchain.tools import BaseTool\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain_community.llms.utils import enforce_stop_tokens\r\nimport json\r\nimport streamlit as st\r\nfrom langchain_community.callbacks.streamlit import (\r\n    StreamlitCallbackHandler,\r\n)\r\n\r\n\r\n# self-define tools\r\nclass WeatherTool(BaseTool):\r\n    name = \"Weather\"\r\n    description = \"Use to search weather condition.\"\r\n\r\n    def _run(self, query: str) -> str:\r\n        return \"raining\"\r\n\r\nclass CustomCalculatorTool(BaseTool):\r\n    name = \"Calculator\"\r\n    description = \"Use for calculation.\"\r\n\r\n    def _run(self, query: str) -> str:\r\n        return \"3\"\r\n\r\nweather = WeatherTool()\r\ncalculator = CustomCalculatorTool()\r\ntools = [weather, calculator]\r\n\r\n# Initial agent\r\nquery = \"How about today's weather?\"\r\nllm = QwenLLM()\r\nagent = initialize_agent(tools, llm, agent=\"zero-shot-react-description\", verbose=True)\r\n# print(agent)\r\n# print(agent.run(query))\r\n\r\nif prompt := st.chat_input(\"Input\"):\r\n    with st.chat_message(\"user\", avatar='üßë‚Äçüíª'):\r\n        st.markdown(prompt)\r\n    # print(f\"[user] {prompt}\", flush=True)\r\n    with st.spinner(\"Processing...\"):\r\n        with st.chat_message(\"assistant\", avatar='ü§ñ'):\r\n            try:\r\n                st_callback = StreamlitCallbackHandler(st.container())\r\n                res = agent.run(prompt, callbacks=[st_callback])\r\n                st.write(res)\r\n            except Exception as e:\r\n                st.write(\"exceptionÔºö{}\".format(str(e)))\r\n    st.button(\"Clear\")\n```\n\n\n### Steps To Reproduce\n\nexecute the code.\n\n### Expected Behavior\n\nno info.\n\n### Current Behavior\n\nno info\n\n### Is this a regression?\n\n- [X] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:1.38.0\r\n- Python version:3.12\r\n- Operating System:\r\n- Browser:\r\n- langchain==0.1.20\r\n- langchain-community==0.0.38\r\n- langchain-core ==0.1.52\r\n- langchain-experimental==0.0.49\r\n- langchain-text-splitters==0.0.2\r\n- langchainhub ==0.1.21\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9431)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hello, I think this bug seems to be with https://github.com/langchain-ai/streamlit-agent\r\n\r\nI tried testing out one of their demos https://langchain-mrkl.streamlit.app/ and also didn't notice the output including the \"Thought\" so maybe this is by design. I'd recommend opening up an issue [here](https://github.com/langchain-ai/streamlit-agent/issues/new) for discussion.\r\n"
      }
    ]
  },
  {
    "issue_number": 5404,
    "title": "Automatically send reports to Slack",
    "author": "parker84",
    "state": "open",
    "created_at": "2022-09-22T21:04:30Z",
    "updated_at": "2025-06-15T10:50:15Z",
    "labels": [
      "type:enhancement",
      "type:possible-component",
      "area:utilities"
    ],
    "body": "### Problem\r\n\r\nI love streamlit and I want to use it for all of my dashboarding needs.\r\n\r\nBut ..... **I need my status dashboards to be automatically posted into slack, and I can't do that with streamlit.**\r\n\r\nSo currently I have all my self serve dashboards (for https://stan.store/) built on streamlit (hosted with streamlit cloud), but I need to use tableau for status dashboards that we want regularly posted into slack for everyone to check on everyday.\r\n\r\n### Solution\r\n\r\n**MVP:** I need some way to automatically send a screenshot of a streamlit dashboard into slack everyday at the same time.\r\n\r\n---\r\n\r\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\r\n\r\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**",
    "comments": [
      {
        "user": "jrieke",
        "body": "Makes sense! I think at some point we probably want to have this but it's not super high priority for us right now. @parker84 Is it enough if this would just post the link to your app in Slack or do you need a static version of the app or something like a PDF/HTML file?"
      },
      {
        "user": "parker84",
        "body": "> Makes sense! I think at some point we probably want to have this but it's not super high priority for us right now. @parker84 Is it enough if this would just post the link to your app in Slack or do you need a static version of the app or something like a PDF/HTML file?\r\n\r\nstatic version, like pdf / jpeg / ...\r\n\r\nThanks @jrieke !"
      },
      {
        "user": "carolinefrasca",
        "body": "Just wanted to note that this would be a great idea for a [custom component](https://docs.streamlit.io/library/components/create)!"
      }
    ]
  },
  {
    "issue_number": 8913,
    "title": "Integrated with VTable",
    "author": "fangsmile",
    "state": "open",
    "created_at": "2024-06-17T07:14:43Z",
    "updated_at": "2025-06-15T10:50:06Z",
    "labels": [
      "type:enhancement",
      "type:possible-component",
      "area:elements"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nWhether it can be integrated with VTable.  VTable table library has a strong visual display ability and high-performance.\r\nYou can check the VTable website for more informationÔºöhttps://visactor.io/vtable\r\nGithub: https://github.com/VisActor/VTable\r\n![img_v3_029n_c20f8bf0-914d-480e-9369-9541ff50bc7g](https://github.com/streamlit/streamlit/assets/3468473/a17b23a5-48d3-44b9-a862-dba9e040ebc7)\r\n\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8913)\n"
      }
    ]
  },
  {
    "issue_number": 11029,
    "title": "Add draw.io support",
    "author": "WhippingBoy01",
    "state": "open",
    "created_at": "2025-04-03T20:23:25Z",
    "updated_at": "2025-06-15T10:49:55Z",
    "labels": [
      "type:enhancement",
      "type:possible-component",
      "area:elements"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nwould be nice to be able to make/generate draw.io drawings in streamlit\n\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11029)\n"
      },
      {
        "user": "jrieke",
        "body": "Hey! It's unlikely we'll implement this as a native feature in Streamlit but I think that would be an awesome use case to build a [custom component](https://docs.streamlit.io/develop/concepts/custom-components/create) for!"
      }
    ]
  },
  {
    "issue_number": 4715,
    "title": "Streamlit health check (/healthz) ignoring 302",
    "author": "ahtokca",
    "state": "open",
    "created_at": "2022-05-10T13:37:34Z",
    "updated_at": "2025-06-15T10:49:05Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P4",
      "area:server"
    ],
    "body": "### Summary\r\n\r\n[WebsocketConnection](https://github.com/streamlit/streamlit/blob/4d78c03a1d1fd8f9e9f96f4029a51214b9da0ef5/frontend/src/lib/WebsocketConnection.tsx#L612) causes a flood of /healthz requests in case an user session is expired. N users open an app at 9am access expires lets say at 10am, so servers get N requests a second. We see the /healthz storms pretty often at back-end logs.\r\n\r\n### Steps to reproduce\r\n\r\n1. A backend with an Auth (make JWT token to expire quickly)\r\n2. Open the app page\r\n3. leave the page opened till JWT expired\r\n4. observe /heathz being called every second\r\n\r\n\r\n**Expected behavior:**\r\n\r\n[WebsocketConnection](https://github.com/streamlit/streamlit/blob/4d78c03a1d1fd8f9e9f96f4029a51214b9da0ef5/frontend/src/lib/WebsocketConnection.tsx#L612) handles 302 and redirects to the Location response header\r\n\r\n**Actual behavior:**\r\n\r\n302 status code is treated as a code to do a retry\r\n\r\n### Is this a regression?\r\n\r\nno\r\n\r\n### Debug info\r\n\r\n- Streamlit version:  1.5.0\r\n- Python version: 3.8\r\n- Using PipEnv\r\n- OS version: Debian ‚Äúbullseye‚Äù\r\n- Browser version: Edg/100.0.1185.57\r\n",
    "comments": [
      {
        "user": "kmcentush",
        "body": "Not sure if this is relevant for your use case, but I serve Streamlit behind a reverse proxy (OAuth2Proxy via NGINX, specifically) that automatically handles authentication. I then pass information through the headers to get per-user access within the streamlit app. When the token expires, the proxy refreshes the user token. And healthz is never abused."
      },
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-4715)\n"
      }
    ]
  },
  {
    "issue_number": 801,
    "title": "Detect common network setup errors in the frontend, and offer advice",
    "author": "tconkling",
    "state": "open",
    "created_at": "2019-12-05T00:29:34Z",
    "updated_at": "2025-06-15T10:48:52Z",
    "labels": [
      "type:enhancement",
      "area:server"
    ],
    "body": "There are several reasons why a user might hit a streamlit app and then get stuck forever at the \"Please wait...\" view. Maybe CORS isn't configured? Maybe `browser.serverAddress` is misconfigured? Maybe their firewall is not letting WebSocket traffic through? Maybe nginx/apache/some load balancer is misconfigured in some other way?\r\n\r\nIt'd be great if we detected some/all of these potential failure cases and offered advice on how to solve them, ideally right in the frontend so that nobody can miss it.\r\n\r\nhttps://discuss.streamlit.io/t/has-anyone-deployed-to-google-cloud-platform/931\r\nhttps://discuss.streamlit.io/t/ec2-streamlit-stuck-on-loading-screen-while-running-streamlit-hello/276\r\nhttps://discuss.streamlit.io/t/hosting-streamlit-on-heroku/132/13\r\nhttps://discuss.streamlit.io/t/hosting-streamlit-with-aws-ec2/234/7\r\n\r\n---\r\n\r\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\r\n\r\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**",
    "comments": [
      {
        "user": "jmugan",
        "body": "I've been struggling with \"Please wait.\" My app works on must devices but not iPhone at the moment. Any kinds of hints about what is going on would be useful. We love Streamlit, but are thinking about going back to Flask since we can't figure out a way for our users to reliably access the app. "
      }
    ]
  },
  {
    "issue_number": 4233,
    "title": "Streamlit React should forward Props",
    "author": "crubier",
    "state": "open",
    "created_at": "2022-01-04T16:03:27Z",
    "updated_at": "2025-06-15T10:48:16Z",
    "labels": [
      "type:enhancement",
      "feature:custom-components"
    ],
    "body": "### Problem\r\n\r\nWhen using Streamlit React, I need my Streamlit-Connected component (`withStreamlitConnection(foobar)`) to forward the props it receives from higher up in the react tree. (I put generic wrappers around my Streamlit component and it needs to receive these props)\r\n\r\nThis is impossible today.\r\n\r\n### Solution\r\n\r\nForward these props in the `ComponentWrapper` of `withStreamlitConnection` (Edit: PR #4234)\r\n\r\n### Additional context\r\n\r\nI need this, as I am writing a Library of Custom Streamlit components based on NextJS at my company, And I want my component to receive both NextJS's props and Streamlit Props\r\n\r\n---\r\n\r\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\r\n\r\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\r\n",
    "comments": [
      {
        "user": "crubier",
        "body": "PR at https://github.com/streamlit/streamlit/pull/4234"
      }
    ]
  },
  {
    "issue_number": 10993,
    "title": "BaseComponentRegistry.register_component should have access to the session ID or session context",
    "author": "sfc-gh-jkinkead",
    "state": "open",
    "created_at": "2025-04-01T20:40:05Z",
    "updated_at": "2025-06-15T10:48:05Z",
    "labels": [
      "type:enhancement",
      "feature:custom-components"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\n`BaseComponentRegistry.register_component` is called during app execution, while in the context of a single session. Sometimes it can be useful to track per-session information in the component registry - so having access to the session ID (or the session context to pull the ID from) would be extremely useful.\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-10993)\n"
      }
    ]
  },
  {
    "issue_number": 9904,
    "title": "Stale output from a long-running computation erroneously shows as not stale when app rerun",
    "author": "sfc-gh-bnisco",
    "state": "open",
    "created_at": "2024-11-22T00:07:11Z",
    "updated_at": "2025-06-15T10:47:45Z",
    "labels": [
      "type:bug",
      "area:frontend",
      "status:confirmed",
      "priority:P3"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nThis is a bug report on behalf of Thiago in order to keep it tracked.\r\n\r\nWhen a Streamlit app with long-running computation is stopped and then re-run, old stale data from the previous run show up as if it was not stale until the old thread completes execution, at which point the data is properly cleaned up.\r\n\r\n### Reproducible Code Example\r\n\r\n```Python\r\nimport platform\r\nimport time\r\n\r\nimport streamlit as st\r\n\r\nst.caption(\r\n    f\"\"\"\r\nRunning with Python {platform.python_version()} and Streamlit {st.__version__}.\r\n\"\"\"\r\n)\r\n\r\n\"\"\"\r\nThis is an app!!\r\n\"\"\"\r\n\r\n\r\ndef slow_computation(x):\r\n    st.write(\"Starting slow computation...\")\r\n    time.sleep(10)\r\n    st.write(\"Stopping slow computation...\")\r\n    return f\"Done, {x + 1}\"\r\n\r\n\r\nout = slow_computation(1)\r\n\r\nst.write(out)\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\nThis is a Playwright test that simulates the current behavior (which is to say, this test currently passes, but should fail once the underlying issue is fixed). There are `NOTE`s inline that describe expected behavior\r\n\r\n\r\n```py\r\nimport time\r\n\r\nfrom playwright.sync_api import Page, expect\r\n\r\n\r\ndef test_threading_behavior(page: Page):\r\n    # This uses `localhost:8501` since I was running different versions of Streamlit\r\n    # in an attempt to bisect this issue in case it was introduced at some point in time\r\n    page.goto(\"http://localhost:8501/\")\r\n\r\n    page.get_by_text(\"Stopping slow computation...\").wait_for(timeout=20000)\r\n    expect(page.get_by_text(\"Stopping slow computation...\")).to_be_visible()\r\n\r\n    print(page.query_selector_all(\".element-container\")[0].inner_text())\r\n\r\n    # At this point, the first run of the thread completed\r\n    expect(page.get_by_text(\"Done, 2\")).to_be_visible()\r\n\r\n    # conditional logic to make it work with older versions of Streamlit\r\n    if page.query_selector('div[data-testid=\"stMainMenu\"]'):\r\n        page.get_by_test_id(\"stMainMenu\").click()\r\n    elif page.query_selector('[id=\"MainMenu\"]'):\r\n        main_menu = page.query_selector('[id=\"MainMenu\"]')\r\n        if main_menu:\r\n            main_menu.click()\r\n\r\n    # Now we are re-running the app\r\n    page.get_by_text(\"Rerun\").click()\r\n\r\n    # Some time delay so that the new thread is started and some elements are marked as stable\r\n    time.sleep(2)\r\n\r\n    # Expect some of the elements to be marked as stale\r\n    assert len(page.query_selector_all('div[data-stale=\"true\"]')) == 2\r\n    expect(page.get_by_text(\"Stopping slow computation...\")).to_be_visible()\r\n    expect(page.get_by_text(\"Done, 2\")).to_be_visible()\r\n\r\n    # Stop the new thread\r\n    page.get_by_role(\"button\", name=\"Stop\").click()\r\n\r\n    time.sleep(2)\r\n\r\n    # NOTE: This should not pass. Stale elements shouldn't suddenly be marked as not stale\r\n    # since these are old results from a thread that was supposed to have been stopped\r\n    assert len(page.query_selector_all('div[data-stale=\"true\"]')) == 0\r\n\r\n    # NOTE: This should not pass. It is unexpected that the results from the old thread\r\n    # are still showing up, despite us re-running\r\n    expect(page.get_by_text(\"Stopping slow computation...\")).to_be_visible()\r\n    expect(page.get_by_text(\"Done, 2\")).to_be_visible()\r\n\r\n    # wait for the thread to complete\r\n    time.sleep(10)\r\n\r\n    # Expect old elements to be cleared out\r\n    expect(page.get_by_text(\"Stopping slow computation...\")).not_to_be_visible()\r\n    expect(page.get_by_text(\"Done, 2\")).not_to_be_visible()\r\n```\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### Current Behavior\r\n\r\n_No response_\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.0.0 -> 1.40.1 all show this behavior (I didn't test versions before)\r\n- Python version: 3.8\r\n- Operating System: Mac\r\n- Browser: Chrome\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9904)\n"
      }
    ]
  },
  {
    "issue_number": 4211,
    "title": "Keybinding to open full list simultaneously in `st.json`",
    "author": "BigSalmon2",
    "state": "open",
    "created_at": "2021-12-23T18:16:13Z",
    "updated_at": "2025-06-15T10:45:50Z",
    "labels": [
      "type:enhancement",
      "feature:st.json"
    ],
    "body": "I was curious to know if there was a certain keyboard combination that I could press to automatically open all of the containers at once. I did not see anything in the documentation, so perhaps this is a feature yet to have been added.\r\n\r\n![image](https://user-images.githubusercontent.com/61605789/147278169-ae96dff8-5246-4d07-b3b1-d208c47e7b27.png)\r\n\r\n---\r\n\r\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\r\n\r\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**",
    "comments": [
      {
        "user": "vdonato",
        "body": "Hi @BigSalmon2!\r\n\r\nThere currently isn't a built-in keybinding to do this. I'll pass this suggestion to our product team and will get back to you if we're able to allocate some bandwidth to adding this feature."
      }
    ]
  },
  {
    "issue_number": 9613,
    "title": "Add Option to Set Default Zoom Level in Streamlit Apps",
    "author": "hamzakabbaj",
    "state": "closed",
    "created_at": "2024-10-07T10:35:22Z",
    "updated_at": "2025-06-15T10:40:55Z",
    "labels": [
      "type:enhancement",
      "feature:theming"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nI would like to propose a feature that would enhance the user experience of Streamlit apps. Currently, the font size and layout of Streamlit apps appear relatively large, and I often find myself recommending users manually adjust their browser zoom level (to around 70%) for optimal usability.\r\n\n\n### Why?\n\nIt would be beneficial to have an option within Streamlit‚Äôs configuration or layout settings that allows developers to specify a default zoom level or scale for the page. This would provide developers with more control over the appearance of the app and allow for a more consistent user experience across devices and screen sizes without needing users to manually adjust their browser settings.\r\n\r\n**Key Benefits:**\r\n\r\n1. Improved Usability: Developers could fine-tune the UI to look exactly as intended across different screen sizes.\r\n2. Consistency: A configurable zoom setting would ensure that all users see the same layout without relying on their manual intervention.\r\n3. Flexibility: Developers could set a default zoom percentage (e.g., 70%) based on their app‚Äôs design requirements.\r\n\r\n\r\nI believe this feature would be highly beneficial for developers looking to provide a more polished presentation of their applications.\r\n\r\nThank you for considering this suggestion. I would be happy to provide any additional feedback or clarification if needed.\n\n### How?\n\nThis feature could be an additional configuration option (e.g., zoom_level) in the config.toml file or through the st.set_page_config() function. The zoom setting would automatically adjust the scale of the page, offering a more customized and refined layout experience.\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-9613)\n"
      },
      {
        "user": "kaquisado",
        "body": "+1 right now I have a toast that reminds the user to use certain zoom level. Only reminds first time per session by saving status in session state but this would avoid these altogether"
      },
      {
        "user": "puyanera",
        "body": "Yes please, this would be great!"
      }
    ]
  },
  {
    "issue_number": 11591,
    "title": "st.login for microsoft doesnt work with the redirect url endpoint(oauth2callback)",
    "author": "Sairam90",
    "state": "closed",
    "created_at": "2025-06-11T14:17:54Z",
    "updated_at": "2025-06-15T09:06:05Z",
    "labels": [
      "type:bug"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nError for Microsoft provider st.login('microsoft')\nError: 400: Expecting value: line 3 column 1 (char 4) - As displayed on https://app-url//auth/login?provider=encoded value\n\nUsing \nAuthlib ==1.6.0\nStreamlit ==1.45.0\n\nIt works as expected if I use Authlib and streamlit separately and and do not use the redirect uri endpoint as 'oauth2callback' \n\nProvided the details in below sections\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nif __name__ == \"__main__\":\n\n    if not st.user.is_logged_in:\n        st.login(\"microsoft\")\n    elif st.user.is_logged_in:\n\n        st.session_state['authenticated'] = True\n        st.write(st.user)\n```\n\n### Steps To Reproduce\n\n1.Create an Azure App and fill details in .streamlit/secrets.toml as given\n[auth]\ncookie_secret = \"value\"\nredirect_uri = \"https://app-url/oauth2callback\"\ntenant_id = \"value\"\nserver_metadata_url = \"https://login.microsoftonline.com/tenant-id/oauth2/v2.0/authorize\"  \nclient_id = \"value\"\nclient_secret = \"value\"\n\n[auth.microsoft]\ncookie_secret = \"value\"\nredirect_uri = \"https://app-url/oauth2callback\"\ntenant_id = \"value\"\nserver_metadata_url = \"https://login.microsoftonline.com/tenant-id/oauth2/v2.0/authorize\"  \nclient_id = \"value\"\nclient_secret = \"value\"\n\n2.create main.py file \n```\nimport streamlit as st\n\nif __name__ == \"__main__\":\n\n    if not st.user.is_logged_in:\n        st.login(\"microsoft\")\n    elif st.user.is_logged_in:\n\n        st.session_state['authenticated'] = True\n        st.write(st.user)\n```3. Error: 400: Expecting value: line 3 column 1 (char 4) - As displayed on https://app-url//auth/login?provider=encoded value\n\n### Expected Behavior\n\nOuath2 works fine separately when used with Authlib and redirect url is not directed to \"oauth2callback\" endpoint\nSo , the bug seems to be with the handling of the oauth2callback in streamlit for this case\n\n\nimport streamlit as st\nfrom authlib.integrations.requests_client import OAuth2Session\nfrom urllib.parse import urlparse, parse_qs\n\n# Azure AD Configuration\nCLIENT_ID = \"value\"\nCLIENT_SECRET = \"value\"\nTENANT_ID = \"value\"\nAUTHORITY = f\"https://login.microsoftonline.com/{TENANT_ID}\"\nAUTHORIZE_URL = f\"{AUTHORITY}/oauth2/v2.0/authorize\"\nTOKEN_URL = f\"{AUTHORITY}/oauth2/v2.0/token\"\nREDIRECT_URI = \"https://app-url\"   **without oauth2callback endpoint**\nSCOPE = [\"User.Read\"]  # Microsoft Graph scope to read profile info\n\n# Initialize OAuth client\noauth = OAuth2Session(\n    client_id=CLIENT_ID,\n    client_secret=CLIENT_SECRET,\n    redirect_uri=REDIRECT_URI,\n    scope=SCOPE,\n)\n\n# Show login link if not authenticated\nif \"token\" not in st.session_state:\n    auth_url, state = oauth.create_authorization_url(AUTHORIZE_URL)\n    st.write(auth_url)\n    st.write(\"## Login with Microsoft\")\n    st.markdown(f\"[Click here to login]({auth_url})\")\n\n    # Check for redirected code\n    query_params = st.query_params\n    if \"code\" in query_params:\n        code = query_params[\"code\"][0]\n        try:\n            token = oauth.fetch_token(TOKEN_URL, code=code)\n            st.session_state[\"token\"] = token\n            st.success(\"‚úÖ Successfully logged in with Microsoft!\")\n        except Exception as e:\n            st.error(f\"Login failed: {e}\")\nelse:\n    st.write(\"‚úÖ You are already logged in.\")\n    st.json(st.session_state[\"token\"])\n\n\n### Current Behavior\n\n3. Error: 400: Expecting value: line 3 column 1 (char 4)\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.0 \n- Python version:3.11.6\n- Operating System:Windows,Linux \n- Browser:Chrome\n- Authlib - 1.6.0\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11591)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @Sairam90 , thank you for filing this issue!\n\nI believe the root cause of the `400: Expecting value` error is a misconfiguration in your `.streamlit/secrets.toml` file. The `st.login` command is designed to use the OpenID Connect (OIDC) discovery mechanism, which requires the `server_metadata_url` to point to a JSON document containing the provider's configuration. This code looks to have this value set to Microsoft's authorization endpoint (`https://login.microsoftonline.com/tenant-id/oauth2/v2.0/authorize`).\n\nTo fix this, you should update the `server_metadata_url` to point to Microsoft's OIDC discovery document, as shown in the [`st.login` documentation](https://docs.streamlit.io/develop/api-reference/user/st.login).\n\nI believe the separate `authlib` script works because it bypasses this discovery mechanism by providing the `authorize` and `token` URLs directly to the client. In contrast, `st.login` is a higher-level abstraction that uses the OIDC standard discovery flow, which is why it relies on the metadata URL for its configuration. Correcting this URL in your secrets file should resolve the issue."
      },
      {
        "user": "Sairam90",
        "body": "Yup, just found out the same , Thanks a lot!"
      }
    ]
  },
  {
    "issue_number": 7868,
    "title": "`st.data_editor` doesn‚Äôt return the input value unless you press Enter or click outside the editor",
    "author": "Wattyyy",
    "state": "open",
    "created_at": "2023-12-21T17:11:15Z",
    "updated_at": "2025-06-14T06:48:46Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nUnlike `st.number_input`, `st.text_area`, and other widgets, `st.data_editor` only returns the input value after the user presses Enter or clicks outside the currently focused cell (excluding clicks on buttons).\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-7868)\n\n```Python\nimport pandas as pd\nimport streamlit as st\n\n\ndef set_state(i: int, df: pd.DataFrame) -> None:\n    st.session_state.stage = i\n    st.session_state.df = df\n\n\nif \"stage\" not in st.session_state:\n    st.session_state.stage = 0\n\nif st.session_state.stage == 0:\n    st.write(\"Input your data\")\n    df = st.data_editor(pd.DataFrame({\"col1\": [\"a\", \"b\"], \"col2\": [\"c\", \"d\"]}))\n    st.button(\n        \"Begin\",\n        on_click=set_state,\n        args=[1, df],\n    )\n\nif st.session_state.stage == 1:\n    st.write(\"Your data\")\n    st.dataframe(st.session_state.df)\n```\n\n\n### Steps To Reproduce\n\n1. Click and edit a cell\n2. Press the `Begin` button without clicking another area or pressing the Enter key.\n3. Input value is not shown (input value is not returned from `st.data_editor`)\n\n![Screen Recording 2023-12-22 at 2 02 09](https://github.com/streamlit/streamlit/assets/45100960/0bd9f592-772c-440f-b06c-c73eee2e55c2)\n\n\n\n### Expected Behavior\n\nInput value is shown after clicking the button (input value is returned from `st.data_editor`).\n\n### Current Behavior\n\nInput value is not shown after clicking the button (input value is not returned from `st.data_editor`).\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n  - 1.29.0\n- Python version:\n  - 3.11.6\n- Operating System:\n  - Ubuntu 22.04.2 LTS\n- Browser:\n  - Google Chrome\n\n\n### Additional Information\n\nIf this is an expected behavior, feel free to close this issue.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-7868)\n"
      },
      {
        "user": "anirudh-hegde",
        "body": "Hey @Wattyyy,\r\nInput value is shown after clicking the button and also Enter key is not pressed.\r\n\r\n[Screencast from 22-12-23 08:35:18 PM IST.webm](https://github.com/streamlit/streamlit/assets/105560839/8e981800-fe3b-4bfa-a11e-ed8b0b734e69)\r\n"
      },
      {
        "user": "Wattyyy",
        "body": "Hello @anirudh-hegde,\r\nAfter receiving your response, I tried inputting the value and clicking the button several times, but sometimes the input value is shown, and sometimes it is not.\r\nTherefore, this issue may be due to a race condition.\r\n\r\n![Screen Recording 2023-12-23 at 1 24 53](https://github.com/streamlit/streamlit/assets/45100960/4c8c2c00-7c28-48c7-bbbb-09b377ead7f0)\r\n"
      }
    ]
  },
  {
    "issue_number": 7862,
    "title": "Inputs are not saved in `st.session_state` when blocking happens",
    "author": "Wattyyy",
    "state": "open",
    "created_at": "2023-12-20T15:31:02Z",
    "updated_at": "2025-06-14T06:37:29Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.session_state",
      "feature:callbacks"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nIf blocking (e.g., HTTP request, sleep) happens after the button click, user inputs on `st.text_area` are not saved on `st.session_state`.\nAlso, if the blocking function is commented out, inputs on `st.text_area` are saved on `st.session_state` after the button click.\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-7862)\n```Python\nimport time\n\nimport streamlit as st\n\n\ndef set_state(i: int, text: str):\n    st.session_state.stage = i\n    st.session_state.lines = text.splitlines()\n\n\ntime.sleep(2)\nif \"stage\" not in st.session_state:\n    st.session_state.stage = 0\nif st.session_state.stage == 0:\n    text = st.text_area(\"Input your text\", height=100)\n    st.button(\n        \"Begin\",\n        on_click=set_state,\n        args=[1, text],\n    )\nif st.session_state.stage == 1:\n    st.title(\"Your text\")\n    for i, line in enumerate(st.session_state.lines):\n        st.write(f\"{i}. {line}\")\n```\n\n\n### Steps To Reproduce\n\n1. Input some text on text area\n2. Click `Begin` button\n3. Only the title is displayed(contents of `st.session_state` are not shown)\n\n![Screen Recording 2023-12-22 at 2 25 05](https://github.com/streamlit/streamlit/assets/45100960/550da1b4-2db0-4e88-9335-abf26e6204e1)\n\n\n### Expected Behavior\n\nInputs are saved on `st.session_state` and shown after the button click.\n\n### Current Behavior\n\nUser inputs are not saved in `st.session_state` when the button is clicked directly. However, if the user clicks somewhere other than the button or text area before clicking the button (which causes blocking), the input is saved as expected.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n  - 1.29.0\n- Python version:\n  - 3.11.6\n- Operating System:\n  - Ubuntu 22.04.2 LTS\n- Browser:\n  - Google Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-7862)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@Wattyyy Thanks for reporting this issue. I was able to reproduce it [here](https://issues.streamlit.app/?issue=gh-7862). This looks like a race condition where the button event is processed before the text_area event. A potential workaround might be to use a `key` on `text_area` and to get the text value from the session state via the key. But not sure if this is working... "
      },
      {
        "user": "Wattyyy",
        "body": "@LukasMasuch \r\nAs you said, the following code using `key` on `text_area` worked, so we will adopt the workaround for the time being.\r\nThanks for your response!\r\n\r\n```python\r\nimport time\r\n\r\nimport streamlit as st\r\n\r\n\r\ndef set_state(i: int):\r\n    st.session_state.stage = i\r\n    st.session_state.lines = st.session_state.text.split(\"\\n\")\r\n\r\n\r\ntime.sleep(2)\r\nif \"stage\" not in st.session_state:\r\n    st.session_state.stage = 0\r\nif st.session_state.stage == 0:\r\n    text = st.text_area(\"Input your text\", height=30, key=\"text\")\r\n    st.button(\r\n        \"Begin\",\r\n        on_click=set_state,\r\n        args=[1],\r\n    )\r\nif st.session_state.stage == 1:\r\n    st.title(\"Your text\")\r\n    for i, line in enumerate(st.session_state.lines):\r\n        st.write(f\"{i}. {line}\")\r\n\r\n```\r\n"
      }
    ]
  },
  {
    "issue_number": 11611,
    "title": "Widgets use different placeholder & disabled colors",
    "author": "lukasmasuch",
    "state": "closed",
    "created_at": "2025-06-12T14:38:28Z",
    "updated_at": "2025-06-14T01:20:27Z",
    "labels": [
      "type:bug",
      "area:widgets",
      "area:styling",
      "status:confirmed",
      "priority:P3"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe colors used for placeholder text (`fadedtext60`) and disabled state (`fadedText40`) should be the same across all widgets. But this isn't the case currently.\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11611)\n\n```Python\nimport streamlit as st\n\ncol1, col2 = st.columns(2)\n\nwith col1:\n  st.selectbox(\"Selectbox\", options=[\"A\", \"B\"], index=None)\n  st.multiselect(\"Multiselect\", options=[\"A\", \"B\"])\n  st.text_input(\"Text Input\", placeholder=\"Placeholder\")\n  st.text_area(\"Text Area\", placeholder=\"Placeholder\")\n  st.number_input(\"Number Input\", value=None, placeholder=\"Placeholder\")\n  st.date_input(\"Date Input\", value=None)\n  st.time_input(\"Time Input\", value=None)\n  st.chat_input(\"Chat Input\")\n\nwith col2:\n  st.selectbox(\"Selectbox (disabled)\", options=[\"A\", \"B\"], index=None, disabled=True)\n  st.multiselect(\"Multiselect (disabled)\", options=[\"A\", \"B\"], disabled=True)\n  st.text_input(\"Text Input (disabled)\", placeholder=\"Placeholder\", disabled=True)\n  st.text_area(\"Text Area (disabled)\", placeholder=\"Placeholder\", disabled=True)\n  st.text_area(\"Number Input (disabled)\", value=None, placeholder=\"Placeholder\", disabled=True)\n  st.date_input(\"Date Input (disabled)\", value=None, disabled=True)\n  st.time_input(\"Time Input (disabled)\", value=None, disabled=True)\n  st.chat_input(\"Chat Input (disabled)\", disabled=True)\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\nAll widgets use the same colors for the placeholder text (`fadedtext60`) and disabled state (`fadedText40`).\n\n### Current Behavior\n\nDifferent colors are used across widgets:\n\n![Image](https://github.com/user-attachments/assets/356db792-6c5f-4621-a20a-47b5e20080dd)\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.11\n- Operating System: MacOS\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11611)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "Closing this since I think everything got fixed."
      }
    ]
  },
  {
    "issue_number": 11647,
    "title": "Connection error",
    "author": "elremyo",
    "state": "closed",
    "created_at": "2025-06-13T21:44:42Z",
    "updated_at": "2025-06-13T21:55:30Z",
    "labels": [
      "type:bug",
      "status:duplicate"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen I clicked on a button in my app, I got this error. It happened once and I couldn't reproduce it. \n\nFailed to process a Websocket message. Error: Cached ForwardMsg MISS [hash=1d99864e8c71263a2968f13e2df28735]. This is not expected to happen. Please [report this bug](https://github.com/streamlit/streamlit/issues).\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.0\n- Python version: 3.10.6\n- Operating System: Windows 11\n- Browser: Brave\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11647)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hello @elremyo , thank you for filing this issue! Based off the information provided it looks like you are hitting a known issue in Streamlit `1.45.0`. This issue was fixed and patched in version `1.45.1`. Please update to `1.45.1` in order to solve this. Thanks again for being a Streamlit user!"
      }
    ]
  },
  {
    "issue_number": 9743,
    "title": "Inherit `icon` in `st.page_link` from `st.Page`",
    "author": "SiddhantSadangi",
    "state": "closed",
    "created_at": "2024-10-26T18:34:56Z",
    "updated_at": "2025-06-13T17:15:36Z",
    "labels": [
      "type:enhancement",
      "feature:st.page_link"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\n`st.page_link` does not inherit the icon from `st.Page`, even though it inherits the `title` as `label`.\r\n\r\nFor example, the below script:\r\n\r\n```py\r\nimport streamlit as st\r\n\r\n\r\ndef home():\r\n    st.title(\"Home\")\r\n\r\n\r\ndef about():\r\n    st.title(\"About\")\r\n\r\n\r\nhome_page = st.Page(home, title=\"Home\", icon=\":material/home:\")\r\nabout_page = st.Page(about, title=\"About\", icon=\":material/info:\")\r\n\r\npg = st.navigation(\r\n    [\r\n        home_page,\r\n        about_page,\r\n    ]\r\n)\r\n\r\nwith st.sidebar:\r\n    st.page_link(home_page)\r\n\r\n\r\npg.run()\r\n```\r\n\r\nGives me the app as shown below:\r\n![image](https://github.com/user-attachments/assets/ac72f9e0-97ff-42f5-bfd3-603c4f9f61af)\r\n\r\nAs you can see, the page link created by `st.page_link` inherits `title` as `label` from `st.Page`, but not the `icon`. Seems inconsistent.\n\n### Why?\n\nInheriting the icon would make the behavior more consistent. And if someone did not want an icon with the page link, they would either not set it in `st.Page`, or if they want the icon elsewhere (default navigation/favicon) but not where page link is used, they can pass `icon=False` in `st.page_link`.\n\n### How?\n\n_No response_\n\n### Additional Context\n\nhttps://siddhantsadangi.slack.com/archives/C03BGMVBD5L/p1729966419785339",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-9743)\n"
      }
    ]
  },
  {
    "issue_number": 11643,
    "title": "Show hex colors in Markdown, similar to GitHub",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-06-13T16:36:18Z",
    "updated_at": "2025-06-13T17:07:52Z",
    "labels": [
      "type:enhancement",
      "good first issue",
      "feature:markdown"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nIf you write a hex color in Markdown on GitHub, it shows a little color dot next to it: `#0969DA`. See also [here](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#supported-color-models). We should support that too!\n\n### Why?\n\nNice little enhancement!\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11643)\n"
      }
    ]
  },
  {
    "issue_number": 10824,
    "title": "`wrap_lines` in `st.code` doesn't wrap if there's no whitespace",
    "author": "jrieke",
    "state": "closed",
    "created_at": "2025-03-18T18:31:11Z",
    "updated_at": "2025-06-13T16:58:33Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P4",
      "feature:st.code"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nIf `wrap_lines=True` is set in `st.code`, it only wraps on whitespace. That means long strings without a whitespace won't wrap. \n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-10824)\n\n```Python\nimport streamlit as st\n\nlong_string = \"askldfjlweklrjweifjlsdfliwjlierjilsildfjlslfijwilerijlesijlrlijsdflijslijerilweilrilsdfilsilfijlsdf\"\n\nst.code(long_string, wrap_lines=True)\n```\n\n### Steps To Reproduce\n\nRun this app, or see [playground](https://streamlit.io/playground?example=blank&code=H4sIAAAAAAAAA02NQQ7DMAgE736FlVMrVf1BftF7ZDUkWrJxInDl75fm1AOwjHYB-3lYy95Myk60XDyWlHjUdQqKuuYxD8U3zouyy0bTLgjt80J0JcQUdFwG5wLtoBiU4tGM0MuqHhU8joAxAl6xCPz0kJK35_uY5fb3_JG7lXMiqvj4so_cv_NhDCGyAAAA).\n\n### Expected Behavior\n\nWraps. \n\n### Current Behavior\n\nDoesn't wrap. \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.43\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10824)\n"
      }
    ]
  },
  {
    "issue_number": 868,
    "title": "Make it easier to render newlines in markdown",
    "author": "tconkling",
    "state": "closed",
    "created_at": "2019-12-18T19:01:05Z",
    "updated_at": "2025-06-13T16:39:33Z",
    "labels": [
      "type:enhancement",
      "feature:markdown"
    ],
    "body": "This isn't a bug, but rather a potential source of confusion. (I was confused, at least.)\n\nIn markdown, if you want a newline in your text, simply putting a newline character in is not enough. You have to put two whitespace characters at the end of the previous line.\n\n```python\nimport streamlit as st\nst.write(\"Not multi-\\nline\")\nst.write(\"Still not multi- \\nline\")\nst.write(\"Ok now it's multi-  \\nline\")\n```\n\nApparently [this is part of the spec](https://markdown-guide.readthedocs.io/en/latest/basics.html#line-return), so maybe we shouldn't do anything here. But it seemed confusing enough to be worth noting.\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-868)",
    "comments": [
      {
        "user": "Jenia-Jeba",
        "body": "I am still not able to put down multiple blank spaces , can anyone help me out ? "
      },
      {
        "user": "Bipasori",
        "body": "> I am still not able to put down multiple blank spaces , can anyone help me out ?\r\n\r\n1. line feed works;\r\nst.text(\" \\n\")\r\nst.text(\" \\n\")\r\nst.text(\" \\n\")\r\n\r\n2. st.text(\" \\n \\n \\n\") works like;\r\nst.text(\" \\n\")\r\n\r\n3. st.text(\" \\n \\n \\n Text\") works;\r\n\r\n4. Blanks works;\r\nst.text(\"Start   ..... blanks here ....        End\")\r\n\r\nAny other situation?\r\nThank you."
      },
      {
        "user": "Gurudeeban-Selvaraj",
        "body": "@Jenia-Jeba @Bipasori \r\n\r\nYou could try this\r\n\r\nst.subheader('Plug into nirvana')\r\nst.markdown(\r\n    \"90% of people love to enjoy music, while they are working!  \\n\"\r\n    \"are you one of them, we have a curated list of chillout tracks  \\n\"\r\n    \"that may help you bring out the calmness in you.\"\r\n)\r\nTwo spaces in the end of the line create a line break in Markdown.\r\nit is working for me[https://github.com/streamlit/streamlit/issues/561](url)"
      }
    ]
  },
  {
    "issue_number": 11637,
    "title": "Two dialog boxes try to open because table row selection does not get cleared",
    "author": "ChrisRebase",
    "state": "closed",
    "created_at": "2025-06-13T05:05:24Z",
    "updated_at": "2025-06-13T16:21:57Z",
    "labels": [],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen a dialog box is displayed as a result of selecting a row in a dataframe, the row selection does not get cleared after the dialog box gets closed. If the user performs a second action in the app that should open a dialog box, then they would receive an error, unless they explicitly un-select the row from the dataframe.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nimport pandas as pd\n\ndf_users = pd.DataFrame(\n    [\n        {\n            \"name\": \"Jane Doe\",\n            \"type\": \"Admin\",\n            \"status\": \"Active\",\n            \"email\": \"JaneDoe@gmail.com\",\n        },\n        {\n            \"name\": \"John Smith\",\n            \"type\": \"Power User\",\n            \"status\": \"Active\",\n            \"email\": \"JohnSmith@gmail.com\",\n        },\n    ]\n)\n\n\n@st.dialog(\"User Details\")\ndef user_details_dialog(user: pd.Series):\n    st.dataframe(user)\n\n\n@st.dialog(\"Add User\")\ndef add_user():\n    \"\"\"Popup dialog for new user\"\"\"\n\n    with st.form(\"new_user\"):\n        user_name = st.text_input(\"Name\")\n        user_type = st.text_input(\"Type\")\n        user_email = st.text_input(\"Email\")\n        submitted = st.form_submit_button(\"Add User\")\n\n    if submitted:\n        # ... Do something with the user...\n        st.toast(\"User Added!\")\n        st.rerun()\n\n\nif st.button(\"Add New User\"):\n    add_user()\n\n\nuser_select = st.dataframe(\n    df_users[[\"name\", \"status\"]],\n    on_select=\"rerun\",\n    selection_mode=\"single-row\",\n    key=\"user_table\",\n)\n\nif user_select.selection.rows:\n    user_details_dialog(df_users.iloc[user_select.selection.rows[0]])\n```\n\n### Steps To Reproduce\n\n1. Select a row in the dataframe to display a dialog box with the user's details\n2. Close the dialog box\n3. Select the _Add New User_ button to display a dialog box to add a new user\n4. See the error thrown on the screen\n\n### Expected Behavior\n\nWhen the dialog box is closed, the row from the dataframe should get un-selected so the application doesn't try to re-open the dialog box again when a new action is performed that tries to open a separate dialog box.\n\n### Current Behavior\n\nError Message:\n```\nstreamlit.errors.StreamlitAPIException: Only one dialog is allowed to be opened at the same time. Please make sure to not call a dialog-decorated function more than once in a script run.\n```\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44.1\n- Python version: 3.9.16\n- Operating System: MacOS 15.3.1\n- Browser: Chrome\n\n\n### Additional Information\n\nIdeas for solutions:\nOne Idea: Allow users to select rows from the dataframe by clicking the row, rather than clicking the select box on the row. This would prevent the selection from persisting after the callback function is performed\n\nAnother option: allow a configurable parameter that un-selects the row after the action is performed",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11637)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @ChrisRebase , thank you for filing this issue! I was able to reproduce the error outlined in the ticket using the provided code. Thank you, that is very helpful!\n\nThis is expected behavior right now. With that said, we can achieve the desired behavior by restructuring the provided code just a little bit:\n\n```py\nimport streamlit as st\nimport pandas as pd\n\n\ndf_users = pd.DataFrame(\n    [\n        {\n            \"name\": \"Jane Doe\",\n            \"type\": \"Admin\",\n            \"status\": \"Active\",\n            \"email\": \"JaneDoe@gmail.com\",\n        },\n        {\n            \"name\": \"John Smith\",\n            \"type\": \"Power User\",\n            \"status\": \"Active\",\n            \"email\": \"JohnSmith@gmail.com\",\n        },\n    ]\n)\n\n\n@st.dialog(\"User Details\")\ndef user_details_dialog(user: pd.Series):\n    st.dataframe(user)\n\n\n@st.dialog(\"Add User\")\ndef add_user():\n    \"\"\"Popup dialog for new user\"\"\"\n\n    with st.form(\"new_user\"):\n        user_name = st.text_input(\"Name\")\n        user_type = st.text_input(\"Type\")\n        user_email = st.text_input(\"Email\")\n        submitted = st.form_submit_button(\"Add User\")\n\n    if submitted:\n        # ... Do something with the user...\n        st.toast(\"User Added!\")\n        st.rerun()\n\n\n# We store the button's return value in a variable to use in our control logic.\nadd_user_clicked = st.button(\"Add New User\")\n\n\nuser_select = st.dataframe(\n    df_users[[\"name\", \"status\"]],\n    on_select=\"rerun\",\n    selection_mode=\"single-row\",\n    key=\"user_table\",\n)\n\n# Use an if/elif structure to prioritize actions and ensure only one dialog-opening\n# action can occur per script run.\nif add_user_clicked:\n    # If the button was clicked, we ONLY open the \"add user\" dialog.\n    add_user()\n\nelif user_select.selection.rows:\n    # This block is only reached if the \"Add New User\" button was NOT clicked.\n    # It handles the dataframe selection event.\n    user_details_dialog(df_users.iloc[user_select.selection.rows[0]])\n```\n\nNote here that we've put the dialog behavior behind an if/else statement to ensure only 1 dialog is shown at a time. I hope this helps, thanks!"
      }
    ]
  },
  {
    "issue_number": 6140,
    "title": "HTML header and footer customisation",
    "author": "tonyallan",
    "state": "open",
    "created_at": "2023-02-16T04:41:15Z",
    "updated_at": "2025-06-13T12:01:13Z",
    "labels": [
      "type:enhancement",
      "area:layout",
      "area:styling",
      "feature:st.html"
    ],
    "body": "### Problem\n\nI'm frustrated because I cannot customise a page so it is visually the same as other pages in my application.\n\nI would like to be able to replace the HTML `<header>` and `<footer>` tags contents and add additional tags to the HTML `<head>` to, for example specify CSS and script resources. \n\n### Solution\n\n**MVP:** What's the smallest possible solution that would get 80% of the problem out of the way?\n\nReplace the content of the `<header>` and `<footer>` tags with new (unsafe) HTML including `<style>` and `<script>`.\n\n**Possible additions:** What are other things that could be added to the MVP over time to make it better?\n\nMore control in general of page and container layout.\n\n**Preferred solution:** If you don't like the MVP above, tell us why, and what you'd like done instead.\n\nAllow customisation as follows (for example):\n\n`st.html.append_head(html)` ‚Äîappend tags to the `<head>` tag.\n`st.html.header(html)` ‚Äî replace the entire contents of the `<header>` tag with specified html text.\n`st.html.footer(html)` ‚Äî replace the entire contents of the `<footer>` tag with specified html text.\n\nThese functions would allow unsafe HTML to be specified.\n\n### Additional context\n\nN/A\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-6140)",
    "comments": [
      {
        "user": "carolinefrasca",
        "body": "Thank you for sharing this request, @tonyallan! "
      },
      {
        "user": "jdbranham",
        "body": "Found a workaround for this, by injecting the custom content to the `index.html` file at runtime. \r\n\r\nhttps://stackoverflow.com/a/78992559/1308685  "
      },
      {
        "user": "rrjj607",
        "body": "+1 on this, I would like to have the option to add Google Analytics tag inside the `head` tag without dirty workarounds..."
      }
    ]
  },
  {
    "issue_number": 9945,
    "title": "Material icons don't work if `unsafe_allow_html=True`",
    "author": "JosephMarinier",
    "state": "closed",
    "created_at": "2024-11-29T04:26:09Z",
    "updated_at": "2025-06-13T11:14:38Z",
    "labels": [
      "type:bug",
      "feature:markdown",
      "status:confirmed",
      "priority:P2"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nWhen passing `unsafe_allow_html=True` to `st.markdown()`, Material icons don't work. The `span` is created as expected, with the correct inner text, but it is missing the `style` attribute, namely the `font-family: \"Material Symbols Rounded\";`.\r\n\r\n### Reproducible Code Example\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-9945)\r\n\r\n```Python\r\nimport streamlit as st\r\n\r\nst.markdown(\":material/info:\")  # Works as expected\r\nst.markdown(\":material/info:\", unsafe_allow_html=True)  # Doesn't work\r\n```\r\n\r\n### Steps To Reproduce\r\n\r\nTry the above code example.\r\n\r\n### Expected Behavior\r\n\r\nSeeing the icon.\r\n\r\n### Current Behavior\r\n\r\nSeeing the name of the icon in plain text.\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.40.2\r\n- Python version: 3.11.9\r\n- Operating System: MacOS\r\n- Browser: Chrome\r\n\r\n### Additional Information\r\n\r\nI think [this test](https://github.com/streamlit/streamlit/blob/288b7d63d56808fd02a61039710e866e0b506f51/frontend/lib/src/components/shared/StreamlitMarkdown/StreamlitMarkdown.test.tsx#L398-L407) should also run with `allowHTML={true}`.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9945)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@JosephMarinier Thanks for reporting this issue. I reproduced it [here](https://issues.streamlit.app/?issue=gh-9945). It is interesting that material icon do not work, while similar aspects like font colors in our markdown work normally. Another aspect that doesn't work as expected is the streamlit icon via `:streamlit:` (also because of missing style)."
      },
      {
        "user": "JosephMarinier",
        "body": "Cool! Thank you very much @lukasmasuch! üôè "
      }
    ]
  },
  {
    "issue_number": 11636,
    "title": "support cachetools 6.x",
    "author": "acabal33uab",
    "state": "closed",
    "created_at": "2025-06-13T04:49:43Z",
    "updated_at": "2025-06-13T09:18:32Z",
    "labels": [
      "type:enhancement"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nLatest streamlit 1.45.1 requires cachetools version <6.\ncachetools version 6.0 was released on May 23, 2025.\nCould you adapt future streamlit versions to support it?\n\n```\n  √ó No solution found when resolving dependencies:\n  ‚ï∞‚îÄ‚ñ∂ Because streamlit>=1.45.0 depends on cachetools>=4.0,<6 and only the following versions of streamlit are available:\n          streamlit<1.45.dev0\n          streamlit==1.45.0\n          streamlit==1.45.1\n      we can conclude that streamlit>=1.45.dev0 depends on cachetools>=4.0,<6.\n      And because you require streamlit>=1.45.dev0 and cachetools>=6.0.0,<6.1.dev0, we can conclude that your requirements are unsatisfiable.\n\n      hint: `streamlit` was requested with a pre-release marker (e.g., all of:\n          streamlit>=1.45.dev0,<1.45.0\n          streamlit>1.45.0,<1.45.1\n          streamlit>1.45.1,<1.46.dev0\n      ), but pre-releases weren't enabled (try: `--prerelease=allow`)\n\n```\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11636)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "Support for cachetools 6 has already been merged and will be released next week."
      }
    ]
  },
  {
    "issue_number": 4653,
    "title": "st.plotly_chart() overrides user interaction by unwantedly resetting camera",
    "author": "Clement-Lelievre",
    "state": "closed",
    "created_at": "2022-04-26T16:13:54Z",
    "updated_at": "2025-06-13T01:44:29Z",
    "labels": [
      "type:bug",
      "priority:P3",
      "feature:st.plotly_chart"
    ],
    "body": "### Summary\n\nPlotly 3D animations normally allow user interactions (zoom, rotating figure with the mouse) to persist across frames.\nSome animations (e.g. go.Mesh3d with frames) reset the camera despite the Streamlit user changing its params.\n\n### Steps to reproduce\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-4653)\n\n![dXQum](https://user-images.githubusercontent.com/70368164/165344941-fc4cd84e-5a1a-4bae-bccf-d1f22af7ef9a.gif)\n\nThis animation displays frames containing each 32 go.Mesh3d() traces (one per facet of the soccer ball).\n\nSteps (see GIF above):\n\n1. interact with the figure (zoom and/or rotating it with the mouse)\n2. either click the Plotly figure button 'Play' or move the slider with the mouse\n3. watch the figure camera reset itself unwantedly\n\nCan provide MRE if needed.\n\n**Expected behavior:**\n\nThe camera position changed by the user persists across frames.\n\n**Actual behavior:**\n\nThe camera position changed by the user gets reset to its initial value. Even using [`uirevision`](https://plotly.com/python/reference/layout/#layout-uirevision)\n\n\n\n### Is this a regression?\n\nNo\n\n### Debug info\n\n- Streamlit version: 1.8.1\n- Python version: 3.10.0\n- OS version: Ubuntu 20.04 (WSL2)\n- Browser version: Chrome 100\n\n### Additional information\n\nThis issue has been mentioned in a number of threads on SO and plotly Community, see e.g. [here](https://community.plotly.com/t/preserving-ui-state-like-zoom-in-dcc-graph-with-uirevision-with-dash/15793) and [here](https://stackoverflow.com/questions/58345327/prevent-camera-resetting-after-plotting-with-plotly-python). It is suggested [here](https://discuss.streamlit.io/t/how-to-keep-the-view-of-a-plotly-plot-when-changing-a-parameter/2952) in the Streamlit forum that using session state might do the trick, but I couldn't make it work.\nLast, I have noticed that commenting out `layout=\"wide\"` from `st.set_page_config` avoids this bug but only between the Streamlit session start and the first interaction with a Streamlit widget\n",
    "comments": [
      {
        "user": "LucaPaganin",
        "body": "Same problem here, any news?"
      },
      {
        "user": "sbeverle",
        "body": "Can`t solve this problem too("
      },
      {
        "user": "H4dr1en",
        "body": "Same issue here, please fix"
      }
    ]
  },
  {
    "issue_number": 7100,
    "title": "st.date_input does not recognize two-digit, keyed-in, day for end date if valid single-digit day exists",
    "author": "sfc-gh-dmatthews",
    "state": "open",
    "created_at": "2023-07-31T22:12:34Z",
    "updated_at": "2025-06-13T01:29:14Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.date_input",
      "upstream"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\n[Raised as an issue in the forum by krg_gmail.](https://discuss.streamlit.io/t/problem-to-manually-enter-a-date/48351)\r\n\r\nWhen trying to type in the dates for a ranged date selector, if the end-date can be validly completed with a single-digit day, the picker will prefer/force a single-digit day for the end and not correctly interpret what was typed.\r\n\r\n![2023-07-31_15-09-25 (1)](https://github.com/streamlit/streamlit/assets/135349133/b0c8997b-a31b-41f1-8334-33c746b9d378)\r\n\r\n\r\n### Reproducible Code Example\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-7100)\r\n\r\n```Python\r\nimport streamlit as st\r\nfrom datetime import date\r\n\r\nst.date_input('date', value=(date(2023,1,1),date(2023,1,2)))\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n1. Click into the date picker\r\n2. Type \"2023010120230112\" (2023-01-01, 2023-01-12)\r\n3. It will result in (2023-01-01, 2023-01-01) when you type the penultimate digit, then (2023-01-01, 2023-01-02) when you type the final digit.\r\n\r\n### Expected Behavior\r\n\r\nThe dates should be accepted as typed.\r\n\r\n### Current Behavior\r\n\r\nIf a valid single-digit day exists to complete the end date, it will be preferred by the widget over the attempted two-digit day that was keyed.\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version:\r\n- Python version:\r\n- Operating System:\r\n- Browser:\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "lukasmasuch",
        "body": "@sfc-gh-dmatthews Thanks for reporting this issue :) I was able to reproduce this [here](https://issues.streamlit.app/?issue=gh-7100). This seems to be also an issue in the underlying baseweb datepicker component (the same happens if you select the `range` version [here](https://baseweb.design/components/datepicker/#datepicker)):\r\n\r\n\r\nhttps://github.com/streamlit/streamlit/assets/2852129/a95fdd17-d612-4329-95bb-9809119f8e5e\r\n\r\n\r\n"
      },
      {
        "user": "rlh1994",
        "body": "@LukasMasuch This no longer seems to be an issue on that site (at least I can't reproduce it the same way you have in your video). Is there plans to upgrade the component to take advantage of this fix?"
      },
      {
        "user": "sfc-gh-dmatthews",
        "body": "When I try to use the ranged datepicker on the baseweb component directly, I am not able to key in a ranged date at all. The visual selection is not matching what I'm typing. I can only update the output through the graphical input. (...in both Chrome and Firefox.)"
      }
    ]
  },
  {
    "issue_number": 4534,
    "title": "HTML tags inside <code> get corrupted since v1.5.0",
    "author": "Valahaar",
    "state": "open",
    "created_at": "2022-03-22T12:21:24Z",
    "updated_at": "2025-06-13T01:28:20Z",
    "labels": [
      "type:bug",
      "feature:markdown",
      "status:confirmed",
      "priority:P3",
      "feature:st.code",
      "upstream"
    ],
    "body": "### Summary\r\n\r\nNesting an HTML tag inside a `<code>` tag results in `,[object Object],` being displayed.\r\n\r\n### Steps to reproduce\r\n\r\nCode snippet:\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-4534)\r\n\r\n```python\r\nst.write(\r\n    \"\"\"\r\n<code>\r\n<span style='color: red'>test</span> hello\r\n</code>\r\n\"\"\",\r\n    unsafe_allow_html=True,\r\n)\r\n```\r\n\r\noutput:\r\n\r\n```\r\n,[object Object], hello\r\n```\r\n\r\nwhereas the correct behavior should output `test hello` with \"test\" in red.\r\n\r\n### Is this a regression?\r\nYep. The bug was introduced in version 1.5.0 (version 1.4.0 works correctly)\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.5.0\r\n- Python version: 3.8\r\n- Using conda environment\r\n- OS version: Ubuntu 20.04\r\n- Browser version: Google Chrome 99.0.4844.51\r\n\r\n### Additional information\r\n\r\nThis is what streamlit actually returns to the browser for display. I guess that it has something to do with the react-markdown update that was done between 1.4.0 and 1.5.0.\r\n\r\n- [React markdown commit](https://github.com/streamlit/streamlit/commit/be797682394955ef2b94a5f7641b6f9d8fd1dbfc)\r\n- [Comparison between 1.4.0 and 1.5.0](https://github.com/streamlit/streamlit/compare/1.4.0...1.5.0)\r\n- [Upgrade react-markdown issue](https://github.com/streamlit/streamlit/pull/4221)",
    "comments": [
      {
        "user": "kajarenc",
        "body": "Thank you @Valahaar for reporting this issue!\r\n\r\nyes, the problem is related to the markdown/HTML renderer.\r\n\r\nIn some edge cases (for example, when using HTML tags and styles inside the code tag, this can lead to incorrect output)\r\n\r\nFor a workaround, you can use the `html` component to draw pure HTML.\r\n\r\n```python\r\nimport streamlit.components.v1 as components\r\n\r\ncomponents.html(\"\"\"<code>\r\n<span style='color: red'>test</span> hello\r\n</code>\"\"\")\r\n```\r\n\r\nWe constantly work on improving the display of markdown and HTML, and reducing incorrect cases.\r\nThanks again!"
      },
      {
        "user": "Valahaar",
        "body": "Hi, unfortunately the iframe produced by `components.html` does not wrap around the full content, and defaults to an height of 150. Setting this manually is not possible as the content might have a dynamic length. Is there a workaround for this? If not, is there an expected ETA for a fix to the original issue?\r\n\r\nThank you :)"
      },
      {
        "user": "Valahaar",
        "body": "Hey @kajarenc , sorry for the ping, thought you might have missed my reply üòÖ "
      }
    ]
  },
  {
    "issue_number": 10707,
    "title": "New client_kwargs entry (acr_values) is not accepted, auth fails in st.login()",
    "author": "guntukaramakrishna",
    "state": "open",
    "created_at": "2025-03-10T13:11:56Z",
    "updated_at": "2025-06-13T01:24:08Z",
    "labels": [
      "type:bug",
      "priority:P3",
      "feature:authentication"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI have followed the documentation for adding login with OAuth (OIDC). The OIDC provider is from my company. \n\nThis is the configuration\n\n> redirect_uri = \"http://localhost:8501/oauth2callback\"\n> cookie_secret = \"**\"\n> client_id = \"**\"\n> client_secret = \"**\"\n> server_metadata_url = \"https://authgateway.mycompany.com/.well-known/openid-configuration\"\n> client_kwargs = { \"prompt\" = \"login\", \"acr_values\" = \"SOME_MS-AD-Kerberos\" }\n\nThe acr_values is the one which I want to be appended in the auth_url\n\n`https://authgateway.mycompany.uhg.com/as/authorization.oauth2?response_type=code&client_id=**&redirect_uri=http%3A%2F%2Flocalhost%3A8501%2Foauth2callback&scope=openid+email+profile&state=xyHJRrZKbN7aujDn6PQ9lWfr8KR9U4&nonce=hXTiEn0UAETgBJzWdGOV&code_challenge=****&code_challenge_method=S256&prompt=login`\n\nwhere I want to the url to be appending with `&acr_values=SOME_MS-AD-Kerberos`\n\nI am not sure where to add this value as user point of view. \n\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nst.write(st.experimental_user.get(\"is_logged_in\"))\nif not st.experimental_user.get(\"is_logged_in\"):\n    if st.button(\"Log in with Enterprise SSO\"):\n        st.login()\n        st.write('after')\n        st.write(st.experimental_user.get(\"is_logged_in\"))\n    st.stop()\n\nif st.button(\"Log out\"):\n    st.logout()\nst.markdown(f\"Welcome! {st.experimental_user.get(\"email\")}\")\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\nExpecting to redirect and print the user information. But giving server_error as it is missing acr_values.\n\n### Current Behavior\n\nIt is giving server_error and not giving the user information. \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10707)\n"
      },
      {
        "user": "kajarenc",
        "body": "Hello @guntukaramakrishna , thank you for opening this issue!\n\nWhich identity provider do you use? The allowed `client_kwargs` are usually described in the provider's documentation.\nIf you are using Okta, here is a good article about how to add Okta integration to your streamlit app.\nhttps://medium.com/@oleksandr_arsentiev/building-an-identity-aware-chatbot-with-streamlit-okta-and-openai-0a777d195a36\n\n"
      },
      {
        "user": "guntukaramakrishna",
        "body": "Hello @kajarenc \n\nThanks for checking the issue. The article what you provided talks about adding a new claim if it's required. I am using my company's OIDC provider which is more similar to any Microsoft or Google or Okta.\n\nI am talking more about https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest. Look at the acr_values parameter. That's what I am trying to pass from secrets.toml by adding into client_kwargs. \n\n`client_kwargs = { \"prompt\" = \"login\", \"acr_values\" = \"SOME_MS-AD-Kerberos\" }`\n\n`prompt` value is changed to `login` because the default is `select_account`. However the entry `acr_values` is not taken. My question is how to add that, so that it can be passed via Auth Server URL and I get the auth_code.\n"
      }
    ]
  },
  {
    "issue_number": 10521,
    "title": "Slow download of csv file when using the inbuild download as csv function for tables displayed as dataframes in Edge Browser",
    "author": "LazerLars",
    "state": "open",
    "created_at": "2025-02-26T08:43:56Z",
    "updated_at": "2025-06-13T01:23:23Z",
    "labels": [
      "type:bug",
      "area:windows",
      "feature:st.dataframe",
      "status:confirmed",
      "priority:P3",
      "feature:st.download_button",
      "feature:st.data_editor"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\nIssue is only in MS Edge Browser:\nWhen pressing \"download as csv\" on a table the download is really slow. and i run on a thinkpad p16 gen1.\n15 columns x 20 k rows takes 9-11 sec\n15 columns x 50 k rows takes 19-22 sec\n\nWhen i do it on with my own function using to_csv from the pandas libary i can do it in less than 1 sec for both 20 k and 50 k\n\n**Issue only occur in Edge browser.**\nBrave and firefox works just fine with the inbuild\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nimport pandas as pd\n\n# tested in both 1.38 and 1.42.2\n# Name: streamlit\n# Version: 1.39.0 / 1.42.2\n\n# Define number of rows and columns\nnum_rows = 20000 # 20 k rows takes 9-11 sec to download via inbuild download as csv\n# num_rows = 50000 # 50 k rows takes 19-22 sec to download via inbuild download as csv\nnum_cols = 15\n\n# Generate random data\ndata = {\n    f\"Col_{i+1}\": np.random.choice(['A', 'B', 'C', 'D', 1, 2, 3, 4, 5, 10.5, 20.8, 30.1], num_rows)\n    for i in range(num_cols)\n}\ndata = pd.DataFrame(data)\nst.write(data) # the same issue when using st.dataframe(data)\n\n\n# the below method takes less a secound for both 20 k and 50 k rows\n# to_csv() is from the pandas libary which also are used in the streamlit package.\ncsv = data.to_csv(index=False).encode('utf-8')\n\n    # Download button\nst.download_button(\n    label=\"Download as CSV OWN\",\n    data=csv,\n    file_name='data.csv',\n    mime='text/csv',\n)\n```\n\n### Steps To Reproduce\n\nhover over the table, click download as csv and watch your download folder for how slow it loads only a few 50-100 kb a sec\n\nthen try using the custom made button: \"Download as CSV OWN\" then it instantly downloads\n\n\n### Expected Behavior\n\ni would expect the inbuild download as csv function would be as fast as the pandas.to_csv() function.\n\nI tried it on a Thinkpad T14 gen 3, P16 gen 1 and on a linux server, all have the same issue\n\n![Image](https://github.com/user-attachments/assets/a69108de-5ac7-416e-b48a-6ad1ec2863a3)\n\n### Current Behavior\n\nno error msg, but it just super slow\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.39.0 and 1.42.2\n- Python version: 3.12.1\n- Operating System: Windows 11 / windows 10, Linux server\n- Browser: Edge for business: Version 133.0.3065.82 (Official build) (64-bit)\n\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10521)\n"
      },
      {
        "user": "sfc-gh-lwilby",
        "body": "Hi @LazerLars , \n\nThank you for creating this issue. I was able to confirm this in Microsoft Edge. I also tried disabling Microsoft Defender SmartScreen but it didn't impact the download speed. \n\nIt seems like the workaround is using the alternate download method you've provided, thank you!\n\nLaura"
      }
    ]
  },
  {
    "issue_number": 8254,
    "title": "List-like valued column coloring does not work as expected",
    "author": "YetkinMesutKaraman",
    "state": "closed",
    "created_at": "2024-03-07T14:53:36Z",
    "updated_at": "2025-06-13T01:08:37Z",
    "labels": [
      "type:bug",
      "feature:st.dataframe",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor",
      "feature:st.column_config"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHello Everyone,\r\n\r\nI want to color my list-like valued column but output is strange:\r\n<img width=\"756\" alt=\"Screenshot 2024-03-07 at 16 26 45\" src=\"https://github.com/streamlit/streamlit/assets/36691640/eab508d3-0bd3-43c5-be58-a803bdd37285\">\r\nwhen you click to the value it shows the colored value, otherwise not.\r\n\r\n\n\n### Reproducible Code Example\n\n```Python\nst.dataframe(\r\n                df_reviews_filtered.style.apply(\r\n                    lambda row: [\"color: green\" * len(row) for _ in row],\r\n                    axis=1,\r\n                    subset=[\"positive_topics\"],\r\n                ).apply(\r\n                    lambda row: [\"color: red\" * len(row) for _ in row],\r\n                    axis=1,\r\n                    subset=[\"negative_topics\"],\r\n                )\r\n            )\n```\n\n\n### Steps To Reproduce\n\ndouble click on values\n\n### Expected Behavior\n\ncoloring the list-like values without double clicking\n\n### Current Behavior\n\n<img width=\"756\" alt=\"Screenshot 2024-03-07 at 16 26 45\" src=\"https://github.com/streamlit/streamlit/assets/36691640/8b8aa2e5-cab0-48b1-9d0e-f26a8dc6f07b\">\r\nwhen doucle click on values\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.31.1\r\n- Python version: 3.11.7\r\n- Operating System: macOS 14.2.1\r\n- Browser: Chrome \n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-8254)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@YetkinMesutKaraman Thanks for reporting this issue. I was able to reproduce it. I think this is quite easy to fix. "
      }
    ]
  },
  {
    "issue_number": 10415,
    "title": "Multi-Index Columns with brackets get renamed to square brackets",
    "author": "itsToggle",
    "state": "closed",
    "created_at": "2025-02-17T12:01:30Z",
    "updated_at": "2025-06-13T01:08:24Z",
    "labels": [
      "type:bug",
      "feature:st.dataframe",
      "status:confirmed",
      "priority:P4"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHey guys, \nWhen using brackets in column titles and applying a multiindex, they are replaced with sqaure brackets.\nWhen defining column configs and especially column order of the st.dataframe, this automatic renaming leads to a mismatch between what the user thinks the column names are and the actual column names. Im using column config and column order and had to debug for quite long to identify why some of my columns are missing in the displayed dataframe, for example.\n\n### Reproducible Code Example\n\n```Python\nimport pandas as pd\nimport streamlit as st\n\ndf_regular = pd.DataFrame({\"Example\": [1, 2, 3], \"Example (1)\": [4, 5, 6]})\n\nmulti_index = pd.MultiIndex.from_tuples([(\"Test\", \"Example\"), (\"Test\", \"Example (1)\")])\ndf_multi = pd.DataFrame(df_regular.values, columns=multi_index)\n\nst.dataframe(df_regular)\nst.dataframe(df_multi)\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\nI expect the column names to stay the same\n\n### Current Behavior\n\nThe column names are changed without my knowlege\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.42.0\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10415)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@itsToggle Thanks for reporting this issue. I reproduced it [here](https://issues.streamlit.app/?issue=gh-10415). I believe this is done by pyarrow since it requires round brackets for the multi-header label notation. "
      },
      {
        "user": "carlota-domingos",
        "body": "Hello. I'd like to be assigned to work on this issue if possible."
      }
    ]
  },
  {
    "issue_number": 11568,
    "title": "Support setting the font faces via the theme window variable",
    "author": "lukasmasuch",
    "state": "closed",
    "created_at": "2025-06-09T17:09:53Z",
    "updated_at": "2025-06-13T01:07:53Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P2",
      "feature:theming"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe theme can be set via `window.__streamlit.LIGHT_THEME` or `window.__streamlit.DARK_THEME` variables. However, this doesn't support setting the font faces since its treated slightly differently to other theme aspects.\n\nThe required call is only set when we receive a post message: https://github.com/streamlit/streamlit/blob/0fba147a5a94bfaa2df6c267433370ae5e6a3fb3/frontend/app/src/App.tsx#L701 or when we receive a theme config form backend: https://github.com/streamlit/streamlit/blob/0fba147a5a94bfaa2df6c267433370ae5e6a3fb3/frontend/app/src/App.tsx#L1312\n\nSiS uses the window variable to inject the Snowflake dark & light theme. \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.11\n- Operating System: MacOS\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11568)\n"
      }
    ]
  },
  {
    "issue_number": 11575,
    "title": "Sorting while filtering creates incorrect cell highlights",
    "author": "sfc-gh-dmatthews",
    "state": "closed",
    "created_at": "2025-06-10T00:58:46Z",
    "updated_at": "2025-06-12T21:24:35Z",
    "labels": [
      "type:bug",
      "feature:st.dataframe",
      "status:confirmed",
      "priority:P3"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nIf you use filtering to highlight cells, then sort a column without closing the filter, the _former positions_ of the highlighted (filtered) cells remain highlighted. If you sequentially navigate the highlight cells, they remain in their incorrect positions. You have to update the filter to change the highlight positions to match the new sort order.\n\nhttps://github.com/user-attachments/assets/858e36e1-725a-4fee-8e55-4fc592e22875\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nimport pandas as pd\n\ndf = pd.DataFrame({\n    \"A\": [\"foo\",\"foo\",\"foo\",\"bar\",\"bar\",\"bar\", \"baz\", \"baz\", \"baz\"],\n    \"B\": [\"one\",\"one\",\"two\",\"two\",\"one\",\"one\", \"two\", \"two\", \"one\"]\n})\nst.dataframe(df)\n```\n\n### Steps To Reproduce\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11575)\n\n1. Run the app\n2. Use the dataframe filter to search for \"foo\"\n3. Leave the filter open and click the column header to sort and move the \"foo\" cells.\n4. Click the step buttons in the filter.\n\nYou will remain stuck within the former positions of the \"foo\" cells (until you update the string filter).\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.13\n- Operating System: Mac\n- Browser: Prisma\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11575)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Thank you for filing this issue @sfc-gh-dmatthews! I appreciate the reproducible code example here. I can confirm that I am seeing the same behavior as outlined in this ticket."
      }
    ]
  },
  {
    "issue_number": 11609,
    "title": "`st.multiselect` ignores `placeholder` parameter when options are empty",
    "author": "Kulda22",
    "state": "open",
    "created_at": "2025-06-12T11:59:10Z",
    "updated_at": "2025-06-12T20:37:51Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe `st.multiselect` ignores `placeholder` parameter when `options` is an empty list ( or empty sequence in general) . This is even more prominent when using `accept_new_options=True`, as the input is not disabled then.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nfoo = st.multiselect(\n    \"Select Foo\",\n    options=[],\n    accept_new_options=True,\n    placeholder=\"foo placeholder\",\n)\n\n\nbar = st.multiselect( # works correctly\n    \"Select Bar\",\n    options=[\"bar1\", \"bar2\", \"bar3\"],\n    accept_new_options=True,\n    placeholder=\"bar placeholder\",\n)\n```\n\n### Steps To Reproduce\n\n1. Run the example provided\n2. Compare the rendered placeholder with passed parameters\n\n### Expected Behavior\n\nThe Select Foo input placeholder should be `foo placeholder` not `Add options`. \n\n### Current Behavior\n\nThe first multiselect has the default placeholder.\n<img width=\"931\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bb497e1b-db33-4d7f-8f45-81ae45ac33b1\" />\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.13.2\n- Operating System: MacOs 15.5\n- Browser: Firefox 139.0.4, Chrome 137.0.7151.104\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11609)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Thank you for filing this @Kulda22 . The code provided here is very useful. I have confirmed I am seeing the same and will triage it accordingly."
      }
    ]
  },
  {
    "issue_number": 9085,
    "title": "Papercut: multiselect should have a max height",
    "author": "sfc-gh-tteixeira",
    "state": "closed",
    "created_at": "2024-07-16T01:02:48Z",
    "updated_at": "2025-06-12T18:48:04Z",
    "labels": [
      "type:enhancement",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nWhen a multiselect has dozens of selected items, it gets unwieldy, taking up a ton of vertical space.\r\n\r\nHere's a particularly bad example:\r\n![Screenshot 2024-07-15 at 17 57 44](https://github.com/user-attachments/assets/0eb64618-8e56-43e2-bf47-c6043435e560)\r\n\r\n...but if we add `max-height: 10rem` and `overflow-y: auto` it magically turns into this beauty:\r\n![Screenshot 2024-07-15 at 17 58 11](https://github.com/user-attachments/assets/df64f6ed-b2e4-4a25-b51d-804c73e4bb7c)\r\n\r\nSo... let's do this?\r\n\r\n### Reproducible Code Example\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-9085)\r\n\r\n```Python\r\nimport streamlit as st\r\n\r\noptions = []\r\n\r\nfor i in range(100):\r\n    options.append((\"foo \" * (i + 1)) + f\"{i}\")\r\n\r\nst.multiselect(\"My multiselect\", options, options)\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n1. Run the code above\r\n2. Observe the insanely large selectbox \r\n\r\n### Expected Behavior\r\n\r\nThe selectbox should take up only a few lines of text in height\r\n\r\n### Current Behavior\r\n\r\nThe selectbox is several pages long\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.36\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9085)\n"
      },
      {
        "user": "phourxx",
        "body": "@sfc-gh-tteixeira You can achieve this using CSS. \r\n\r\n```\r\ndef create_multiselect_with_max_height(label, options, max_height=200):\r\n    # Custom CSS to set max height and add scrollbar\r\n    custom_css = f\"\"\"\r\n\r\n        <style>\r\n            div[data-testid=\"stMultiSelect\"] > div:nth-child(2) {{\r\n                max-height: {max_height}px;\r\n                overflow-y: auto;\r\n            }}\r\n        </style>\r\n\r\n    \"\"\"\r\n    st.markdown(custom_css, unsafe_allow_html=True)\r\n\r\n    # Create the multiselect\r\n    selected_options = st.multiselect(label, options)\r\n\r\n    return selected_options\r\n\r\n\r\n# Example usage\r\ndef main():\r\n    st.title(\"Multi-checkbox with Max Height\")\r\n\r\n    # Create a list of options\r\n    options = [f\"Option {i}\" for i in range(1, 50)]\r\n\r\n    # Create the multiselect with max height\r\n    selected = create_multiselect_with_max_height(\"Select options:\",\r\n                                                  options, 100)\r\n\r\n    # Display selected options\r\n    st.write(\"You selected:\", selected)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n![image](https://github.com/user-attachments/assets/72816472-c501-42a7-adb5-f2f31d803428)\r\n"
      },
      {
        "user": "jrieke",
        "body": "Duplicate of #8671, please upvote and comment there!"
      }
    ]
  },
  {
    "issue_number": 8671,
    "title": "`st.multiselect` is too high when multiple options are selected",
    "author": "achaosss",
    "state": "closed",
    "created_at": "2024-05-15T02:16:54Z",
    "updated_at": "2025-06-12T18:48:04Z",
    "labels": [
      "type:enhancement",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nWhen I use multiselect, I find that the selected content pushes the original content downwards. I wonder if there is any other solution.\r\n\r\n![image](https://github.com/streamlit/streamlit/assets/35690593/edb7f50e-99ec-4757-b319-0bfce5eb2505)\r\n\r\n\r\nWhen i use multiselect, It became\r\n![image](https://github.com/streamlit/streamlit/assets/35690593/faff9c71-2ad1-4f3b-9ed4-0157b8527664)\r\n\r\n\r\nI would like to know if there are any other solutions.\r\n\r\n### Reproducible Code Example\r\n\r\n_No response_\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### Current Behavior\r\n\r\n_No response_\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version:\r\n- Python version:\r\n- Operating System:\r\n- Browser:\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-8671)\n"
      },
      {
        "user": "jrieke",
        "body": "Hmm good point. I'm converting this to an enhancement because it's expected behavior today. We should probably think about adding a `height` parameter or a parameter to control line wrapping to `st.multiselect`. As a workaround, you can put it in a container with fixed height for now, which will enable scrolling:\r\n\r\n```python\r\nst.container(height=50).multiselect(...)\r\n```\r\n\r\nOr you could try a popover container, so the multiselect doesn't show on the page itself:\r\n\r\n```python\r\nst.popover(\"Show filter\").multiselect(...)\r\n```"
      },
      {
        "user": "alexscott-ff",
        "body": "@jrieke I'm curious if there are plans to rethink or offer other UI/UX alternatives to the multi-select as a solution for this as well? Making it not wrap would be a great improvement (and just showing ellipses) if it used the checkbox pattern instead.\n\nMy ideal would look a bit more like the first example here: https://primereact.org/multiselect/"
      }
    ]
  },
  {
    "issue_number": 10647,
    "title": "Add `show_time` parameter to `st.cache_data` and `st.cache_resource`",
    "author": "VERBOSE-01",
    "state": "open",
    "created_at": "2025-03-05T09:44:15Z",
    "updated_at": "2025-06-12T17:36:53Z",
    "labels": [
      "type:enhancement",
      "good first issue",
      "feature:cache",
      "feature:st.spinner"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\n[`st.spinner`](https://docs.streamlit.io/develop/api-reference/status/st.spinner) now supports the `show_time` parameter (introduced by #10072), but [`st.cache_data`](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_data) and [`st.cache_resource`](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource) don't, even though they propose a `show_spinner` parameter.\n\n### Why?\n\nI think having a timed cached spinner would be useful (at least for me) and makes more sense. It‚Äôs not mandatory, but it could be a cool addition.\n\nA (_workaround_?) would be to put the cached logic under an `st.spinner` context manager.\n\n![Image](https://github.com/user-attachments/assets/c14183b9-3155-4cbd-b4b5-10bf22c5f641)\n\n```\n# app.py\nimport time\n\nimport streamlit as st\n\nLOADING = \"Loading data...\"\n\n\n@st.cache_data(show_spinner=LOADING)\ndef get_data_l(n: int) -> list[int]:\n    \"\"\"Mock function that simulates a long computation.\"\"\"\n    time.sleep(3)\n    return list(range(1, n + 1))\n\n\n@st.cache_data(show_spinner=False)\ndef get_data_r(n: int) -> list[int]:\n    \"\"\"Mock function that simulates a long computation.\"\"\"\n    with st.spinner(LOADING, show_time=True):\n        time.sleep(3)\n        return list(range(1, n + 1))\n\n\ndef show_slider(col: str, *, timed: bool = False) -> None:\n    \"\"\"Display a slider and a button to clear the cache.\"\"\"\n    n = st.slider(\n        \"Number of items\", 1, 10, 5, key=f\"sl_{col}\", label_visibility=\"collapsed\",\n    )\n\n    get_data = get_data_r if timed else get_data_l\n\n    data = []\n\n    col_l, *_ = st.columns(3)\n\n    if col_l.button(\"GENERATE\", key=f\"btn_gen_{col}\"):\n        data = get_data(n)\n\n    st.write(f\"_Items :_ {data}\")\n\n\ncol_l, col_r = st.columns(2, gap=\"medium\")\n\nwith col_l:\n    st.markdown(\":red-background[__Current__]\")\n    show_slider(\"left\")\n\nwith col_r:\n    st.markdown(\":green-background[__Workaround__]\")\n    show_slider(\"right\", timed=True)\n```\n",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-10647)\n"
      },
      {
        "user": "shahar-dagan",
        "body": "I'd love to work on this "
      },
      {
        "user": "jrieke",
        "body": "Hey @shahar-dagan, yes feel free to make a PR! I think I agree this should simply be a parameter `show_time` on the two caching commands. It should come right after `show_spinner`. I was also thinking about how we could integrate this with `show_spinner` (just like how you can pass the spinner text to `show_spinner`) but I don't think there's a good way to do this; lmk if you have an idea!"
      }
    ]
  },
  {
    "issue_number": 10910,
    "title": "Set a default tab in `st.tabs`",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-03-25T21:52:43Z",
    "updated_at": "2025-06-12T17:24:17Z",
    "labels": [
      "type:enhancement",
      "good first issue",
      "feature:st.tabs"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nEnable setting a default tab in `st.tabs`, which will be shown first. \n\n### Why?\n\nSometimes you don't want the app to start on the first tab. There's currently no way to change that though. \n\n### How?\n\nEither we add `index: int = 0` (similar to `st.selectbox`) or a `default` parameter that takes the tab name. \n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-10910)\n"
      },
      {
        "user": "fridaeriksenaess",
        "body": "Hello, I will try to fix this issue!"
      },
      {
        "user": "jrieke",
        "body": "Hey @fridaeriksenaess, go for it! I think we should actually go with a parameter `default` here, similar to how we added it recently for `st.pills` and `st.segmented_control`. But I can verify again once you have a working PR :) "
      }
    ]
  },
  {
    "issue_number": 9878,
    "title": "(CommunityCloud) Moving slider seems to generate 2 new (empty) window.history states",
    "author": "Asaurus1",
    "state": "open",
    "created_at": "2024-11-17T07:03:47Z",
    "updated_at": "2025-06-12T16:17:39Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:query-params"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nWhile investigating https://issues.streamlit.app/?issue=gh-9184 I noticed my browser history (i.e. back navigation) got _filled_ with `window.history` state entries that don't actually seem to do anything when you navigate backwards or forwards through them. It seems like this only affects community cloud? I was unable to reproduce on a local instance of streamlit.\r\n\r\n### Reproducible Code Example\r\n\r\n```python\r\nst.slider(\"Slider (1.0 float step)\", min_value=1.50, max_value=100.50, value=(2.5, 41.5), step=1.0)\r\nst.slider(\"Slider (1.1 float step)\", min_value=1.50, max_value=100.50, value=(2.5, 41.5), step=1.1)\r\nst.slider(\"Slider (int step)\", min_value=1, max_value=100, value=(2, 40), step=3)\r\n```\r\n\r\n### Steps To Reproduce\r\n\r\n1. Go to https://issues.streamlit.app/?issue=gh-9184 in MS Edge or Opera One(version: 114.0.5282.185) -- it probably works in Chrome too but I didn't have that installed to test.\r\n2. Right click on the browser \"Back\" button to see the tab history. It should look something like this\r\n![image](https://github.com/user-attachments/assets/6154ef06-c882-4c98-ad93-b340fb92a935)\r\n3. Adjust the sliders on the page a couple of times.\r\n4. Go back and right-click on the browser \"Back\" button. \r\n![image](https://github.com/user-attachments/assets/9de642ae-90eb-4783-b46f-0708295f6032)\r\n\r\n5. Clicking the \"Back\" button doesn't actually change any kind of state on the page (e.g. it doesn't move the sliders back to their old positions -- not that I was really expecting it to do that)\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nWe shouldn't be putting do-nothing states into user's `window.history` on widget interaction.\r\n\r\n### Current Behavior\r\n\r\n![image](https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.imgflip.com%2F1rpt5c.jpg&f=1&nofb=1&ipt=53ccae2a973a336828bfcaf6c76821c6c0278814b51b2fd6bdaca1150f84b1ce&ipo=images)\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: whatever you guys were running on Community Cloud in Nov 2024\r\n- Python version: _probably_ 3.10, based on what I know about community cloud\r\n- Operating System: Windows\r\n- Browser: Tested on MS Edge Version 131.0.2903.51 and Opera One (version: 114.0.5282.185)\r\n\r\n\r\n### Additional Information\r\n",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9878)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @Asaurus1 , thanks for filing this issue! I was able to confirm that this is an issue in Streamlit OSS, not just Streamlit Community Cloud. I was able to repro it locally with an app that sets query string params. \r\n\r\nA simple repro app:\r\n\r\n```py\r\nimport streamlit as st\r\n\r\nst.checkbox(\"Toggle this\")\r\n\r\nst.query_params[\"number\"] = 1\r\n```\r\n\r\nToggle the checkbox, and you'll note that each re-run of this app will (erroneously) push a new state to the browser history. This happens in this piece of code: https://github.com/streamlit/streamlit/blob/develop/frontend/app/src/App.tsx#L787-L797\r\n\r\nTo fix this, I'm pretty sure this logic should be updated to check that the URL is actually different before updating state, so the bug fix might look something like this:\r\n\r\n```ts\r\n  handlePageInfoChanged = (pageInfo: PageInfo): void => {\r\n    const { queryString } = pageInfo\r\n\r\n    const url = new URL(document.location.href)\r\n    url.search = queryString || \"\"\r\n    const targetUrl = url.toString()\r\n\r\n    // Only send URL updates if the URL has changed\r\n    if (targetUrl !== document.location.href) {\r\n      return\r\n    }\r\n\r\n    window.history.pushState({}, \"\", targetUrl)\r\n\r\n    this.hostCommunicationMgr.sendMessageToHost({\r\n      type: \"SET_QUERY_PARAM\",\r\n      queryParams: queryString ? `?${queryString}` : \"\",\r\n    })\r\n  }\r\n```\r\n\r\nI will work with the team to get a proper fix for this, but wanted to confirm that this is an issue and thank you again for filing it!"
      },
      {
        "user": "Asaurus1",
        "body": "@sfc-gh-bnisco ah hmmm, I'm actually working on a PR that probably fixes this (GH-8112), then. So perhaps hold off on a separate fix?\r\n \r\nBut what was weird to me about the example case was that the sliders weren't actually changing the url at all. Otherwise the additional history entries would have made sense to me."
      }
    ]
  },
  {
    "issue_number": 10204,
    "title": "Visual issue in selectbox dropdown with scrollbar",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-01-17T21:34:24Z",
    "updated_at": "2025-06-12T16:16:09Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P4",
      "feature:st.selectbox",
      "feature:st.time_input",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nSee the image below, the gray background should extend to the right side of the `st.selectbox` dropdown but it stops at the position of the scrollbar. Note that this only happens if there are enough elements to allow scrolling. It also happens on other elements with dropdowns, e.g. `st.time_input` or `st.multiselect`. \n\n![Image](https://github.com/user-attachments/assets/05954590-f0e8-4e16-bae6-fb526ffa593c)\n\n### Reproducible Code Example\n\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-10204)\n\n```Python\nimport streamlit as st\n\nst.selectbox(\n    \"Select an option\",\n    [\n        \"Option 1\",\n        \"Option 2\",\n        \"Option 3\",\n        \"Option 4\",\n        \"Option 5\",\n        \"Option 6\",\n        \"Option 1\",\n        \"Option 2\",\n        \"Option 3\",\n        \"Option 4\",\n        \"Option 5\",\n        \"Option 6\",\n        \"Option 1\",\n        \"Option 2\",\n        \"Option 3\",\n        \"Option 4\",\n        \"Option 5\",\n        \"Option 6\",\n    ],\n)\n```\n\n### Steps To Reproduce\n\nRun the app above, open the dropdown. \n\n### Expected Behavior\n\nGray hover background spans the entire width of the dropdown. \n\n### Current Behavior\n\nIt doesn't.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.41.1\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10204)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "Since we use custom-styled scrollbars and overlay scrollbar support was removed from Chrome, I'm not even sure there is any good way to solve this without building a custom scrollbar implementation or adapting something like [OverlayScrollbars](https://kingsora.github.io/OverlayScrollbars/). We can probably hide the scrollbars in those menus, but that might not be a preferred solution..."
      }
    ]
  },
  {
    "issue_number": 10673,
    "title": "st.data_editor: Pasting a copied range fails when the bottom-right cell is empty or None",
    "author": "hirokika",
    "state": "closed",
    "created_at": "2025-03-07T05:57:07Z",
    "updated_at": "2025-06-12T16:05:56Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen copying a selected range of cells from st.data_editor and pasting it into another part of the table, the paste operation does not work if the bottom-right cell of the copied selection contains either an empty string (\"\") or None.\n\n**Conditions**\nCopying a range of cells works as expected.\nHowever, when pasting the copied content into another part of the table, nothing happens if the bottom-right cell of the copied selection is empty (\"\") or None.\n\nSample table:\n![Image](https://github.com/user-attachments/assets/2de7b4af-9a10-4f74-8f07-b97cee84b579)\n\nCopying a selected range of cells from st.data_editor:\n![Image](https://github.com/user-attachments/assets/6a364518-5b43-4a8d-b454-171871c0639e)\n\nPasting it into another part of the table does not work:\n![Image](https://github.com/user-attachments/assets/b1927a8b-ac36-49b3-a8dd-247d109f9188)\n\n### Reproducible Code Example\n\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-10673)\n\n```Python\nimport streamlit as st\nimport pandas as pd\n\nsamples = {\n    \"col1\": [\"test11\", \"test12\", \"test13\"],\n    \"col2\": [\"test21\", \"\", \"test23\"],\n    \"col3\": [\"test31\", \"test32\", None]\n}\n\ndf = pd.DataFrame(samples)\neditor = st.data_editor(df, num_rows=\"dynamic\")\n```\n\n### Steps To Reproduce\n\n1. Run the sample code.\n2. Select a range of cells, e.g., from row 1, column 1 (test11) to row 2, column 2 (\"\").\n3. Copy the selected range (Ctrl+C).\n4. Try pasting it into row 2, column 1 (Ctrl+V).\n5. Observe that the paste operation does not work.\n\n### Expected Behavior\n\nThe selected range should be pasted successfully, regardless of whether the bottom-right cell is empty (\"\") or None.\n\n### Current Behavior\n\nCopying fails when the bottom-right cell of the selection is empty (\"\") or None.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.43.0\n- Python version: 3.11.0\n- Operating System: Windows11\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10673)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@hirokika Thanks for reporting the issue. I was able to reproduce it [here](https://issues.streamlit.app/?issue=gh-10673)."
      },
      {
        "user": "guilhermep21",
        "body": "Is this bug already solved? i cant reproduce, i can actually paste."
      }
    ]
  },
  {
    "issue_number": 8091,
    "title": "st.data_editor fill handle can't be clicked when the scrollbar is visible.",
    "author": "nidoro",
    "state": "closed",
    "created_at": "2024-02-06T11:41:45Z",
    "updated_at": "2025-06-12T16:02:03Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nThe fill handle of the cells of the last column can't be clicked/dragged when the vertical scrollbar is visible.\r\n\r\n\r\n### Reproducible Code Example\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-8091)\r\n\r\n```Python\r\nimport streamlit as st\r\nimport pandas as pd\r\n\r\ndata = {\r\n    \"A\": [1, 2, 3, 4, 5],\r\n    \"B\": [1, 2, 3, 4, 5],\r\n    \"C\": [1, 2, 3, 4, 5],\r\n}\r\n\r\nst.data_editor(pd.DataFrame(data), height=140, hide_index=True)\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n![Anima√ß√£o](https://github.com/streamlit/streamlit/assets/21699304/7aa5732b-fdef-4975-8ca7-63e2ed6ecd8c)\r\n\r\n### Expected Behavior\r\n\r\nAll fill handles should be clickable.\r\n\r\n### Current Behavior\r\n\r\nThe scrollbar is getting on the way of the fill handles.\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.31.0\r\n- Python version: 3.12.0\r\n- Operating System: Windows 10 Pro\r\n- Browser: Google Chrome 121.0.6167.140\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-8091)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@nidoro Thanks for reporting this issue. I reproduced this [here](https://github.com/streamlit/streamlit/issues/8091). This might be a bit complicated to fix :( "
      },
      {
        "user": "lukasmasuch",
        "body": "Closing this issue in favour of https://github.com/streamlit/streamlit/issues/9971"
      }
    ]
  },
  {
    "issue_number": 10181,
    "title": "`st.data_editor` does not persist scroll position (x,y) after on_change refresh, when dependent/virtual columns are also updated",
    "author": "mariod13",
    "state": "open",
    "created_at": "2025-01-14T08:49:33Z",
    "updated_at": "2025-06-12T16:00:58Z",
    "labels": [
      "type:enhancement",
      "feature:st.data_editor"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\n**Description**\nWhen a user scrolls down in the `st.data_editor` table and inputs data into a cell, the on_change event is triggered. After this, the table re-renders and resets the scroll position to the top-left corner (0,0) instead of maintaining the user‚Äôs previous scroll position. \nThis occurs when not only the edited cell is updated, but also dependent/virtual cells that are re-calculated based on the user input to the other cell (example given in this comment below: https://github.com/streamlit/streamlit/issues/10181#issuecomment-2765308754)\n\n**Steps to Reproduce**\nSee example in comment below: https://github.com/streamlit/streamlit/issues/10181#issuecomment-2765308754: \nScroll down in the st.data_editor table.\nInput data into a cell to trigger the on_change event.\nObserve that the table re-renders and the scroll position resets to the top-left corner (0,0).\n\n**Expected Behavior**\nThe scroll position should remain where the user had scrolled before inputting data, even after the table re-renders.\nPosition can be (x,y) of last edited cell.\n\n**Versions**\nPython: 3.11.10\nStreamlit: 1.41.1 / v1.44.0\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-10181)\n"
      },
      {
        "user": "dr-jpk-be",
        "body": "This is a central enhancement of st.data_editor, since it significantly improves the user experience.\nCurrently the user has to scroll back manually in the st.data_editor to the position where they edited a cell. If the position was rerendered automatically after the on_change function of st.data_editor, UX would be perfect."
      },
      {
        "user": "leopoldmarx",
        "body": "Any updates? any filters or sorting also gets reset. Again, only when a \"on_change\" function is passes."
      }
    ]
  },
  {
    "issue_number": 9971,
    "title": "Unable to drag to copy a value from one cell to a range of cells in the rightmost column of st.data_editor",
    "author": "JayBigGuy10",
    "state": "open",
    "created_at": "2024-12-05T21:45:02Z",
    "updated_at": "2025-06-12T15:56:58Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor",
      "upstream"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nUnable to drag to copy a value from one cell to a range of cells in the rightmost column of st.data_editor, as the selection handle is underneath the data_editor scrollbar, so when the click and drag happens you just interact with the scrollbar and jump to a different point in the data_editor instead of dragging a selection \r\n\r\n\r\nI can get around the issue by pushing some custom css, but this isnt ideal as it ends up with some whitespace on the right side of the header row \r\n\r\n```\r\nstyl = f\"\"\"\r\n    <style>\r\n        .dvn-scroller {{scrollbar-gutter: stable both-edges;}}\r\n    </style>\r\n    \"\"\"\r\nst.markdown(styl, unsafe_allow_html=True)\r\n```\r\n\r\n![image](https://github.com/user-attachments/assets/90a4e19f-1147-4a5b-810e-b0fbc681b731)\r\n\r\n\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\n# Generate random data\r\ndata = pd.DataFrame({\r\n    \"Column 1\": np.random.random(100),\r\n    \"Column 2\": np.random.random(100),\r\n})\r\n\r\n# Title of the app\r\nst.title(\"Streamlit Data Editor Example\")\r\n\r\n# Display editable data editor\r\nst.data_editor(data, use_container_width=True)\n```\n\n\n### Steps To Reproduce\n\n1. select one of the cells in the right most column\r\n2. grab the handle in the bottom right of the cell\r\n3. attempt to drag to cells below\n\n### Expected Behavior\n\nvalue is copied to the cells that are drag selected\n\n### Current Behavior\n\nthe selection handle is underneath the data_editor scrollbar, so when the click and drag happens you just interact with the scrollbar and jump to a different point in the data_editor instead of dragging a selection \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.40.2\r\n- Python version: 3.11.4\r\n- Operating System: Windows 11 21H2\r\n- Browser: Edge Version 131.0.2903.70\r\n\n\n### Additional Information\n\nthis issue also occurs on the streamlit demo website\r\n\r\ntry to drag the handle in the right most column of this demo\r\ndocs.streamlit.io/develop/api-reference/data/st.data_editor#configuring-columns",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9971)\n"
      },
      {
        "user": "raethlein",
        "body": "@JayBigGuy10 Thanks for reporting the issue and providing a workaround! I was able to reproduce it here: https://issues.streamlit.app/?issue=gh-9971\r\nI will have a look to see whether this is an easy fix or would require some more work, e.g. in the glide library we are using."
      },
      {
        "user": "raethlein",
        "body": "I have spent some time looking into this. So far it looks like we might need to always show the scrollbar to make this work properly (or at least make this configurable via a property or so?), or perhaps have a custom scrollbar implementation or perhaps for the right most column show the drag-edge indicator in the left corner instead of the right one in [glide-data-grid](https://github.com/glideapps/glide-data-grid) itself. @lukasmasuch is more of an expert here, so perhaps he has a good idea or can assess better how feasible this is.\r\nThe current workaround is to simply highlight and copy the cell (Command + C) and then paste it (Command + V). "
      }
    ]
  },
  {
    "issue_number": 10880,
    "title": "`st.dataframe` displays wrong indizes for pivoted dataframe",
    "author": "punsii",
    "state": "open",
    "created_at": "2025-03-23T15:50:44Z",
    "updated_at": "2025-06-12T15:06:19Z",
    "labels": [
      "type:bug",
      "feature:st.dataframe",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor",
      "upstream"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nUnder some conditions streamlit will display the wrong indices in pivoted / multi indexed dataframes.\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-10880)\n\n```Python\nimport streamlit as st\nimport pandas as pd\n\ndf = pd.DataFrame(\n    {\"Index\": [\"X\", \"Y\", \"Z\"], \"A\": [1, 2, 3], \"B\": [6, 5, 4], \"C\": [9, 7, 8]}\n)\ndf = df.set_index(\"Index\")\nst.dataframe(df)\nst.dataframe(df.T.corr())\nst.dataframe(df.T.corr().unstack())\nprint(df.T.corr().unstack())\n```\n\n### Steps To Reproduce\n\n1. `streamlit run` the provided code.\n2. Look at the result of the last `st.dataframe()` call.\n\n### Expected Behavior\n\nInner index should be correct.\n\n### Current Behavior\n\nThe provided code renders the following tables:\n\n![Image](https://github.com/user-attachments/assets/3bc967f6-3d52-438e-b82f-cb817aaccea5)\n\nThe first two tables are correct, while the last one displays a duplicate of the first index instead of the second one.\nIn comparison, this is the correct output from the `print()` statement:\n``` \nIndex  Index\nX      X        1.000000\n       Y        0.999597\n       Z        0.888459\nY      X        0.999597\n       Y        1.000000\n       Z        0.901127\nZ      X        0.888459\n       Y        0.901127\n       Z        1.000000\ndtype: float64\n```\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.42.2\n- Python version: 3.12.9\n- Operating System: Linux\n- Browser: Google Chrome / Firefox\n\n### Additional Information\n\nThe problem does not occur, when the default index is used.\n```python\nimport streamlit as st\nimport pandas as pd\n\ndf = pd.DataFrame({\"A\": [1, 2, 3], \"B\": [6, 5, 4], \"C\": [9, 7, 8]})\nst.dataframe(df.T.corr().unstack())\n```\nThis renders the correct dataframe:\n\n![Image](https://github.com/user-attachments/assets/c7fd7be9-51b1-4298-bf99-296c80c31e84)\n---\nThis issue is possibly related to https://github.com/streamlit/streamlit/issues/3696 (parsing column names and handling their types)",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10880)\n"
      },
      {
        "user": "punsii",
        "body": "For anyone looking for a reasonable workaround:\nYou can use `st.code()` on the string representation of the dataframe instead.\nE.g.\n```\nst.code(\"\\n\".join(df.to_string().split(\"\\n\")[1:-1]))\n```\nThis works well as long as the dataframe is small enough to not be truncated with ellipsis."
      },
      {
        "user": "lukasmasuch",
        "body": "@punsii2 Thanks for reporting this issue. I was able to reproduce it [here](https://issues.streamlitapp.com/?issue=gh-10880). The root cause is the usage of duplicated names in for the index columns. Streamlit isn't able to handle that currently. I think the best short term \"fix\" is to add a warning explaining that usage of duplicated columns names can cause unexpected issues."
      }
    ]
  },
  {
    "issue_number": 8949,
    "title": "Sort by column value for timedelta uses string representation rather than underlying value",
    "author": "ptrba",
    "state": "open",
    "created_at": "2024-06-20T15:19:31Z",
    "updated_at": "2025-06-12T15:04:48Z",
    "labels": [
      "type:bug",
      "feature:st.dataframe",
      "status:confirmed",
      "priority:P3",
      "upstream"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nSimilar to #7672, sorting a timedelta column of a st.dataframe of st.data_editor does not work, because it uses the formatted string representation rather than the underlying value. Sorting by string representation leads to unnatural results because streamlit uses human readable formats. [14 days, 2 hours, 3 days, a day] is the result of ascending order rather than [2 hours, a day, 3 days, 14 days].\n\nOrdering by formatted string can make sense for other data types (for example categorical strings such as tags), but for timedelta this is definitely not what the user expects.\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-8949)\n\n```Python\nimport streamlit as st\nimport pandas as pd\n\ndf = pd.DataFrame(dict(timedelta=[pd.Timedelta(hours=2),\n                                  pd.Timedelta(days=1),\n                                  pd.Timedelta(days=3),\n                                  pd.Timedelta(days=14)]))\n\nst.dataframe(df)\n```\n\n\n### Steps To Reproduce\n\n1. Click on column header 'timedelta' to explicitly sort the values ascendingly.\n\n\n### Expected Behavior\n\nNothing should happen because the values are already sorted ascendingly. The values should be sorted by their underlying timedelta values, here: [2 hours, a day, 3 days, 14 days].\n\n### Current Behavior\n\nThe values are sorted by their string representation: [14 days, 2 hours, 3 days, a day].\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:  1.35.0\n- Python version:  3.11.5\n- Operating System: MacOs\n- Browser: Chrome\n\n\n### Additional Information\n\nThis problem can be worked around by using a total seconds representation. Fully fledged example is shown below. The 'timedelta' and 'timedelta_formatted' columns will not sort correctly. But 'total_seconds' and 'total_seconds_formatted' work as expected. 'total_seconds_formatted' are displayed exactly like 'timedelta', thus solves the problem with a little cognitive overhead. \n\n```python\nimport streamlit as st\nimport pandas as pd\nimport functools\n\ndf = pd.DataFrame(dict(timedelta=[pd.Timedelta(hours=2),\n                                  pd.Timedelta(days=1),\n                                  pd.Timedelta(days=3),\n                                  pd.Timedelta(days=14)]))\n\ndf['total_seconds'] = df['timedelta'].dt.total_seconds()\n\nfrom babel.dates import format_timedelta\n\nformat_timedelta_ = functools.partial(format_timedelta, locale='en')\n\ndf['timedelta_formatted'] = df['timedelta']\ndf['total_seconds_formatted'] = df['total_seconds']\n\n\ndef format_total_seconds(td) -> str:\n    return format_timedelta_(pd.Timedelta(seconds=td).to_pytimedelta())\n\n\ndf = df.style.format(format_timedelta_, subset=['timedelta_formatted']).format(format_total_seconds,\n                                                                               subset=['total_seconds_formatted'])\n\nst.dataframe(df)\n```",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-8949)\n"
      },
      {
        "user": "Superskyyy",
        "body": "This is a major pain point, please fix, Thanks!"
      },
      {
        "user": "lukasmasuch",
        "body": "One potential workaround here is to configure the columns to use `NumberColumn`:\n\n```python\nimport streamlit as st\nimport pandas as pd\n\ndf = pd.DataFrame(dict(timedelta=[pd.Timedelta(hours=2),\n                                  pd.Timedelta(days=1),\n                                  pd.Timedelta(days=3),\n                                  pd.Timedelta(days=14)]))\n\nst.dataframe(df, column_config={\"timedelta\": st.column_config.NumberColumn()})\n```"
      }
    ]
  },
  {
    "issue_number": 11247,
    "title": "Support unicode-range in font-face declaration",
    "author": "sfc-gh-dmatthews",
    "state": "closed",
    "created_at": "2025-05-01T00:15:37Z",
    "updated_at": "2025-06-12T14:54:19Z",
    "labels": [
      "type:enhancement",
      "feature:theming"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nCurrently, `config.toml` does not support the `unicode-range` CSS `@font-face descriptor. For localization, this descriptor is helpful.\n\n### Why?\n\nEven if an app developer doesn't explicitly localize their app, many browser extension may provide in-place translations. With this description, additional character sets can be included that will only conditionally load if one of their characters is used. Thus, you can define a font for your app, and provide additional font file declarations if you expect people to translate your app into a language requiring another character set.\n\ne.g. Choose a pretty font and write an app in English which will load the latin character sets. Include Chinese, Japanese, and Korean font sets that match your pretty font so that in-place translations stay pretty, without unnecessarily loading them for everyone.\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11247)\n"
      }
    ]
  },
  {
    "issue_number": 11163,
    "title": "theme.fontFaces.weight doesn't accept a weight range",
    "author": "sfc-gh-dmatthews",
    "state": "closed",
    "created_at": "2025-04-23T05:35:40Z",
    "updated_at": "2025-06-12T14:54:19Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:theming",
      "feature:config"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe `weight` property in `theme.fontFaces` passes to the [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-weight) CSS `@font-face` descriptor. This is parsed correctly if the weight is an integer or an int-like string. However, if a range of weights is passed (like `\"400 600\"`) the font is not correctly interpreted and it doesn't load to the front end.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nst.sidebar.header(\"fg **fg** _fg_ ***fg*** `fg`\")\nst.sidebar.subheader(\"fg **fg** _fg_ ***fg*** `fg`\")\nst.sidebar.write(\"fg **fg** _fg_ ***fg*** `fg`\")\nst.sidebar.code(\"fg **fg** _fg_ ***fg*** `fg` #And a code comment\")\nst.header(\"fg **fg** _fg_ ***fg*** `fg`\")\nst.subheader(\"fg **fg** _fg_ ***fg*** `fg`\")\nst.write(\"fg **fg** _fg_ ***fg*** `fg`\")\nst.code(\"fg **fg** _fg_ ***fg*** `fg` #And a code comment\")\n```\n\n### Steps To Reproduce\n\nGet Noto font files form Google:\nhttps://fonts.google.com/specimen/Noto+Sans\nhttps://fonts.google.com/specimen/Noto+Sans+Mono\n\nConsider the following configuration (with the appropriate font files saved in the static hosting directory.\n\n```\n[server]\nenableStaticServing = true\n[[theme.fontFaces]]\nfamily=\"noto-sans\"\nurl=\"app/static/NotoSans-Italic-VariableFont_wdth,wght.ttf\"\nstyle=\"italic\"\n[[theme.fontFaces]]\nfamily=\"noto-sans\"\nurl=\"app/static/NotoSans-VariableFont_wdth,wght.ttf\"\nstyle=\"normal\"\nweight=800\n[[theme.fontFaces]]\nfamily=\"noto-mono\"\nurl=\"app/static/NotoSansMono-VariableFont_wdth,wght.ttf\"\nstyle=\"normal\"\n[theme]\nfont=\"noto-sans\"\ncodeFont=\"noto-mono\"\n```\n\nThe makes the non-italic font all have weight 800.\n\nIf the weight line is changed to:\n```\nweight=\"400\"\n```\n...then all non-italic font has normal weight.\n\nHowever, if the weight line is changed to:\n```\nweight=\"400 800\"\n```\n...the non-italic font doesn't load and everything uses the italic font instead (as the closest available font).\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: v1.44.2.dev20250421\n- Python version: 3.11\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11163)\n"
      },
      {
        "user": "kmcgrady",
        "body": "I have confirmed this issue. This is due to the fact that our protobuf expects a single integer for a font face. There's room for improvement here, and will tag @jrieke on whether this is something we should remedy or will this be the expected behavior we want (and it's an enhancement)."
      }
    ]
  },
  {
    "issue_number": 6855,
    "title": "Cannot Ctrl+C to end streamlit process from CLI without an open tab (in Windows)",
    "author": "MathCatsAnd",
    "state": "open",
    "created_at": "2023-06-18T20:48:21Z",
    "updated_at": "2025-06-12T13:01:00Z",
    "labels": [
      "type:bug",
      "good first issue",
      "area:windows",
      "status:confirmed",
      "priority:P2",
      "feature:cli"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThis has had [a few comments in the forum](https://discuss.streamlit.io/t/cant-stop-streamlit-app-using-ctrl-c-if-the-app-has-been-closed-in-the-browser/38738) and I couldn't find mention in a current or closed issue, so documenting here. This is merely a minor inconvenience with an easy workaround for most, but noting for completeness/future searches.\r\n\r\nIn Windows, the `streamlit run` process cannot be terminated from command line with `Ctrl+C` if there are no connected tabs. The terminal itself must either be closed or a new tab open and connected to the session to register if `Ctrl+C` has been typed. The forum thread mentions a connection to tornado.\n\n### Reproducible Code Example\n\n```Python\n# Any valid streamlit app\r\nimport streamlit as st\r\nst.write('hi')\n```\n\n\n### Steps To Reproduce\n\n1. From a terminal in Windows, `streamlit run app.py`.\r\n2. Close any/all tabs connected to the session.\r\n3. Ctrl+C in the terminal\r\n(nothing happens)\r\n4. Open a tab and connect to the session\r\n(terminal immediately registers the previous command and correctly proceeds `Stopping...`)\n\n### Expected Behavior\n\nCtrl+C should stop the process even if there are no active users\n\n### Current Behavior\n\nA connected tab is required to stop the process without closing the terminal\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.23.0\r\n- Python version: 3.10.11\r\n- Operating System: Windows 10\r\n- Browser: Edge...or rather \"none\"\r\n- Virtual environment: Conda\r\n\n\n### Additional Information\n\nThematically related to #6611\n\n### Are you willing to submit a PR?\n\n- [ ] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "jrieke",
        "body": "Huh very interesting. Probably one of these bugs we never catch because nobody on the team uses Windows :D Thanks for tracking."
      },
      {
        "user": "knoopx",
        "body": "I'm on linux and facing similiar issues, essentially I can't ctrl-c, I have to kill the process. However I'm launching streamlit through VS Code terminal and running a torch training loop, which might be a relevant."
      },
      {
        "user": "rnapoli",
        "body": "I have the same issue, I have to manually kill streamlit's process in task manager if I close the browser window.\r\n\r\nStreamlit version: 1.25.0\r\nPython version: 3.10.6\r\nOperating System: Windows 10 (x64)\r\nBrowser: Chrome Version 115.0.5790.110 (Official Build) (64-bit)"
      }
    ]
  },
  {
    "issue_number": 8185,
    "title": "Force Streamlit components in the bottom of the page, near chat_input",
    "author": "paolomagnani-mxm",
    "state": "open",
    "created_at": "2024-02-21T12:09:49Z",
    "updated_at": "2025-06-12T07:20:29Z",
    "labels": [
      "type:enhancement",
      "area:layout",
      "feature:st.chat_input"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nIs there a way to force the position of other components to the **bottom**, maybe near the `chat_input` or up/down ? \r\n\r\nI'm trying to insert a File Uploader and other components near to the `chat_input`, but I'm struggling with how to do that. I tried to add columns and put in one the chat_input and in the other the File Uploader, but the position of the chat_input becomes inline and the File Uploader is not in the bottom.\r\n\r\n### Why?\r\n\r\nThe idea is to have a sort of chat_input with other buttons, like File Uploader, pinned to the bottom.\r\n\r\n### How?\r\n\r\nI see that in the source code, it's defined the position of the chat_input at the bottom in this way:\r\nhttps://github.com/streamlit/streamlit/blob/f45020944af3110ed05f953840b1cd368d07bc82/lib/streamlit/elements/widgets/chat.py#L324\r\n\r\nAnd at the end the components in enqueued in this way:\r\nhttps://github.com/streamlit/streamlit/blob/f45020944af3110ed05f953840b1cd368d07bc82/lib/streamlit/elements/widgets/chat.py#L361\r\n\r\nIs there a simple way to do that for other components, or to change this position from outside? Or maybe it's a new feature request :) \r\n\r\n### Additional Context\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8185)\n"
      },
      {
        "user": "AndywinXp",
        "body": "This would be very, *very* useful. I'm trying to put a voice input button near the chat input component, and I can't seem to make them coexist properly, without the chat input widget getting positioned somewhere it shouldn't. In general it would be very useful to force the chat_input component on the bottom of a container (but I reckon it would require a MAIN and a BOTTOM context available within a container, for that to work?)."
      },
      {
        "user": "jrieke",
        "body": "We don't support this today but have thought about adding it at some point in the future. If you have concrete use cases for what you need this for, please describe them here in as much detail as possible! That will help us a lot in prioritizing this feature. "
      }
    ]
  },
  {
    "issue_number": 6811,
    "title": "data_editor prevents Excel copying & pasting",
    "author": "xinyu-dev",
    "state": "closed",
    "created_at": "2023-06-07T14:28:14Z",
    "updated_at": "2025-06-12T02:24:00Z",
    "labels": [
      "type:bug",
      "type:docs",
      "status:confirmed",
      "feature:st.data_editor"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nThis issue is related to v1.23.0 streamlit editable dataframe\r\nWhen deployed locally you can copy from Excel and paste into editable dataframe. However, when using the deployed on the network (e.g. using the network url), that feature is no longer supported.\r\n\r\n### Reproducible Code Example\r\n\r\n_No response_\r\n\r\n### Steps To Reproduce\r\n\r\nA simple example is to head over here: https://docs.streamlit.io/library/api-reference/data/st.data_editor\r\nTry copying a few cells from Excel into the table there. You have to click into an individual and then paste it. You can‚Äôt paste the multiple cells at once.\r\n\r\nI think this might be related to issue #6810 and https://discuss.streamlit.io/t/about-the-copy-and-paste-function-of-st-experimental-data-editor/42562/8 on the forum as well. This is probably related to \" As with many new APIs, the Clipboard API is only supported for pages served over HTTPS. If your connection is not HTTPS or localhost, then the copy &paste won‚Äôt work. See [Copy dataframe to clipboard - #14 by MesumRaza](https://discuss.streamlit.io/t/copy-dataframe-to-clipboard/2633/14)\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### Current Behavior\r\n\r\n_No response_\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.23.0 and 1.23.1\r\n- Python version: 3.10\r\n- Operating System: MacOS, Ubuntu\r\n- Browser: Chrome\r\n- Virtual environment:\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_\r\n\r\n### Are you willing to submit a PR?\r\n\r\n- [ ] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "snehankekre",
        "body": "Hi @xinyu-dev üëã \r\n\r\nThank you for reporting this issue! It was caused by a bug in Streamlit's documentation site and isn't an issue with the open-source library.  In our docs in [Copy and paste support](https://docs.streamlit.io/library/advanced-features/dataframes#copy-and-paste-support), we say:\r\n\r\n> If you embed your apps with iframes, you'll need to allow the iframe to access the clipboard if you want to use the copy-paste functionality. To do so, give the iframe [clipboard-write](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/write) and [clipboard-read](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/read) permissions. E.g.\r\n> ```<iframe allow=\"clipboard-write;clipboard-read;\" ... src=\"https://your-app-url\"></iframe>```\r\n\r\nUnfortunately the docs site did not grant those Clipboard permissions to the embedded apps in the API reference, which is why pasting data into the app did not work. https://github.com/streamlit/docs/pull/694 fixes this issue üòÑ \r\n\r\n![copy-paste-support](https://github.com/streamlit/streamlit/assets/20672874/bf34945b-ea9b-4604-becb-571fba9eb338)\r\n\r\nSee the associated PR for more context."
      },
      {
        "user": "mharty3",
        "body": "I'm experiencing the same behavior in my own apps (and on the Docs site linked above) when using the **Firefox** browser. `st.dataframe` and `st.data_editor` are working as expected in both Chrome and Edge for both version 1.22 and version 1.23\r\n\r\nHowever in  v1.23.0 in Firefox, I am experiencing a regression in the data_editor and the dataframe display. I can no longer select multiple cells at once in the dataframe either with click and drag or shift + arrow keys. I can only select one cell at a time. \r\n\r\nIn the data editor, I can no longer copy and paste multiple cells at once. In addition, the \"bulk editor handle\" and fill via ctrl+d is not working in the data editor.\r\n\r\nThis only seems to happen with Firefox on v1.23. The apps in v1.22.0 are behaving as expected in all browsers including Firefox.\r\n\r\nFor reproducible code example see: [this repo](https://github.com/mharty3/streamlit_firefox_data_editor_issue_v1-23)"
      },
      {
        "user": "hikmetc",
        "body": "Now I can paste my results from excel spreadsheet into st.data_editor. However, when copy and pasting the float values, st.data_editor deletes dots that separate decimals."
      }
    ]
  },
  {
    "issue_number": 11550,
    "title": "Make `st.markdown` faster",
    "author": "jrieke",
    "state": "closed",
    "created_at": "2025-06-06T19:33:30Z",
    "updated_at": "2025-06-11T21:33:17Z",
    "labels": [
      "type:enhancement",
      "feature:markdown",
      "area:performance"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nToday, `st.markdown` is much slower than `st.text` since it takes a lot of time to render the Markdown with `react-markdown`, which in turn uses a number of libraries (unified/remark/micromark) under the hood. That's obviously expected to some extent, but maybe there's something we can speed up?\n\n### Why?\n\nThis can be a problem when rendering lots of long markdown texts, e.g., in a chat UI with lots of messages. This is especially annoying since `st.write` (which is often used for convenience) uses `st.markdown` under the hood for any kind of text. \n\n### How?\n\n_No response_\n\n### Additional Context\n\nSmall script to reproduce:\n\n```python\nimport streamlit as st\nelement = st.radio(\"Element to use\", [\"st.markdown\", \"st.text\"])\ntext = \"ABCabc\" * 10000\nif st.button(\"Run element\"):\n    if element == \"st.text\":\n        st.text(text)\n    else:\n        st.markdown(text)\n    st.write(\"DONE\")\n```",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11550)\n"
      }
    ]
  },
  {
    "issue_number": 9984,
    "title": "`st.altair_chart` does not show with a good size if the title is too long",
    "author": "RubenCata",
    "state": "closed",
    "created_at": "2024-12-09T16:37:58Z",
    "updated_at": "2025-06-11T21:33:08Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.altair_chart"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\n`st.altair_chart` fails to properly display `alt.Chart` with title that exceed the container width.\r\n\r\nWhen using st.altair_chart, charts with titles that do not fit within the container width are rendered poorly.\r\nIn the example below, two `st.altair_chart` instances use the same `alt.Chart` object. The first chart has sufficient space to display the entire title, resulting in a clear presentation. In contrast, the second chart has limited space, causing the title to be truncated and the chart to appear distorted.\r\n\r\n<img width=\"652\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3f520e5e-7677-4d68-a6d0-c7c66ffb05cd\">\r\n\r\n\r\nIf the title length is increased to affect the first chart as well, it will also render poorly, indicating that the issue is not related to the `use_container_width` parameter in `st.altair_chart`.\r\n\r\n### Reproducible Code Example\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-9984)\r\n\r\n```Python\r\n# create a very basic alt.chart\r\nimport streamlit as st\r\nimport altair as alt\r\nimport pandas as pd\r\n\r\n# Create a simple dataframe\r\ndf = pd.DataFrame({\"x\": [1, 2, 3, 4, 5], \"y\": [10, 20, 30, 40, 50]})\r\n\r\n# Create a simple chart\r\nchart = (\r\n    alt.Chart(\r\n        data=df,\r\n        title=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec purus euismod, ultricies nunc nec, ultricies nunc.\",\r\n    )\r\n    .mark_line()\r\n    .encode(x=\"x\", y=\"y\")\r\n)\r\n\r\n# Render the chart\r\nst.altair_chart(chart, use_container_width=True)\r\nst.altair_chart(chart, use_container_width=False)\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\nRun the previous code\r\n\r\n### Expected Behavior\r\n\r\nThe chart should be always displayed with the appropriate width.\r\nIf the title exceeds the available space, it should be truncated at the point where it reaches the container's width limit without affecting the chart.\r\n\r\n### Current Behavior\r\n\r\nIf the `alt.Chart` title is too long, the title is truncated (which is good), but the chart is rendered with an incorrect width, leading to a poor visual presentation.\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.40.2\r\n- Python version: 3.10.11\r\n- Operating System: Windows 11\r\n- Browser: Chrome\r\n\r\n\r\n### Additional Information",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9984)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @RubenCata, thanks for filing this bug. I can confirm that I was able to reproduce it. "
      }
    ]
  },
  {
    "issue_number": 10383,
    "title": "Make st.toast appear/bring it to the front (stack order) when used in st.dialog",
    "author": "Socvest",
    "state": "closed",
    "created_at": "2025-02-12T20:19:16Z",
    "updated_at": "2025-06-11T21:08:45Z",
    "labels": [
      "type:enhancement",
      "feature:st.toast",
      "feature:st.dialog"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nNot sure to place this as a feature request or bug but it seems when using st.toast inside st.dialog, the dialog is sent to the background of the dialog. \n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nst.dialog(title=\"Streamlit Toast Notification\")\ndef toast_notification():\n   activate_toast = st.button(label=\"send toast\")\n   if activate_toast:\n      st.toast(\"Hi, I am in the background!\")\n\ntoast_notification()\n```\n\n### Steps To Reproduce\n\n1. Create dialog\n2. Click button to show toast\n\n\n### Expected Behavior\n\nst.toast should be stacked at the front of the dialog. \n\n### Current Behavior\n\nStacks behind st.dialog.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.42.0\n- Python version: 3.10\n- Operating System: Windows\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10383)\n"
      },
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Visits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fstreamlit%2Fstreamlit%2Fissues%2F10383&title=visits&edge_flat=false)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @Socvest, thanks for your submission!\nI confirmed the behavior, but recategorized as an enhancement since this isn't really broken behavior - though it would make sense to me that toast shouldn't be obscured in the background when fired from dialog."
      }
    ]
  },
  {
    "issue_number": 11597,
    "title": "Sort dropdown options in `st.selectbox` and `st.multiselect`",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-06-11T20:05:12Z",
    "updated_at": "2025-06-11T20:05:29Z",
    "labels": [
      "type:enhancement",
      "feature:st.selectbox",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nWhen searching for a value in `st.selectbox` and `st.multiselect`, it shows the options sorted by the best match to the search query. But sometimes, you want to have the results sorted differently, e.g. alphabetically. \n\n### Why?\n\nThis can be useful if the options are e.g. IDs or have a special taxonomy (such as `\"category - group - event\"`). \n\n### How?\n\nMaybe we add a parameter `sort=\"match\"|\"alphabetically\"` or similar. We could also think about providing a custom search function but might be hard since we're doing the search in on the frontend and not in Python. \n\n### Additional Context\n\nRelated (filtering instead of sorting): https://github.com/streamlit/streamlit/issues/7238",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11597)\n"
      }
    ]
  },
  {
    "issue_number": 7238,
    "title": "st.selectbox and st.multiselect strict matching to user input",
    "author": "CHerSun",
    "state": "open",
    "created_at": "2023-08-25T11:54:35Z",
    "updated_at": "2025-06-11T20:05:02Z",
    "labels": [
      "type:enhancement",
      "feature:st.selectbox",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nPlease, add an option to select matching. Some possible variants:\r\n* loose / fuzzy (current default)\r\n* starts with\r\n* contains\r\n\r\nAlso might be a good option to include case sensitivity.\r\n\r\nPersonally, I need a toggle between **loose / strict contains matching**.\r\n\r\n### Why?\r\n\r\nOn most use cases current fuzzy matching works awesome.\r\n\r\nBut recently I've started working a lot with IDs (parts with specific part number). Problem is - IDs are quite similar, often a difference comes in single character. Current matching gives several variants, sometimes even placing wrong one in the first place. It makes it very easy for the end user to make a mistake (which shouldn't happen, as he is meant to copy/paste the ID most of times). With exact contains that wouldn't be a problem at all, items would've been filtered correctly (the same ID can't be present in another entry).\r\n\r\n### How?\r\n\r\nAdd an option to st.selectbox and st.multiselect, something like `match: Literal['fuzzy']|Literal['contains']...` with default being the current matching mechanics.\r\n\r\n**Update**: Maybe a Callable form would be nice, running that onto collection to leave only wanted choices. This would allow user logic, like filtering based on certain field.\r\n\r\n### Additional Context\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-7238)\n"
      },
      {
        "user": "jrieke",
        "body": "That sounds pretty reasonable. An alternative could be to improve the underlying algorithm we're using so that exact matches always show up first. Would that be a viable solution for you?"
      },
      {
        "user": "CHerSun",
        "body": "> That sounds pretty reasonable. An alternative could be to improve the underlying algorithm we're using so that exact matches always show up first. Would that be a viable solution for you?\r\n\r\nPersonally, I'd prefer strict matching to avoid misleading fuzzy variants where they are not required.\r\n\r\nBut with some interface improvement, like highlighting the matched part (background), or splitting exact and fuzzy matches (horizontal separator line between results?), or maybe some kind of mark for exact matches, like ‚úÖ, - that could be viable too. Main problem is it is too easy to make a mistake for end user."
      }
    ]
  },
  {
    "issue_number": 11277,
    "title": "Persist widget identity when key is set, even if the parameters change",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-05-05T22:33:22Z",
    "updated_at": "2025-06-11T20:01:00Z",
    "labels": [
      "type:enhancement",
      "area:widgets"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nIf you change any parameter of a widget in Streamlit (e.g. the label or the default value), Streamlit will treat it as a new widget and reset its state. That‚Äôs necessary because we determine which widget state belongs to which widget based on the parameters. (Note that there are a few exceptions to this rule, e.g. changing the `disabled` parameter will not reset the widget). \n\nBut we still do this when you manually set `key`! Even though in that case, we can easily associate the widget state with the widget based on the `key`. We should change that and always preserve the widget identity if `key` is set. \n\n### Why?\n\nThis (potentially) fixes lots of small issues such as:\n\n- https://github.com/streamlit/streamlit/issues/4854\n- https://github.com/streamlit/streamlit/issues/7749\n- https://github.com/streamlit/streamlit/issues/7855\n- https://github.com/streamlit/streamlit/issues/8410\n- https://github.com/streamlit/streamlit/issues/8496\n- https://github.com/streamlit/streamlit/issues/9402\n- https://github.com/streamlit/streamlit/issues/9415\n- https://github.com/streamlit/streamlit/issues/9657\n- https://github.com/streamlit/streamlit/issues/10181\n- https://github.com/streamlit/streamlit/issues/10843\n- https://github.com/streamlit/streamlit/issues/11268\n- With zoom events on charts/maps, this could unblock use cases where you dynamically want to load data while zooming in.\n\n### How?\n\nWe need to be careful here since this *might* break apps. Probably needs a bit of investigation. \n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11277)\n"
      },
      {
        "user": "dr-jpk-be",
        "body": "Up :),\nespecially if it fixes the issue with the non-persisting scroll position of `st.data_editor` when dependent columns are updated based on columns with user input."
      },
      {
        "user": "inner-vadim",
        "body": "Up üòÅ"
      }
    ]
  },
  {
    "issue_number": 11077,
    "title": "Allow select all text in st.selectbox",
    "author": "RoyalTS",
    "state": "open",
    "created_at": "2025-04-11T13:13:49Z",
    "updated_at": "2025-06-11T19:58:40Z",
    "labels": [
      "type:enhancement",
      "feature:st.selectbox"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nSince `selectbox` allows for full-text search, it would be great if, once edit mode has been entered and a blinking cursor is visible, one could easily select and delete the text of the currently chosen value via `command + a` instead of having to clear the box via repeated backspace.\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11077)\n"
      }
    ]
  },
  {
    "issue_number": 7855,
    "title": "`st.multiselect` returns empty on dynamically changing options. ",
    "author": "PradeepReddy-epi",
    "state": "open",
    "created_at": "2023-12-19T09:57:35Z",
    "updated_at": "2025-06-11T19:27:34Z",
    "labels": [
      "type:enhancement",
      "feature:st.form",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nStreamlit multi_select element `st.multi_select` not working as expected inside streamlit form `st.form`. After selecting multiple options through the multi select element, on form submission, the multiselect widget giving empty value `[]`. \r\n\r\n### Reproducible Code Example\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-7855)\r\n\r\n```Python\r\nimport streamlit as st\r\n\r\nwith st.form(key=\"async_testing_config\"):\r\n        # Components : Select async api endpoints for testing.\r\n        components = st.multiselect(\r\n            \"Select async api endpoints\",\r\n           external_call_to_aws_api_to_get_list_of_endpoints(),\r\n            key=\"components\"\r\n        )\r\n\r\n        # Submitted - BOOLEAN\r\n        Submitted = st.form_submit_button(\"Submit\")\r\n        if Submitted:\r\n            print(\"project id: \", project_id)\r\n            print(\"endpoints: \",components)\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n_No response_\r\n\r\n### Expected Behavior\r\n\r\nAfter submitting the form, user should be able to get all options selected through multi select widget. \r\n\r\n### Current Behavior\r\n\r\nUser getting empty value after submitting. Note: the options passed to the multiselect widget is an external api call to aws api to list of endpoints (options). I tried with streamlit version 1.28.2 and also latest version 1.29.0 as well, facing the same issue.\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.28.2\r\n- Python version: 3.9\r\n- Operating System: Mac\r\n- Browser: Chrome\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-7855)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@PradeepReddy-epi Thanks for reporting this issue. Unfortunately, I couldn't reproduce this issue [here](https://issues.streamlit.app/?issue=gh-7855) by using static options. Is the `external_call_to_aws_api_to_get_list_of_endpoints` always returning the same set of options? "
      },
      {
        "user": "PradeepReddy-epi",
        "body": "@LukasMasuch Thanks for the response. the `external_call_to_aws_api_to_get_list_of_endpoints` won't return same set of options all the time. the list of options it returns changes dynamically. \r\n\r\non contrary, `st.selectbox` is working fine even though it receive options same as in above manner, dynamically from aws api."
      }
    ]
  },
  {
    "issue_number": 11569,
    "title": "Unexpected visual gap in `st.number_input`",
    "author": "sfc-gh-lmasuch",
    "state": "closed",
    "created_at": "2025-06-09T17:19:28Z",
    "updated_at": "2025-06-11T19:23:41Z",
    "labels": [
      "type:bug",
      "good first issue",
      "status:confirmed",
      "priority:P3",
      "feature:st.number_input"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\n`st.number_input` has a gap between the incrementer and the border. This is using default radius.\n\n![Image](https://github.com/user-attachments/assets/e30a1bf1-f2ad-4b7c-a773-4dbab7c5c9e7)\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nst.number_input(\"Type number\")\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.11\n- Operating System: MacOS\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11569)\n"
      }
    ]
  },
  {
    "issue_number": 2820,
    "title": "Duplication of ghost app elements ",
    "author": "iharshulhan",
    "state": "open",
    "created_at": "2021-02-19T12:43:06Z",
    "updated_at": "2025-06-11T19:03:18Z",
    "labels": [
      "type:enhancement",
      "area:frontend"
    ],
    "body": "# Summary\n\nThe UI elements are not properly cleaned and can become duplicated.\n\n# Steps to reproduce\n\nCan't trace to some specific actions. \n\n## Expected behavior:\n\nThe duplicated old elements should be deleted. \n\n## Actual behavior:\n![Screenshot from 2021-02-19 13-35-48](https://user-images.githubusercontent.com/14186470/108505669-0ba76200-72b8-11eb-944f-7f8151506af1.png)\n\n## Is this a regression?\n\nNo\n\n# Debug info\n\n- Streamlit version: 0.74.1\n- Browser version: Chrome Version 88.0.4324.146\n\n![Views](https://api.views-badge.org/badge/st-issue-2820)\n\n",
    "comments": [
      {
        "user": "kmcgrady",
        "body": "Hi @iharshulhan Thanks for the report!\r\n\r\nIt's hard to diagnose without looking at an example. Can you share some code for this or a toy example that illustrates the problem?"
      },
      {
        "user": "iharshulhan",
        "body": "@kmcgrady I wish I had an example to replicate the issue, but as I said it is quire random and usually appears after a number of updates. I would also say that changing the parameters while the tool is calculating increases the probability of such duplication. The issue appeared both with a relatively high and low number of control elements (few elements vs ~50). "
      },
      {
        "user": "kmcgrady",
        "body": "Makes sense @iharshulhan . My only idea is if you are generating elements in between or dependent elements, there is some confusion on which elements are displaying potentially. I would say if you find an example that's becomes more reliable, let us know. a 50/50 chance would be great....maybe once every 4 tries is possible, but if it's very much more and in a very specific repetitive environment, it will be tough. We'll keep it in mind if we see more examples of it popping up."
      }
    ]
  },
  {
    "issue_number": 1019,
    "title": "[Coming soon] Add directory chooser",
    "author": "JohnReid",
    "state": "open",
    "created_at": "2020-01-27T09:11:52Z",
    "updated_at": "2025-06-11T01:59:23Z",
    "labels": [
      "type:enhancement",
      "feature:st.file_uploader",
      "type:possible-component"
    ],
    "body": "### Problem\n\nThe file uploader is a nice widget but we often wish to point our streamlit application at a directory. As far as I can see this is not possible with the file uploader.\n\n### Solution\n\nCould you add a directory chooser to streamlit?\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-1019)",
    "comments": [
      {
        "user": "jrhone",
        "body": "Thanks for the feedback @JohnReid ! \r\n\r\nWe're working on the spec for File Uploader V2 and I've added your feature request to it."
      },
      {
        "user": "mrconway",
        "body": "+1 for directory chooser. Thank you!"
      },
      {
        "user": "ghost",
        "body": "Same here. + 1 for folder picker."
      }
    ]
  },
  {
    "issue_number": 10160,
    "title": "Expose OAuth errors during `st.login`",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-01-10T23:32:58Z",
    "updated_at": "2025-06-11T01:42:52Z",
    "labels": [
      "type:enhancement",
      "feature:st.user",
      "feature:st.login"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nWe're soon launching native authentication in Streamlit (see #8518). One thing we left out for now is handling errors that appear during the OAuth flow. It would be great to either handle them automatically (e.g. by showing a dialog or toast) or exposing them programmatically. \r\n\r\n\r\n\r\n### Why?\r\n\r\nThese errors should be very rare in Streamlit because many errors are handled directly in the OAuth flow by the identity provider and [most possible errors that are propagated back to the app](https://www.oauth.com/oauth2-servers/server-side-apps/possible-errors/) are due to a) wrong configuration (which we usually catch before even initiating the OAuth flow), b) wrong implementation (which we control), or c) the server of the identity provider being down (which shouldn't happen often for the major providers). \r\n\r\nBut errors can still happen ‚Äì the most prominent example we found during testing is when the user clicks \"Cancel\" on the consent screen shown when logging in for the first time. And there might be others we didn't think about yet. \r\n\r\n### How?\r\n\r\nTwo possible ways:\r\n\r\n1. Automatically show a dialog or toast with the error code and potentially error description and error URI. Note that OAuth recommends showing a custom error message to the user instead of showing the error code and error description directly. But I think in our case (where these errors are very rare), it might be fine to just show that and not require the developer to implement it themselves. We should probably have a parameter on `st.login` to disable this automatic notification in case the developer wants to handle the error themselves (see 2). \r\n2. Expose the error details programmatically. One way would be to put it into `st.user` as keys `error`, `error_description` (optional), and `error_uri` (optional). In that case, we should automatically clear these items on the next rerun, otherwise it becomes very hard to only show the error when it happens. Another possible approach would be to have an `on_error` callback on `st.login`. But a) we'd need to pass the error details to this callback, which would make it work a bit differently than our callbacks (currently) work and b) it's a bit more cumbersome to work with this in practice because you often have to stick the error message into `st.session_state` if you want to show it somewhere within the app. \r\n\r\n### Additional Context\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-10160)\n"
      },
      {
        "user": "Sairam90",
        "body": "This would be helpful !\nAlso, Is there also a ticket to test login() using Apptest ?"
      },
      {
        "user": "jrieke",
        "body": "Don't think so, feel free to create one!"
      }
    ]
  },
  {
    "issue_number": 9513,
    "title": "Command line flags for common arguments",
    "author": "ziggycross",
    "state": "open",
    "created_at": "2024-09-20T21:28:11Z",
    "updated_at": "2025-06-11T01:32:49Z",
    "labels": [
      "type:enhancement",
      "feature:cli",
      "status:needs-product-approval"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nI am proposing that we implement flags for common CLI arguments.\r\nCurrently, config options can be configured as outlined [here](https://docs.streamlit.io/develop/api-reference/cli/run).\n\n### Why?\n\nA simple flag system would be more memorable and terse, align more with common CLI conventions, and reduce typing errors for frequently used options.\n\n### How?\n\nRunning in headless mode `--headless` or `-h` for `--server.headless true`\r\nRerunning on save `--run-on-save` or `-r` for `--server.runOnSave true`\r\nSpecifying a port `--port <number>` or `-p <number>` for `--server.port <port number>`\r\n\r\nThis would transform the current\r\n\r\n> `streamlit run <entrypoint file> --server.headless true --server.runOnSave true --server.port 6000`\r\n\r\ninto the proposed\r\n\r\n> `streamlit run -h -r -p <port number> <entrypoint file>`\r\n\r\n\r\n\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-9513)\n"
      },
      {
        "user": "w-userc",
        "body": "Hi! I‚Äôve started exploring this feature with @axelcarapinha and we‚Äôd like to contribute. Could you please assign this issue to us? \nThanks!"
      }
    ]
  },
  {
    "issue_number": 9544,
    "title": "`st.container` : Enable horizontal scrolling",
    "author": "behemothsecurity",
    "state": "open",
    "created_at": "2024-09-25T09:42:12Z",
    "updated_at": "2025-06-10T21:09:42Z",
    "labels": [
      "type:enhancement",
      "area:layout",
      "feature:st.container"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nContainers today only enable a vertical scrolling of inner elements (widgets, or nested containers). Enabling horizontal behaviour would allow a lot of new interesting UI/UX patterns to emerge.\r\n\r\n### Why?\r\n\r\nThere has been several occurences where I thought a horizontal container would work best, as a method to optimize the layout for complex ideas. For example, when developing a sort of workbench for a specific AI use case, where I want to build a lot of different purpose driven interfaces.\r\n\r\nI feel that some basic but powerful layout options like horizontal scrolling is still what hinders from using streamlit has a SPA/App Platform when the use case gets richer.\r\n\r\n### How?\r\n\r\nIntroduce the `direction` or `scrolling` parameter to `st.container` . I believe containers are the right place for layout options, since they can be nested into columns and combine to create very rich and intuitive horizontal and vertical layout options, without much cognitive load. \r\n\r\n### Additional Context\r\n\r\nToday, creating something similar to this requires a lot of column nesting which in my experience is tough to make readable at all screen sizes, and is very annoying to develop for.\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-9544)\n"
      },
      {
        "user": "jrieke",
        "body": "Hey, thanks for the suggestion! We just started looking at new layout options, and indeed, one idea is to extend `st.container` as a basic building block for layout and turn it into something like a simplified flexbox. Haven't considered horizontal scrolling yet but will have a look!"
      },
      {
        "user": "Alex-S-H-P",
        "body": "For those who don't want to wait for this to get out (there are a lot of things in the backlog), I'm working on it in one of my app and my solution was to include a css that modifies the appearance of the streamlit element with the key `mykey`, which is the key of my section (I have it templated in Python where I call `st.write(css.format(...))`).\n\n```css\ndiv.st-key-mykey {{\n    display: flex;\n    flex: 1 1 0%;\n    height: 100%;\n    max-height: 100%;\n    position: relative;\n    gap: 0.5rem;\n    overflow-x: scroll;\n    flex-direction: row;\n}}\n\ndiv.st-key-mykey>div {{\n    // Size of the sub elements is hard coded here, because scaling is out of whack\n}}\n```\n\nIt's not perfect, but it is much better."
      }
    ]
  },
  {
    "issue_number": 7069,
    "title": "Autocomplete for chat_input",
    "author": "liunux4odoo",
    "state": "open",
    "created_at": "2023-07-25T08:34:39Z",
    "updated_at": "2025-06-10T19:17:02Z",
    "labels": [
      "type:enhancement",
      "feature:st.chat_input"
    ],
    "body": "### Problem\n\nThe new `chat_input` element is great for chatbot apps. It would be very useful if it can give user suggestions when inputting. \n\nSome feature requests (#6604, #5602) were submitted for the `text_input` element. And then they were suggested to use `streamlit-searchbox` as alternative.\n\nSince official `chat_input` has been shinny released, I think it's good timing to bring the autocomplete feature to it.\n\nThanks.\n\n\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-7069)",
    "comments": [
      {
        "user": "jrieke",
        "body": "Yup, we are thinking about this! Do you have a concrete use case in mind / which suggestions you'd like to show? The more detail the better!"
      },
      {
        "user": "imClumsyPanda",
        "body": "@jrieke Hope streamlit can support some use case like discord or telegram bot, for example when I input ‚Äú/‚Äù, there will show a list of command starts with ‚Äú/‚Äù like ‚Äú/clear‚Äù, ‚Äú/upload‚Äùand shown with caption of the command.\n\nThe command list and caption can be a dict defined with st.chat_input."
      },
      {
        "user": "liunux4odoo",
        "body": "@jrieke Thanks for quick concerning.\r\n\r\nMaking chat_input behave like `streamlit-searchbox` would be sufficient.\r\n\r\nFor example:\r\n```\r\nst.chat_input('please input your question', autocomplete: List[str]=[])\r\n```\r\nWhen user is inputing, the input widget dropdown a list of strings which filtered dynamically by the current input, then user can make a quick selection from the list.\r\n\r\n"
      }
    ]
  },
  {
    "issue_number": 11583,
    "title": "Layered Altair plots not visible when interacting with streamlit input widgets",
    "author": "SeeBastion524",
    "state": "open",
    "created_at": "2025-06-10T10:53:55Z",
    "updated_at": "2025-06-10T16:25:40Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.altair_chart"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe combination of streamlit input widgets and plotiing layered altair charts did not work for me properly. Mostly observed when I use layered altair charts to add horizontal line with mark_rule() or mark_rect(). The source dataframe for mark_rule() or mark_rect() is not the same like for the plot data.\n\n![Image](https://github.com/user-attachments/assets/32d06e4f-1c9e-45dd-adb7-9ac3c2c26083)\n\n![Image](https://github.com/user-attachments/assets/7e674d1b-1b23-44d5-8d73-b837efd7cc30)\n\n![Image](https://github.com/user-attachments/assets/d7e66e41-e262-4e66-9a7f-1a9fe4d68b76)\n\n### Reproducible Code Example\n\n```Python\nimport altair as alt\nimport pandas as pd\nimport streamlit as st\nfrom vega_datasets import data\n\nst.set_page_config(\n    layout=\"wide\",\n)\n\nsource = data.seattle_weather()\n\nwith st.sidebar:\n    data_toggle = st.toggle(\"Data\")\n\nif data_toggle:\n    data_list = [\"date\", \"temp_max\", \"precipitation\"]\nelse:\n    data_list = [\"date\", \"temp_min\", \"temp_max\", \"wind\", \"precipitation\"]\n\ndata = pd.melt(source[data_list], id_vars=['date'], var_name='signal',\n                                value_name='Value')\n\n_base = alt.Chart(data).encode(\n    x=alt.X('date:T', axis=alt.Axis(title=None, format=\"%d-%b-%Y\", labelAngle=25, labelBound=True, labelAlign=\"left\")),\n)\n\n_area = _base.mark_line().encode(\n    y=alt.Y('Value:Q'),\n    color=\"signal:N\",\n)\n\n_hline = alt.Chart(pd.DataFrame({'y': [20]})).mark_rule(color='red', strokeDash=[5, 5]).encode(y='y')\n\nwith st.sidebar:\n    on = st.toggle(\"Line?\")\n\nif on:\n    chart = alt.layer(_hline, _area)\nelse:\n    chart = alt.layer(_area)\n\ntab1, tab2 = st.tabs([\"Streamlit theme (default)\", \"Altair native theme\"])\nwith tab1:\n    st.altair_chart(chart, theme=\"streamlit\", use_container_width=True)\nwith tab2:\n    st.altair_chart(chart, theme=None, use_container_width=True)\n```\n\n### Steps To Reproduce\n\n1. Run the streamlit app: streamlit run [app.py]\n2. In sidebar Toggle on \"Line?\"\n3. In sidebar toggle on \"Data\"\n4. In sidebar toggle off \"Data\"\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11583)\n\n### Expected Behavior\n\nThe expected behaviour is obvious. The chart should be shown like in the initial run.\n\n### Current Behavior\n\nThere is no error message. The altair chart area is empty. if you hover over the empty chart area with the mouse, the chart is shown, but x-, y-labels and legend are cutted. This behaviour is observed for both the streamlit theme and the native altair theme.\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.10.13\n- Operating System: Wondows 11\n- Browser: Microsoft Edge\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11583)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @SeeBastion524 , thank you for filing this issue! The code you've provided for reproducing has been helpful. So far I have not been able to reproduce this locally, but I am able to sometimes reproduce it in our [Streamlit Issues app here](https://issues.streamlit.app/?issue=gh-11583). This will require a bit more investigation on root cause. I appreciate you bringing this to our attention!"
      }
    ]
  },
  {
    "issue_number": 11551,
    "title": "Page doesn't scroll to anchor link on first load",
    "author": "sfc-gh-tteixeira",
    "state": "closed",
    "created_at": "2025-06-06T19:45:37Z",
    "updated_at": "2025-06-10T15:50:47Z",
    "labels": [
      "type:bug",
      "type:regression",
      "status:confirmed",
      "priority:P2"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen visiting an app with a URL that has an anchor link (e.g. `foo.com/myapp#myanchor`) Streamlit should scroll to the anchor `#myanchor` on the page. This is not happening today.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nst.header(\"My title 1\")\nfor _ in range(30):\n    st.text(\"blah \" * 100)\n\nst.header(\"My title 2\")\nfor _ in range(30):\n    st.text(\"blah \" * 100)\n```\n\n### Steps To Reproduce\n\n1. Run the code above\n1. A Streamlit app will load in a browser tab \n1. Open a new browser tab (it has to be a new tab!)\n1. Navigate to the URL http://localhost:8501/#my-title-2 \n\n### Expected Behavior\n\nThe app loads and the viewport is scrolled to \"My title 2\".\n\n### Current Behavior\n\nThe app loads but the viewport is at the top, at \"My title 1\".\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45\n- Python version: 3.13\n- Operating System: MacOS\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11551)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Thank you @sfc-gh-tteixeira for filing this issue! The reproducible code here is very helpful!\n\nI am able to reproduce this issue most of the time. My current theory is that this is a race condition likely stemming from the React `createRoot` migration, which landed in Streamlit 1.44.0. Will continue to investigate and work towards a fix. Thanks again!"
      },
      {
        "user": "sfc-gh-tteixeira",
        "body": "If you're investigating this, I think this bug might be related: https://github.com/streamlit/streamlit/issues/7830"
      }
    ]
  },
  {
    "issue_number": 11557,
    "title": "data_editor: Allow disabled cell to be entered when adding a new row.",
    "author": "kaizen63",
    "state": "open",
    "created_at": "2025-06-07T08:14:29Z",
    "updated_at": "2025-06-10T10:03:17Z",
    "labels": [
      "type:enhancement",
      "feature:st.data_editor"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nMy usecase (simplified):\n\nI pull a table from a database into a data editor. Columns ID (Primary Key), NAME (Alternate Key), DISPLAY_NAME.\nThe data_editor num_rows is st to ‚Äúdynamic‚Äù.\n\nI set the NAME column in the data editor to disabled=True because nobody should update the alternate key once it is created. Some other systems may depend on it.\n\nBut when creating a new row in the data_editor I have to enter it, because its a key, but this is blocked by the disabled=True flag\n\n\n\n### Why?\n\nIt blocks me from using the data_editor as a true database table editor\n\n### How?\n\nSuggestion for column config flags:\n\nExisting row: The disabled flag should decide wether it can be modified or not\nNew row: The required flag should overwrite the disabled flag. If required == True, the cell should be editable, even if disabled == True.\nif required == False and disabled == False, user should not be able to enter data into the new cell.\n\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11557)\n"
      },
      {
        "user": "DirkRemmers",
        "body": "I would like to see this as well! It might relate [a ticket I submitted recently](https://github.com/streamlit/streamlit/issues/11503#issue-3112868175\n) as well about row specific settings for column configuration."
      }
    ]
  },
  {
    "issue_number": 11544,
    "title": "Access post request object",
    "author": "kstan79",
    "state": "open",
    "created_at": "2025-06-06T10:20:37Z",
    "updated_at": "2025-06-10T09:59:32Z",
    "labels": [
      "type:enhancement",
      "feature:query-params"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nI wish to embed streamlit into existing web app using frame. \n\nStreamlit can embed into my web app well how every I wish to submit a lot of long variable.  The suitable way seems is use http form post data into streamlit url. \n\nI would like to have ideal how to get the http post data in streamlit in this case.\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11544)\n"
      },
      {
        "user": "jrieke",
        "body": "Are query params not an option? I assume because it's too much data? And can you describe a bit what kind of data you want to send to your Streamlit app and how that relates to the page that embeds the app?"
      },
      {
        "user": "kstan79",
        "body": "I have access_token and multiple credential wish to pass over, which clearly shouldn't use query para"
      }
    ]
  },
  {
    "issue_number": 8961,
    "title": "Streamlit Component returning a value results in an Error in v1.36 (worked before in v1.35",
    "author": "flucas96",
    "state": "closed",
    "created_at": "2024-06-22T12:16:19Z",
    "updated_at": "2025-06-10T08:42:25Z",
    "labels": [
      "type:bug",
      "status:confirmed"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHey,\r\n\r\nwhen updating to version v1.36 I have noticed that my Tree Select Component does not work anymore. Anytime I select a value I get this error:\r\n![image](https://github.com/streamlit/streamlit/assets/59033065/121cd553-7546-4113-b9ff-38e2e1828301)\r\n\r\n\r\nGoing back to v1.35 solved the issue. Apparently I am also not the only one with the problem as someone has asked me about it the forum post about the component (https://discuss.streamlit.io/t/new-component-tree-select/36455/3) \r\n\r\nSince Streamlit Cloud is still on v1.35 you can see a working exampe here: https://flucas96-streamlit-tree-select-example-app-s0vkjx.streamlit.app/\r\n\n\n### Reproducible Code Example\n\n```Python\n#This code results in an error when selecting a value in tree selector when Streamlit is on version v1.36 - v1.35 works fine. \r\n\r\nimport streamlit  as st\r\n\r\nfrom st_ant_tree import st_ant_tree\r\n\r\n\r\nst.set_page_config(layout=\"wide\")\r\n\r\n\r\ntree_data = [\r\n  {\r\n    \"value\": \"parent 1\",\r\n    \"title\": \"\"\"Test <i>  <b style=\"color:green\"> parent HTML</b><i> test\"\"\",\r\n    \"children\": [\r\n      {\r\n        \"value\": \"parent 1-0\",\r\n        \"title\": \"parent 1-0\",\r\n        \"children\": [\r\n          {\r\n            \"value\": \"leaf1\",\r\n            \"title\": \"leaf1\",\r\n          },\r\n          {\r\n            \"value\": \"leaf2\",\r\n            \"title\": \"leaf2\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        \"value\": \"parent 1-1\",\r\n        \"title\": \"parent 1-1\",\r\n        \"children\": [\r\n          {\r\n            \"value\": \"leaf3\",\r\n            \"title\": \"\"\"<i> <b style=\"color:green\">leaf3</b> </i>\"\"\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\n\r\n\r\nvalue = st_ant_tree(treeData=tree_data\r\n)\r\n\r\n#write streamlit version\r\nst.write(\"Streamlit Version: \" , st.__version__)\r\nst.write(\"Selected Value: \", value)\n```\n\n\n### Steps To Reproduce\n\n1. Update Streamlit to v1.36\r\n2. Select a value from the tree selector --> Error\r\n3. Downgrade Streamlit to v1.35\r\n4. Select a value from the tree selector --> No Error\n\n### Expected Behavior\n\nI would expect that the return value in v1.36 is the same as in v1.35 and that no error occurs.\n\n### Current Behavior\n\nError message:\r\nTypeError: 'str' object is not callable\r\nTraceback:\r\nFile \"C:\\Users\\FL\\Documents\\_dev\\Streamlit Components\\st_ant_tree\\venv\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 567, in _run_script\r\n    self._session_state.on_script_will_rerun(\r\nFile \"C:\\Users\\FL\\Documents\\_dev\\Streamlit Components\\st_ant_tree\\venv\\Lib\\site-packages\\streamlit\\runtime\\state\\safe_session_state.py\", line 66, in on_script_will_rerun\r\n    self._state.on_script_will_rerun(latest_widget_states)\r\nFile \"C:\\Users\\FL\\Documents\\_dev\\Streamlit Components\\st_ant_tree\\venv\\Lib\\site-packages\\streamlit\\runtime\\state\\session_state.py\", line 514, in on_script_will_rerun\r\n    self._call_callbacks()\r\nFile \"C:\\Users\\FL\\Documents\\_dev\\Streamlit Components\\st_ant_tree\\venv\\Lib\\site-packages\\streamlit\\runtime\\state\\session_state.py\", line 527, in _call_callbacks\r\n    self._new_widget_state.call_callback(wid)\r\nFile \"C:\\Users\\FL\\Documents\\_dev\\Streamlit Components\\st_ant_tree\\venv\\Lib\\site-packages\\streamlit\\runtime\\state\\session_state.py\", line 271, in call_callback\r\n    callback(*args, **kwargs)\n\n### Is this a regression?\n\n- [X] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.36\r\n- Python version: 3.11.3\r\n- Operating System: Windows & Linux\r\n- Browser: Chrome & Edge\r\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Visits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fstreamlit%2Fstreamlit%2Fissues%2F8961&title=visits&edge_flat=false)\n"
      },
      {
        "user": "sfc-gh-jcarroll",
        "body": "@sfc-gh-braethlein can you take a look at this?"
      },
      {
        "user": "raethlein",
        "body": "I will need to have a closer look on Monday, but I had a quick look and _maybe_ it's because the st-tree component seem to have a an own `on_change` listener and we added one to Streamlit natively in 1.36. If this is the case, either the custom component would need to change the name or we have to fix ours. Would need to verify this though. "
      }
    ]
  },
  {
    "issue_number": 861,
    "title": "Ability to write cookies",
    "author": "tconkling",
    "state": "open",
    "created_at": "2019-12-18T17:40:07Z",
    "updated_at": "2025-06-10T02:32:07Z",
    "labels": [
      "type:enhancement",
      "feature:st.context"
    ],
    "body": "In my hackathon project, which was a dashboard that used auth, I really wanted a way to persist an authToken across multiple sessions for the same user.\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-861)",
    "comments": [
      {
        "user": "demmerichs",
        "body": "I would also love this feature. For the moment, does anyone know a good workaround? Usecase is some manager instance that should be shared across all browser sessions and persist as long as the streamlit app is running. I guess this is something similar to st.cache but with no option of clearing it. (maybe a flag for st.cache named persistent?)"
      },
      {
        "user": "ZupoLlask",
        "body": "Hi guys!\r\n\r\nPlease prioritize this! üëçüòä"
      },
      {
        "user": "frankhuurman",
        "body": "I'm so in need of a solution like this to not have the user enter credentials each time after a refresh. Would love it!\r\nThe sessionstate object can only do so much between radio button pages but keeping state after a refresh isn't one of them :)"
      }
    ]
  },
  {
    "issue_number": 11330,
    "title": "st.context.timezone becomes empty str (\"\") after reloading new saved changes",
    "author": "RubenCata",
    "state": "closed",
    "created_at": "2025-05-12T14:39:12Z",
    "updated_at": "2025-06-09T22:54:06Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:config",
      "feature:st.context"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen using `st.context.timezone` in a Streamlit app, the component initially returns the correct timezone string of the user's browser.\nHowever, after making any change to the associated `.py` files and saving them, the page refreshes automatically, causing `st.context.timezone` to become `\"\"`.\nIf you refresh the page by interacting with other Streamlit components, like a button, it recovers it's initial correct state.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\nst.set_page_config(\n    page_title=\"Streamlit App\",\n)\n\nst.write(f\"Timezone: {type(st.context.timezone).__name__}, {st.context.timezone}\")\nst.write(st.context.timezone == \"\")\nst.button(\"Click me!\")\n```\n\n### Steps To Reproduce\n\n1. Create a Streamlit app with the provided code snippet.\n2. Run the app and observe that `st.context.timezone` returns the correct timezone string (e.g., Europe/Madrid).\n3. Make any change to the `.py` file, such as adding a blank line, and save the file.\n4. Observe the automatic page refresh and check the value returned by `st.context.timezone`.\n5. Click the button or refresh the page to recover the initial correct timezone.\n\n### Expected Behavior\n\nAfter making changes to the `.py` files and saving them, the page should refresh automatically, and `st.context.timezone` should consistently return the correct timezone string of the user's browser.\n\n### Current Behavior\n\nAfter saving changes to the `.py` files, the page refreshes automatically, causing `st.context.timezone` to return `\"\"`. \nThe correct timezone is restored by the page.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.0\n- Python version: 3.10.11\n- Operating System: Windows 11\n- Browser: Chrome and Edge\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11330)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @RubenCata, thanks for your submission! I wasn't able to repro your issue using the code above - its returning my correct timezone despite python file changes, reruns, etc.\nSo running just the code above with a python file change returns `st.context.timezone == \"\"`?\nCould you provide any additional info? "
      },
      {
        "user": "RubenCata",
        "body": "Here you have a demo of the issue that I described before. Hope it helps!\n\n![Image](https://github.com/user-attachments/assets/6d764eca-606f-47aa-bc50-7489b441ecf0)"
      }
    ]
  },
  {
    "issue_number": 11570,
    "title": "`make clean` unexpectedly deletes tracked files",
    "author": "sfc-gh-bnisco",
    "state": "closed",
    "created_at": "2025-06-09T20:40:35Z",
    "updated_at": "2025-06-09T21:37:32Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nRunning `make clean` results in the deletion of tracked files in [`./e2e_playwright/config/.streamlit`](https://github.com/streamlit/streamlit/tree/develop/e2e_playwright/config/.streamlit).\n\n### Reproducible Code Example\n\n```Python\nmake clean\n```\n\n### Steps To Reproduce\n\n1. Run `make clean`\n2. Notice that `./e2e_playwright/config/.streamlit` was deleted, despite it being a tracked directory\n\n### Expected Behavior\n\n`./e2e_playwright/config/.streamlit` is not deleted\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System: MacOS\n- Browser:\n\n\n### Additional Information\n\nThis is probably new because this PR https://github.com/streamlit/streamlit/pull/10173 added this new directory, which didn't exist prior.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11570)\n"
      }
    ]
  },
  {
    "issue_number": 8901,
    "title": "Reconnect to existing sessions instead of creating new upon unclean websocket close.",
    "author": "vjr",
    "state": "open",
    "created_at": "2024-06-14T08:55:11Z",
    "updated_at": "2025-06-09T20:10:15Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "area:server"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nSimilar to the issues linked, if the network connection is intermittent/flaky the existing session is lost and a new one created, causing unpleasant/unexpected user experience.\r\n\r\nSee:\r\n\r\nhttps://github.com/streamlit/streamlit/issues/1386\r\nhttps://github.com/streamlit/streamlit/issues/1628\r\nhttps://github.com/streamlit/streamlit/issues/6442\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\r\nimport time\r\n\r\nif \"counter\" not in st.session_state:\r\n    st.session_state.counter = 0\r\n\r\nst.write(f\"Run count = {st.session_state.counter}\")\r\n\r\nst.session_state.counter += 1\r\n\r\ntime.sleep(3)\r\n\r\nst.rerun()\n```\n\n\n### Steps To Reproduce\n\n1. Run the reproducible code example provided in streamlit on one server host.\r\n2. Observe the \"Run count = X\" increase steadily in a client host different from the server host.\r\n3. Disable the client network connection and wait for some arbitrary time duration.\r\n4. Re-enable the client network connection.\r\n5. Observer the \"Run count = X\" start from zero again.\n\n### Expected Behavior\n\nThe user session should be restored so they may continue where they left off in the face of their network/internet connection being flaky (packet drops, high latency etc) causing unclean websocket close behind the scenes.\n\n### Current Behavior\n\nObserve streamlit warning log \"Session with id %s is already connected! Connecting to a new session.\" and user loses their streamlit session and starts afresh.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.35\r\n- Python version: 3.10\r\n- Operating System: Windows 11\r\n- Browser: Chrome/Firefox\r\n\n\n### Additional Information\n\nI have been able to make a potentially naive code change (will link a PR as a proposal to this issue) which I am unable to run against full test suite because I have been unable to build the streamlit project. I have been able to test partially by modifying the python code in my installed streamlit venv.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-8901)\n"
      },
      {
        "user": "kmcgrady",
        "body": "Hey @vjr Thank you for the issue. We implemented some changes in the past that will reconnect the session. We specify 2 minutes as the timeout [source](https://github.com/streamlit/streamlit/pull/5856/files#diff-bf73120ebafb93fc2f55c8ba0c54896a1e1c72d5c99e7ef4931f615b38b908a3R39).\r\n\r\n Can you confirm that these issues are within the timeout window?"
      },
      {
        "user": "vjr",
        "body": "Yes I confirm.\n\nIt appears to me the session is preserved and it is actually \"re identified\" but instead of reconnect it's replaced with a new one.\n\nMy PR seems to address this by reconnecting to the existing session."
      }
    ]
  },
  {
    "issue_number": 11012,
    "title": "Preserve session state (e.g. in file, database, or localstorage)",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-04-02T22:47:56Z",
    "updated_at": "2025-06-09T19:46:25Z",
    "labels": [
      "type:enhancement",
      "feature:query-params",
      "feature:st.session_state"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nAdd a mechanism to preserve widget state or anything in `st.session_state` across sessions, e.g. by putting it into a local file, or a small database that we run alongside the Streamlit app, or an external database, or localstorage. \n\n### Why?\n\nThe most common use case here is being able to close the tab, come back to it later, and pick up where you left off. Also somewhat related is preserving session state across multiple pages of a multipage app (see #5813), even though I think we should find a better solution for this. \n\n### How?\n\nI think we should look at whether we can find a solution that relates to syncing widget state to query params (see #302) since they basically do the same thing, just storing the values in different places. Maybe something like a parameter on every widget `sync=\"query_params\"|\"database\"|\"localstorage\"|...`.\n\nIt would also be great to make this extensible, so that experienced devs can configure their own places where the session state should be stored (e.g. an external database). \n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11012)\n"
      },
      {
        "user": "stefanverbeeck",
        "body": "Being able to save the session state as a whole would be a life saver.\n\nWe are trying to use Streamlit as a replacement to PowerBI or Tableau.\nBoth these tools offers users to \"save\" sessions (called Bookmarks or Custom Views respectively).\nI tried to replicate that feature in Streamlit by setting the default for multiselect widgets with lists that are stored in the browser cookies. Got it working for selectbox too, but more complex because it uses a numeric index to define the item etc. Glitches out sometimes sadly...\n\nSomething more stable and natively supported by Streamlit would be way better."
      },
      {
        "user": "arct0r",
        "body": "Is there no way to achieve this even without official support?"
      }
    ]
  },
  {
    "issue_number": 6302,
    "title": "Leading first line spaces trimmed by `st.code()`",
    "author": "ya55en",
    "state": "closed",
    "created_at": "2023-03-13T10:21:16Z",
    "updated_at": "2025-06-09T18:42:48Z",
    "labels": [
      "type:bug",
      "feature:markdown",
      "status:confirmed",
      "priority:P3",
      "feature:st.code"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nRendering a code block using `st.code()` or `st.markdown()` where the block's first line has leading spaces results in these leading spaces (of the first line only) trimmed.\r\n\r\n\r\n### Reproducible Code Example\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-6302)\r\n\r\n```Python\r\nimport streamlit as st\r\n\r\nblock = \"\"\"\r\n    line 1\r\n    line 2\r\n    line 3\r\n\"\"\"\r\n\r\nst.code(block)\r\nst.markdown(f\"```\\n{block}\\n```\")\r\n```\r\n\r\n### Steps To Reproduce\r\n\r\n1. Paste the above example into a python file (like `example.py`)\r\n2. Run it with Streamlit (e.g. `streamlit run example.py`)\r\n3. Point your browser to the URL listed.\r\n\r\n### Expected Behavior\r\n\r\nThe code block should render as\r\n\r\n```\r\n    line 1\r\n    line 2\r\n    line 3\r\n```\r\n\r\n### Current Behavior\r\n\r\nBlock is rendered as\r\n\r\n```\r\nline 1\r\n    line 2\r\n    line 3\r\n```\r\n\r\n### Is this a regression?\r\n\r\n- Not sure.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.20.0\r\n- Python version: 3.10.10\r\n- Operating System: Ubuntu 22.04\r\n- Browser: Firefox 110.0.1\r\n- Virtual environment: poetry 1.3-built\r\n",
    "comments": [
      {
        "user": "sfc-gh-kbregula",
        "body": "I'm wondering if this issue hasn't been resolved by PR: [Add line numbers to st.code #6042](https://github.com/streamlit/streamlit/pull/6042). What do you think?\r\n"
      },
      {
        "user": "ya55en",
        "body": "@sfc-gh-kbregula: I guess this has not yet been released on pypi.org ... how can I replace the pip-installable dependency with the latest github source?"
      },
      {
        "user": "vdonato",
        "body": "Hey @ya55en, the https://pypi.org/project/streamlit-nightly/ PyPI project can be used to test out changes merged to `develop` before they appear in official releases (the binary after running `pip install streamlit-nightly` is still just `streamlit`)."
      }
    ]
  },
  {
    "issue_number": 10126,
    "title": "`st.close()` or `st.end()` to close or mark the end of a container and remove stale elements (like a frontend version of `st.stop()`)",
    "author": "sfc-gh-dmatthews",
    "state": "open",
    "created_at": "2025-01-07T20:23:29Z",
    "updated_at": "2025-06-09T17:29:30Z",
    "labels": [
      "type:enhancement",
      "area:utilities"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nCall `st.close()` to immediately discard all existing elements that follow (within whatever container context the command was called). e.g. Call `st.close()` within `st.chat_message()` to discard any remaining (usually stale) elements beyond that point.\r\n\r\n### Why?\r\n\r\nWith dynamic pages and long computation times come stale elements. Especially in LLM apps that include streamed content, app developers need to be mindful of transient elements that may linger in stale form while a script run completes. When you reduce the total number of elements in a container from one script run to the next, the extra elements do not get discarded until the end of the script run. This necessitates extra boilerplate code to handle a decrease in total elements, especially when run times are longer than a second (the fade time on stale elements).\r\n\r\n### How?\r\n\r\nMVP: `st.close()` could discard all following frontend elements within whatever container context its called (instead of Streamlit waiting for the end of the script run to know it's done writing to the container).\r\n\r\nOptional: A parameter could modify how widgets are discarded if they exist (to fully clean them up and make the next call \"like new\" or merely discard the frontend as if it was replaced by something else, holding off until the end of the script run to discard its state).\r\n\r\nI imagine you could still \"reopen\" the container by writing to it again. Also, a configuration option could be set to implicitly utilitize `st.close()` when leaving a container's context. (e.g. When using `with` notation, Streamlit will \"close\" the container when you leave the context manager.)\r\n\r\n### Additional Context\r\n\r\nRelated: #5044, #2820, #9239",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-10126)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "In theory, that could work to allow users to fix stale issues themselves. The main issue causing stale elements is that we don't know when the last element will be inserted into the container. That's why we must wait until the full script finishes to clean up removed elements. If we had something like this utility, it would be possible for the user to tell the frontend sooner that a container has been \"closed\" (no more elements will be inserted) -> this would allow an optimized rendering. A good name here could also be  `close()`."
      },
      {
        "user": "lukasmasuch",
        "body": "It is a bit related to this feature request (but a bit different mechanic to achieve a similar result): https://github.com/streamlit/streamlit/issues/6063 "
      }
    ]
  },
  {
    "issue_number": 11083,
    "title": "Exception messages should be one-click to copy",
    "author": "sfc-gh-wschmitt",
    "state": "closed",
    "created_at": "2025-04-11T15:59:10Z",
    "updated_at": "2025-06-09T16:47:20Z",
    "labels": [
      "type:enhancement",
      "good first issue",
      "feature:st.exception"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nIn the age of vibe coding, my code often generates exceptions. When my app throws an exception, it should be easy to copy-to-clipboard with one click. \n\n### Why?\n\nI spend a lot of time copying exceptions out of apps to figure out what to do with them. Loveable has a very sophiscated flow of pushing exceptions into your LLM so that you can fix them and I am often implementing a manual version of that. \n\nHowever, I need to support a variety of use-cases such as:\n* pasting the exception into the LLM my company has approved, which is not always in the same place as my streamlit app\n* pasting exceptions into bug tickets\n* putting the exception into my exception menagerie \n\n### How?\n\nOne of those hover clipboard buttons on the red thrown exception box would be awesome\n\n<img width=\"571\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4bdfeb04-90d3-42fc-81e9-ad8170fbe231\" />\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11083)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @sfc-gh-wschmitt I agree, this would be great to have!"
      },
      {
        "user": "sfc-gh-jrieke",
        "body": "Agree that this would be cool! An alternative to using a hover icon like shown above could be to just add a \"Copy\" button next to the \"Ask Google\"/\"Ask ChatGPT\" links we show below the exception now. Would be a bit easier from a design perspective since we don't need to figure out anything new. "
      }
    ]
  },
  {
    "issue_number": 10929,
    "title": "With date range selected in `st.date_input`, hovered dates should change color",
    "author": "sfc-gh-pchiu",
    "state": "closed",
    "created_at": "2025-03-26T23:14:11Z",
    "updated_at": "2025-06-09T16:25:35Z",
    "labels": [
      "type:bug",
      "good first issue",
      "status:confirmed",
      "priority:P4",
      "feature:st.date_input"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n\n### Summary\n\nWhen `st.date_input` has a date range already selected, hovering on the dates within the said range highlights the background but not the text.\n\nhttps://github.com/user-attachments/assets/67d460d4-221e-4493-8022-e0ba26e11858\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-10929)\n\n```Python\nimport streamlit as st\n\nst.date_input(\"Range, no date\", [])\n```\n\n### Steps To Reproduce\n\n1. Open the date input dialog\n2. Pick a date range (once end date is selected the dialog should close)\n3. Re-open date input dialog\n4. Hover over dates within the range and observe the bug\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10929)\n"
      },
      {
        "user": "Bernardo1008",
        "body": "Hi!,Can I try to do this issue? It's my first time contributing to the project."
      },
      {
        "user": "AnuvabNayak",
        "body": "I can try working on this issue! It will my first contribution."
      }
    ]
  },
  {
    "issue_number": 10907,
    "title": "`st.dialog` shows stale elements from previous dialog",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-03-25T18:37:20Z",
    "updated_at": "2025-06-09T15:18:40Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.dialog"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nIf you have two separate dialogs in your app, opening the first dialog, closing it, and then opening up the second dialog can lead to stale elements from the first dialog showing up in the second dialog. This only happens if the second dialog takes a while to load. \n\nhttps://github.com/user-attachments/assets/9b2e858b-9411-4f1c-a05d-bbe2ed4f794d\n\n\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-10907)\n\n```Python\nimport streamlit as st\nimport time\n\n@st.dialog(\"Dialog 1\")\ndef show_dialog_1():\n    st.write(\"Dialog 1 content\")\n    st.text_input(\"Text input\")\n\n@st.dialog(\"Dialog 2\")\ndef show_dialog_2():\n    time.sleep(3)\n    st.write(\"Dialog 2 content\")\n\n\nif st.button(\"Open dialog 1\"):\n    show_dialog_1()\n\nif st.button(\"Open dialog 2\"):\n    show_dialog_2()\n```\n\n### Steps To Reproduce\n\n1. Open the first dialog\n2. Close it\n3. Open the second dialog\n\n### Expected Behavior\n\nNo content from `show_dialog_1` shows up in `show_dialog_2` since these are independent dialogs. \n\n### Current Behavior\n\nSee video. \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\nI think the cleanest solution might be to clear all elements from the dialog when it gets closed or opened. \n",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10907)\n"
      },
      {
        "user": "raethlein",
        "body": "The reason for this is that the two dialogs both use the `event` deltagenerator path. When you dismiss the dialog via the `X` button, it right now is a UI-only interaction which does not trigger our cleanStaleElements logic in the frontend, as that is only triggered by the backend. If #8507 is implemented, I assume this issue would go away when clicking the `X` button leads to a rerun.\nAs a workaround, you could use `st.empty` in the second dialog (one call for each element that you need to overwrite from the previous dialog):\n\n```python\nimport streamlit as st\nimport time\n\n@st.dialog(\"Dialog 1\")\ndef show_dialog_1():\n    st.write(\"Dialog 1 content\")\n    st.text_input(\"Text input\")\n\n@st.dialog(\"Dialog 2\")\ndef show_dialog_2():\n  st.empty()\n  st.empty()\n  time.sleep(3)\n  st.write(\"Dialog 2 content\")\n\n\nif st.button(\"Open dialog 1\"):\n    show_dialog_1()\n\nif st.button(\"Open dialog 2\"):\n    show_dialog_2()\n```\n\nSince we always have only a single dialog at the same time, I guess we could trigger a cleanStaleElements whenever we trigger an `openDialog` command. However, this would require some custom logic. \nIn general I believe we have to think more about allowing such targeted cleanups / updates. With the upcoming lazyloading of DataFrames, we pave the way for targeted updates. I hope we can build an advanced API with it which will allow us implementing these kinds of updates in a reusable way and perhaps expose it to users at one point to optimize interacting with the layout and rendering in advanced cases. Sometimes I as a user know that certain elements will be gone after performing a specific action, whereas Streamlit has to wait for the execution to finish - unless we build some more advanced runtime - so the user could manually trigger cleanups."
      },
      {
        "user": "lukasmasuch",
        "body": "> perhaps expose it to users at one point to optimize interacting with the layout and rendering in advanced cases. Sometimes I as a user know that certain elements will be gone after performing a specific action, whereas Streamlit has to wait for the execution to finish - unless we build some more advanced runtime - so the user could manually trigger cleanups.\n\nRelated feature request on this aspect: https://github.com/streamlit/streamlit/issues/10126"
      }
    ]
  },
  {
    "issue_number": 11502,
    "title": "st.fragment breaks sticky positioning of chat input field",
    "author": "csipapicsa",
    "state": "open",
    "created_at": "2025-06-03T07:09:22Z",
    "updated_at": "2025-06-09T11:46:19Z",
    "labels": [
      "type:enhancement",
      "feature:st.chat_input",
      "feature:st.fragment"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHi,\n\nI've run into an issue when trying to use st.fragment in combination with st.chat_input. It seems that when wrapping my simple chat logic inside a @st.fragment, the chat input no longer sticks to the bottom of the page as expected. \n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\n# using fragment breaks sticky positioning of the chat input field\n\n@st.fragment\ndef simple_chat_test():\n    st.title(\"Simple Chat Test\")\n\n    if \"test_messages\" not in st.session_state:\n        st.session_state.test_messages = []\n        st.session_state.test_messages.append({\n            \"role\": \"assistant\", \n            \"content\": \"Hi! I'm a simple test bot. I'll respond 'Got it' to everything you say. Try typing something!\"\n        })\n\n    for message in st.session_state.test_messages:\n        with st.chat_message(message[\"role\"]):\n            st.markdown(message[\"content\"])\n\n    with st.expander(\"Test Content (to make page longer)\", expanded=False):\n        for i in range(20):\n            st.write(f\"This is test line {i+1}\")\n\n    if prompt := st.chat_input(\"Type anything here...\"):\n        st.session_state.test_messages.append({\"role\": \"user\", \"content\": prompt})\n        with st.chat_message(\"user\"):\n            st.markdown(prompt)\n\n        response = \"Got it\"\n        st.session_state.test_messages.append({\"role\": \"assistant\", \"content\": response})\n        with st.chat_message(\"assistant\"):\n            st.markdown(response)\n\n        st.rerun()\n\nif __name__ == \"__main__\":\n    simple_chat_test()\n```\n\n### Steps To Reproduce\n\nUse st.fragment\n\n### Expected Behavior\n\nst.chat_input stays fixed to the bottom of the page (sticky), as it does when running outside of a fragment.\n\n### Current Behavior\n\n The chat input is no longer sticky\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.0\n- Python version: 3.12.1\n- Operating System: Win 11\n- Browser:  Chrome 137.0.7151.55\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11502)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hello @csipapicsa , thank you for filing this issue!\n\nI can confirm that I am seeing the same behavior as you with the provided code. Thank you for providing such a great reproducible example!\n\nAs a workaround in the meantime, not using a fragment will render the chat layout as expected."
      },
      {
        "user": "lukasmasuch",
        "body": "Another workaround would be to use `st._bottom.chat_input()` to enforce the chat input to be placed into the bottom container. chat input is only placed in the bottom if its used in the main page container. A fragment uses a dedicated container for its elements -> this is causing the chat input to be placed in-line. \n\nRelated feature request to expose the bottom container as an official part of the API:  https://github.com/streamlit/streamlit/issues/10722\n"
      }
    ]
  },
  {
    "issue_number": 10637,
    "title": "Enum formatting in TextColumn does not work with a styled data frame",
    "author": "FabienLariviere",
    "state": "closed",
    "created_at": "2025-03-04T12:50:49Z",
    "updated_at": "2025-06-09T11:42:59Z",
    "labels": [
      "type:bug",
      "feature:st.dataframe",
      "status:confirmed",
      "priority:P4"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nExpected enum value, but after pandas styling returns enum object\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-10637)\n\n```Python\nimport enum\nimport pandas as pd\nimport streamlit as st\n\nclass Status(str, enum.Enum):\n    success = \"Success status\"\n    running = \"Running status\"\n    error = \"Error status\"\n\n\ndf = pd.DataFrame(\n    {\"pipeline\": [\"Success\", \"Error\", \"Running\"], \"status\": [Status.success, Status.error, Status.running]}\n)\n\n\ndef status_highlight(value: Status):\n    color = \"\"\n    match value:\n        case Status.error:\n            color = \"red\"\n        case Status.running:\n            color = \"blue\"\n        case Status.success:\n            color = \"green\"\n        case _:\n            color = \"gray\"\n\n    return \"color: %s\" % color\n\n\ndf = df.style.map(status_highlight, subset=[\"status\"])\n\nst.dataframe(df, column_config={\"status\": st.column_config.TextColumn(\"Status column\")}, hide_index=True)\n```\n\n### Steps To Reproduce\n\njust run application\n\n### Expected Behavior\n\nExpected enum value with styling\n\n### Current Behavior\n\n![Image](https://github.com/user-attachments/assets/5d2be26f-817e-417a-a01d-eef160a80aba)\n\n\n### Debug info\n\n- Streamlit version: 1.42.2\n- Python version: 3.10.11\n- Operating System: Windows\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10637)\n"
      },
      {
        "user": "sfc-gh-lwilby",
        "body": "Hi @FabienLariviere , \n\nThank you for filing this issue. I have confirmed it, and I have a workaround. \n\n```\nstatus = [Status.success.value, Status.error.value, Status.running.value]\ndf = pd.DataFrame(\n    {\n        \"pipeline\": [\"Success\", \"Error\", \"Running\"],\n        \"status\": status,\n    }\n)\n```\n\nLaura"
      },
      {
        "user": "sfc-gh-lwilby",
        "body": "Another workaround that is a bit more elegant. @lukasmasuch has added an app with this solution as well. \n\n```\nclass Status(str, enum.Enum):\n    success = \"Success status\"\n    running = \"Running status\"\n    error = \"Error status\"\n\n    def __str__(self):\n        return self.value\n```"
      }
    ]
  },
  {
    "issue_number": 11561,
    "title": "streamlit-1.45.1 still requires packaging<25, while it was upgraded to packaging<26 in 1.45.1 branch of April 26th",
    "author": "stonebig",
    "state": "closed",
    "created_at": "2025-06-08T08:55:00Z",
    "updated_at": "2025-06-09T11:38:28Z",
    "labels": [
      "type:bug",
      "area:dependencies"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHi,\n\nI saw that Packaging<26 was a comit in 1.45.1 branch just after 1.45.0 (April 26th)\nhttps://github.com/streamlit/streamlit/commit/e0347c3b5b32e20ff2812dcace78414e58d6240e\n\nis it normal ?\n\n### Reproducible Code Example\n\n```Python\npip3 download --dest  C:\\WinP\\a streamlit\n\n\nwill download packaging-24.1\n\n`\nCollecting streamlit\n  File was already downloaded c:\\winp\\a\\streamlit-1.45.1-py3-none-any.whl\n....\nCollecting numpy<3,>=1.23 (from streamlit)\n  File was already downloaded c:\\winp\\a\\numpy-2.3.0-cp313-cp313-win_amd64.whl\nCollecting packaging<25,>=20 (from streamlit)\n  File was already downloaded c:\\winp\\a\\packaging-24.2-py3-none-any.whl\n...\n`\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\ngetting packaging-25.0\n\n### Current Behavior\n\ngetting packaging-24.2\n\n### Is this a regression?\n\nNo\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: Python-3.13.3 and Python-3.12.10\n- Operating System: Windows 11\n- Browser: (not important here)\n\n\n### Additional Information\n\nPackaging-25.0 adds support for PEP 751 in `markers` ",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11561)\n"
      },
      {
        "user": "stonebig",
        "body": "![Image](https://github.com/user-attachments/assets/cd038ebc-3c96-418c-8d98-3dfbcc462326)"
      },
      {
        "user": "lukasmasuch",
        "body": "The `packaging` update wasn't included in the `1.45.1` patch but will be released in `1.46.0` next week."
      }
    ]
  },
  {
    "issue_number": 11559,
    "title": "`make frontend-dev`  fails during build under WSL2",
    "author": "kamy-dev",
    "state": "open",
    "created_at": "2025-06-08T02:33:09Z",
    "updated_at": "2025-06-09T11:33:13Z",
    "labels": [
      "type:enhancement",
      "good first issue",
      "area:contribution"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\n- Following the [Contributing guide](https://github.com/streamlit/streamlit/wiki/Contributing), I set up a development environment under WSL2 (Ubuntu), installing nvm, Node.js, and Yarn(by `corepack enable`).\n\n- After creating a Python venv in the lib directory, I ran `make all-devel` at the project root, which completed successfully.\n\n- However, ran `make frontend-dev` resulted in the following error:\n```\ncd frontend/ ; yarn workspaces foreach --all --exclude @streamlit/app --exclude @streamlit/lib --topological run build\nUsage Error: Couldn't find the node_modules state file - running an install might help (findPackageLocation)\n\n$ yarn workspaces foreach [--from #0] [-A,--all] [-R,--recursive] [-W,--worktree] [-v,--verbose] [-p,--parallel] [-i,--interlaced] [-j,--jobs #0] [-t,--topological] [--topological-dev] [--include #0] [--exclude #0] [--no-private] [--since] [-n,--dry-run] <commandName> ...\nmake: *** [Makefile:282: frontend-dependencies] Error 1\n```\n\n### Reproducible Code Example\n\n```Python\n(.venv) user@host:/work/streamlit$ make frontend-dev\n```\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.10.12\n- Operating System: Ubuntu 22.04.5 (WSL2)\n- Node.js: 24.1.0\n- nvm: 0.40.3\n- yarn: 4.5.3\n",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11559)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@kamy-dev Thanks for reporting this issue. We do not officially support WSL2 for Streamlit development since all core Streamlit developers are using MacOS. Our recommendation for external contributors is to use devcontainer/codespaces. However, we would be open for tweaks to our setup to support development on WSL2. I'm marking this is an enhancement and would be great if someone external with a Windows machine could make a contribution to get our setup running on WSL2 "
      }
    ]
  },
  {
    "issue_number": 11507,
    "title": "Switch page clears st.context.timezone",
    "author": "yufanyufan",
    "state": "closed",
    "created_at": "2025-06-03T22:58:44Z",
    "updated_at": "2025-06-09T11:32:56Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.switch_page",
      "feature:st.context"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nAfter calling st.switch_page(\"./page.py\"), and st.context.timezone is empty inside page.py.\nReload page.py would populate the data.\n\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.13\n- Operating System: Linux\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11507)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @yufanyufan thank you for filing this issue!\n\nI can confirm that I am seeing the same behavior as you in more fields under `st.context`, not just `st.context.timezone`. This is the code I am using:\n\n```python\n# app.py\nimport streamlit as st\n\n\ndef page_2():\n    st.title(\"Page 2\")\n\n    if st.button(\"Go to page 1\"):\n        st.switch_page(\"page_1.py\")\n\n    st.write(\"Timezone: \", st.context.timezone)\n    st.write(\"Timezone offset: \", st.context.timezone_offset)\n    st.write(\"URL: \", st.context.url)\n    st.write(\"User: \", st.context.locale)\n\n\npg = st.navigation([\"page_1.py\", page_2])\npg.run()\n```\n\n```python\n# page_1.py\n\nimport streamlit as st\n\nst.title(\"Page 1\")\n\nst.write(\"Timezone: \", st.context.timezone)\nst.write(\"Timezone offset: \", st.context.timezone_offset)\nst.write(\"URL: \", st.context.url)\nst.write(\"Locale: \", st.context.locale)\n```\n\nWhen I switch to Page 1 from Page 2 using `st.switch_page`, all of those fields come back as `None`.\n\n<img width=\"269\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/35190a6e-a4ca-4b6d-a6df-e27cab6e3af5\" />\n\nIf you reload, or click on the page in the sidebar, the fields populate as expected:\n\n<img width=\"282\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/67ec2f6c-3b5a-4752-96df-abc4603f90fd\" />\n\nThis may be related to #11330, but I am able to reproduce this even with `runOnSave=false`, so for now I am going to keep these as separate tickets, although the root cause might be similar."
      }
    ]
  },
  {
    "issue_number": 11528,
    "title": "cache_data failing to serialize classes from v1.44.0",
    "author": "andy23432",
    "state": "closed",
    "created_at": "2025-06-05T12:54:17Z",
    "updated_at": "2025-06-09T11:19:37Z",
    "labels": [
      "type:bug",
      "feature:cache",
      "status:awaiting-user-response"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI noticed in the upgrade from 1.43.0 to 1.44.0 that we are getting UnserializableReturnValueError when calling cache_data with a self defined class. I can confirm pickle dumps and loads works fine for this class when I run it outside of streamlit. \n\nFull error:\n> streamlit.runtime.caching.cache_errors.UnserializableReturnValueError: Cannot serialize the return value (of type __main__.Example) in test(). st.cache_data uses pickle to serialize the function's return value and safely store it in the cache without mutating the original object. Please convert the return value to a pickle-serializable type. If you want to cache unserializable objects such as database connections or Tensorflow sessions, use st.cache_resource instead (see our docs for differences).\n\n### Reproducible Code Example\n\n```Python\nfrom streamlit import cache_data\nimport datetime as dt\n\nclass Example:\n    def __init__(self, name):\n        self.name = name\n\n@cache_data(ttl=dt.timedelta(minutes=60))\ndef test():\n    name = \"andy\"\n    return Example(name)\n\nif __name__ == '__main__':\n\n    b = test()\n```\n\n### Steps To Reproduce\n\nRun the code above in streamlit\n\n### Expected Behavior\n\nThe class should be pickled and be stored in the cache\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44.0\n- Python version: 3.10\n- Operating System: Linux\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11528)\n"
      },
      {
        "user": "andy23432",
        "body": "This is caused by an issue with pickle so running \n\n`pickle.dumps(Example(\"andy\")) \n`\nwill also fail on v 1.44.0"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hello @andy23432 , thank you for filing this issue!\n\nI have not been able to reproduce the issue you're seeing. I took your example code from the original issue and it worked on Python 3.10 in 1.43 and 1.44.\n\nI also took the example you gave in your latest comment and made an even smaller app to try to reproduce this:\n\n```py\nimport pickle\nimport sys\n\nimport streamlit as st\n\n\nclass Example:\n    def __init__(self, name):\n        self.name = name\n\n\nst.write(f\"Python version: {sys.version}\")\nst.write(f\"Streamlit version: {st.__version__}\")\nst.write(pickle.dumps(Example(\"andy\")))\n```\n\nBut this also works for me across Streamlit versions:\n\n<img width=\"787\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f5c59c29-f45c-4d31-b79e-8624755b1082\" />\n\n<img width=\"757\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0b30a4d5-ac19-48d7-8cb1-f82497e14f96\" />\n\nAre you seeing an error with this example code?"
      }
    ]
  },
  {
    "issue_number": 10992,
    "title": "Trying to import torch results in asyncio RuntimeError",
    "author": "nchammas",
    "state": "closed",
    "created_at": "2025-04-01T20:31:39Z",
    "updated_at": "2025-06-09T11:07:26Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P2"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI have a working Streamlit app. If I modify it to add `import torch`, I get a `RuntimeError` related to asyncio.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nimport torch\n\npg = st.navigation([\n    st.Page(\"app/home.py\", title=\"Home\"),\n])\n\npg.run()\n```\n\n### Steps To Reproduce\n\nSimply try to run this app with `streamlit run app.py`.\n\n### Expected Behavior\n\nThe app should run normally and I should be able to use torch like any other library.\n\n### Current Behavior\n\nThis is what I get:\n\n```sh\n$ streamlit run app.py \n\n  You can now view your Streamlit app in your browser.\n\n  Local URL: http://localhost:8501\n  Network URL: http://192.168.1.12:8501\n\n2025-04-01 16:26:00.500 Examining the path of torch.classes raised:\nTraceback (most recent call last):\n  File \".../.venv/lib/python3.11/site-packages/streamlit/web/bootstrap.py\", line 347, in run\n    if asyncio.get_running_loop().is_running():\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^\nRuntimeError: no running event loop\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \".../.venv/lib/python3.11/site-packages/streamlit/watcher/local_sources_watcher.py\", line 217, in get_module_paths\n    potential_paths = extract_paths(module)\n                      ^^^^^^^^^^^^^^^^^^^^^\n  File \".../.venv/lib/python3.11/site-packages/streamlit/watcher/local_sources_watcher.py\", line 210, in <lambda>\n    lambda m: list(m.__path__._path),\n                   ^^^^^^^^^^^^^^^^\n  File \".../.venv/lib/python3.11/site-packages/torch/_classes.py\", line 13, in __getattr__\n    proxy = torch._C._get_custom_class_python_wrapper(self.name, attr)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nRuntimeError: Tried to instantiate class '__path__._path', but it does not exist! Ensure that it is registered via torch::class_\n```\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44.0\n- Torch version: 2.6.0\n- Python version: 3.11.11\n- Operating System: macOS 15.4\n- Browser: Safari 18.4\n\n\n### Additional Information\n\nPossibly related issues:\n- https://github.com/streamlit/streamlit/issues/10452\n- https://github.com/pytorch/torchchat/issues/1033",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10992)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @nchammas thank you for filing this ticket!\n\nI was not able to reproduce the issue you're seeing given the code provided here. With that said, there a couple of resources around asyncio in Streamlit today. The main tracking issue can be found here: https://github.com/streamlit/streamlit/issues/8488 In that thread there are a number of workarounds and some other resources for working with asyncio. Let me know if those are helpful resources in the meantime, thanks!"
      },
      {
        "user": "nchammas",
        "body": "@sfc-gh-bnisco - Thanks for the quick response. I don't know if I can use the workarounds in that issue since my problem is coming from a third-party library, `torch`, that I am using.\n\nAre you using the same versions of Python, streamlit, and torch as I am? If not, could you share what versions you're on?"
      }
    ]
  },
  {
    "issue_number": 9140,
    "title": "Error in launching streamlit app: TypeError: WebSocketHandler.__init__() missing 2 required positional arguments: ‚Äòapplication‚Äô and ‚Äòrequest‚Äô",
    "author": "pradeepdev-1995",
    "state": "closed",
    "created_at": "2024-07-25T06:43:05Z",
    "updated_at": "2025-06-09T10:45:47Z",
    "labels": [
      "type:bug",
      "status:cannot-reproduce",
      "priority:P4",
      "area:server"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nTried this code\r\n```\r\nimport streamlit as st\r\n```\r\nthen while execution getting this error\r\n```\r\nError in launching streamlit app: TypeError: WebSocketHandler.__init__() missing 2 required positional arguments: ‚Äòapplication‚Äô and ‚Äòrequest‚Äô\r\n```\r\nversions\r\n\r\npython 3.10\r\nstreamlit==1.36.0\r\nwindows 10 OS\r\n\r\n### Reproducible Code Example\r\nTried this code\r\n```Python\r\n\r\nimport streamlit as st\r\n```\r\nthen while execution getting this error\r\n```\r\nError in launching streamlit app: TypeError: WebSocketHandler.__init__() missing 2 required positional arguments: ‚Äòapplication‚Äô and ‚Äòrequest‚Äô\r\n```\r\nversions\r\n\r\npython 3.10\r\nstreamlit==1.36.0\r\nwindows 10 OS\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\nTried this code\r\n```\r\nimport streamlit as st\r\n```\r\nthen while execution getting this error\r\n```\r\nError in launching streamlit app: TypeError: WebSocketHandler.__init__() missing 2 required positional arguments: ‚Äòapplication‚Äô and ‚Äòrequest‚Äô\r\n```\r\nversions\r\n\r\npython 3.10\r\nstreamlit==1.36.0\r\nwindows 10 OS\r\n\r\n### Expected Behavior\r\n\r\n_No response_\r\n\r\n### Current Behavior\r\n\r\n_No response_\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version:\r\n- Python version:\r\n- Operating System:\r\n- Browser:\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9140)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@pradeepdev-1995 Thanks for reporting this issue. Unfortunately, I wasn't able to reproduce this. Can you check the tornado version in your environment? Did you try to run this Streamlit app locally? "
      },
      {
        "user": "pradeepdev-1995",
        "body": "tornado==6.4.1\r\nDid you try to run this Streamlit app locally? -  Yes\r\n@LukasMasuch \r\n\r\nThe same code with same versions(tornado,streamlite and python) working on ubuntu os.\r\nBut not working on windows OS.  "
      }
    ]
  },
  {
    "issue_number": 11325,
    "title": "Application Not Starting - \"The main module file does not exist\" Despite File Presence",
    "author": "JABRIAESIO",
    "state": "closed",
    "created_at": "2025-05-11T16:27:59Z",
    "updated_at": "2025-06-09T10:43:07Z",
    "labels": [
      "status:awaiting-user-response",
      "feature:community-cloud",
      "type:no-streamlit-issue"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\n**Subject: Application Not Starting - \"The main module file does not exist\" Despite File Presence**\n\nHello,\n\nI'm experiencing a critical issue with my Streamlit Cloud application that fails to start properly.\n\n**Problem Description:**\n- Application URL: [your-streamlit-app-URL]\n- Error message: \"The main module file does not exist: /mount/src/mja-poc-oc-p9/app.py\"\n- The app.py file definitely exists at the root of my GitHub repository and is correctly configured\n- I've verified the project structure, all necessary files are present\n- I've attempted multiple restarts/redeployments without success\n\n**Technical Details:**\n- GitHub Repository: [your-repo-URL]\n- Project structure: app.py is present at the root, with models/ and utils/ folders correctly configured\n- Logs show that Streamlit cannot find the app.py file although it's visible in GitHub\n- I'm using Python 3.x with TensorFlow/Keras to load an ML model from Hugging Face\n\n**What I've Already Tried:**\n- Restarting the application from the dashboard\n- Forcing redeployment via minor commits\n- Checking all configuration parameters\n- Using optimized code to load the model with TFSMLayer\n\n**Suspicions:**\nThere seems to be a synchronization issue between GitHub and Streamlit Cloud, or a caching problem preventing Streamlit from finding my app.py file.\n\nCould you please help me resolve this issue so my application can start properly?\nFYI : My app is working well locally in my VM Linux\nThank you in advance,\n[Your name]\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11325)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @JABRIAESIO, thanks for your submission!\nThough this isn't a bug with the Streamlit open source lib, I can try to take a look and see if I can help. \nDid this app previously work and has since stopped working, or is this the error you get on initial deploy to Streamlit Cloud?\nWould you mind sharing the link the your deployed app & repo code?"
      },
      {
        "user": "lukasmasuch",
        "body": "Closing this issue due to inactivity. Please reopen in case you still run into this issue with Streamlit Cloud. "
      }
    ]
  },
  {
    "issue_number": 11385,
    "title": "st.popover remians displays after run st.rerun(scope='fragment')",
    "author": "inochkin",
    "state": "open",
    "created_at": "2025-05-16T09:31:59Z",
    "updated_at": "2025-06-09T10:41:43Z",
    "labels": [
      "type:bug",
      "status:awaiting-user-response",
      "feature:st.rerun",
      "feature:st.popover"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nst.popover remians displays after run st.rerun(scope='fragment')\n\nsteps: \n1. create function with @st.fragment() decorator.\n2. put  st.popover elemetns in the function (step 1)\n3. create the button in the function to initiate click to st.rerun(scope='fragment') by JS. \n4. add js code that will be auto click on the button with st.rerun(scope='fragment') - (The event shoud run if you click on st.popover elemets).\n   **Result:**\n  if you open st.popove and click on some option in it. JS clicks on the button with st.rerun(scope='fragment') and st.popove should be cloused and updated. BUT popove remains display.\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\nsteps: \n1. create function with @st.fragment() decorator.\n2. put  st.popover elemetns in the function (step 1)\n3. create the button in the function to initiate click to st.rerun(scope='fragment') by JS. \n4. add js code that will be auto click on the button with st.rerun(scope='fragment') - (The event shoud run if you click on st.popover elemets).\n   **Result:**\n  if you open st.popove and click on some option in it. JS clicks on the button with st.rerun(scope='fragment') and st.popove should be cloused and updated. BUT popove remains display.\n\n### Expected Behavior\n\n **Result:**\n  if you open st.popove and click on some option in it. JS clicks on the button with st.rerun(scope='fragment') and st.popove should be cloused and updated. BUT popove remains display.\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45\n- Python version: 13\n- Operating System: win 11\n- Browser: chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11385)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @inochkin, if you could please provide a reproducible code snippet, it can help us better assess the issue and understand the use case. Thank you!"
      }
    ]
  },
  {
    "issue_number": 11415,
    "title": "Race condition in Session State Update",
    "author": "Vangalle",
    "state": "closed",
    "created_at": "2025-05-20T10:25:55Z",
    "updated_at": "2025-06-09T10:35:36Z",
    "labels": [
      "type:bug",
      "status:needs-triage",
      "status:awaiting-user-response"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nUpdating st.session_state immediately after a UI element interrupts execution flow and causes a race condition, resulting in variables defined in conditional branches being undefined when referenced later.\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11415)\n\n```Python\nimport streamlit as st\n\ndef demo_app():\n    st.title(\"Streamlit Bug Demo\")\n    \n    # Initialize session state\n    if 'persistent_choice' not in st.session_state:\n        st.session_state.persistent_choice = \"Option A\"\n    \n    # Select box with immediate session state update\n    options = [\"Option A\", \"Option B\"]\n    index = 0 if st.session_state.persistent_choice == \"Option A\" else 1\n    choice = st.selectbox(\"Select an option\", options, index=index)\n    \n    # This line triggers the bug\n    st.session_state.persistent_choice = choice\n    \n    # Variable defined in conditional branches\n    result = None\n    \n    if choice == \"Option A\":\n        st.write(\"Entering Option A branch\")\n        result = {\"type\": \"A\", \"value\": 100}\n    \n    if choice == \"Option B\":\n        st.write(\"Entering Option B branch\")\n        result = {\"type\": \"B\", \"value\": 200}\n    \n    # This line fails with UnboundLocalError\n    st.write(f\"Result: {result}\")\n\ndemo_app()\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\nWhen selecting \"Option B\", the code should execute the corresponding conditional branch and properly set result.\n\n### Current Behavior\n\nThe session state update triggers an immediate rerun, aborting execution before the conditional branches complete. When the script reruns, result remains None and the conditional branches are not entered.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.13.3\n- Operating System: MacOS\n- Browser: Safari\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11415)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @Vangalle thanks for submitting this issue. Unfortunately, I am unable to reproduce it. How often does it reproduce for you?\n\n![Image](https://github.com/user-attachments/assets/cf0ef98a-b229-46df-896b-3819825e647c)"
      },
      {
        "user": "lukasmasuch",
        "body": "Persisting the selection in session state and using this as input for `index` is not supported in Streamlit and will create issues as described here: https://github.com/streamlit/streamlit/issues/8496 E.g. if you change the value multiple times in https://issues.streamlit.app/?issue=gh-11415 you will see that not every change is applied. This is caused by the issue with `index` being initialized from session state.  "
      }
    ]
  },
  {
    "issue_number": 6934,
    "title": "Streamlit reinstalling packages by itself causing incompatibilities",
    "author": "Haelios",
    "state": "closed",
    "created_at": "2023-06-30T16:03:00Z",
    "updated_at": "2025-06-09T10:09:29Z",
    "labels": [
      "type:bug",
      "feature:community-cloud",
      "priority:P4",
      "status:unlikely"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nWhen deploying the app via streamlit, it runs an automatic check to see if Streamlit is already installed. It is specified in my requirements, so it should stop at that. However, since I use Streamlit == 1.14.0 for compatibility reasons with streamlit-extras, it detects that I should be using altair <5 to be compatible with streamlit as well. And so, even though altair == 4.2.2 is already installed, it reinstalls it, and with it it's dependencies, namely numpy == 1.25.0 which cause problems as it is incompatible with the latest version of the shap library.\r\n\r\nNow I'm not sure if this is considered a bug, as everything seems to be working as intended, but I don't understand why it would reinstall altair even though it already is. And I have no idea what I can do to avoid this issue on my side.\r\n\r\n### Reproducible Code Example\r\n\r\n_No response_\r\n\r\n### Steps To Reproduce\r\n\r\nDeploy the app via streamlit using the repositery linked.\r\n\r\n### Expected Behavior\r\n\r\nWhen i use the dashboard created locally via a brand new venv, everything installs and works as expected with no issues, and I can display the dashboard perfectly.\r\n\r\n### Current Behavior\r\n\r\nNow what happens is, all the packages install properly from the requirements.txt. But after the packages installation, Streamlit runs an automatic check to verify that the Streamlit package is installed. And this follows in the logs of the app : \r\n\r\n\r\n> Checking if Streamlit is installed\r\n> \r\n> 2023-06-30 15:38:50.451 INFO    matplotlib.font_manager: generated new fontManager\r\n> \r\n> Found Streamlit version 1.14.0 in the environment\r\n> \r\n> Streamlit 1.14.0 is present which is incompatible with altair>=5.0.0. Installing altair 4.*\r\n> \r\n> Collecting altair<5\r\n> \r\n\r\nAnd so by doing that, it goes and reinstall altair < 5 even though it already is, and by doing that, reinstalls numpy == 1.25.0, which isn't compatible with shap, causing the app to fail to deploy.\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\nThese are the relevant packages causing the issue.\r\n\r\nstreamlit == 1.14.0\r\naltair < 5\r\nstreamlit-extras==0.2.7\r\nshap==0.41.0\r\nnumpy==1.23.5\r\n\r\n### Additional Information\r\n\r\nHere's the log file with the issue\r\n\r\n[logs-haelios-projet_7_oc-main-Dashboard-streamlit_dashboard.py-2023-06-30T16_02_38.954Z.txt](https://github.com/streamlit/streamlit/files/11918374/logs-haelios-projet_7_oc-main-Dashboard-streamlit_dashboard.py-2023-06-30T16_02_38.954Z.txt)\r\n\r\n\r\n### Are you willing to submit a PR?\r\n\r\n- [ ] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "sfc-gh-jrieke",
        "body": "Not 100% sure but I think this is just normal pip behavior. If pip installs a package that requires an earlier version of a package that is already installed (here: altair 5 is already installed but streamlit 1.14 requires altair 4), it will uninstall that package and install the earlier version."
      },
      {
        "user": "sfc-gh-jrieke",
        "body": "Out of curiosity, which part of streamlit-extras requires streamlit==1.14?"
      },
      {
        "user": "Haelios",
        "body": "> Not 100% sure but I think this is just normal pip behavior. If pip installs a package that requires an earlier version of a package that is already installed (here: altair 5 is already installed but streamlit 1.14 requires altair 4), it will uninstall that package and install the earlier version.\r\n\r\nThe thing is I made sure I'm already installing altair 4 before that, it's in my requirements, therefore it shouldn't reinstall it.\r\n\r\nFor the versioning, I just took what's indicated in the requirements on the streamlit-extras github."
      }
    ]
  },
  {
    "issue_number": 11164,
    "title": "Support inserting 'localized' format in data-editor",
    "author": "Brombeertje69",
    "state": "open",
    "created_at": "2025-04-23T07:56:48Z",
    "updated_at": "2025-06-09T10:08:17Z",
    "labels": [
      "type:enhancement",
      "feature:st.data_editor",
      "area:localization"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nCopy paste of multiple cells is not preserved when format = \"localized\" is used in the data editor. \n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nimport pandas as pd\n\ndf = pd.DataFrame({\n    'A': [1, 2, 3]\n})\n\nst.data_editor(df, column_config={\n    'A': st.column_config.NumberColumn(step=0.001, format='localized')\n})\n```\n\n### Steps To Reproduce\n\n1. Set regional settings to Dutch/Netherlands\n2. Type 2000,35 and verify that it is displayed as 2.000,35. \n3. Type 3 random decimal numbers in an Excel sheet or notepad. \n  1,4\n  3,5\n  5,0\n4. Copy paste them into the data editor and observe they are multiplied by 10. \n\n\n\n\n### Expected Behavior\n\nThe data editor supports copy paste behaviour with the used locale settings. \n\n### Current Behavior\n\nCopy paste behaviour does not preserved locale settings. \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.43\n- Python version: 3.12\n- Operating System: Windows\n- Browser: Chrome\n\n\n### Additional Information\n\n",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11164)\n"
      },
      {
        "user": "kmcgrady",
        "body": "Hey @Brombeertje69 Thank you for filing the issue! I am having trouble setting this up for some reason. I can't even  enter 2000,35. Are you able to type them manually in? When you say regional settings, do you mean on my OS or my browser or both?\n\nI would not be surprised if we are not loading the correct language specification for the underlying dependency `numbro` for parsing the strings coming from the copy. I did some investigation and I still have trouble with my browser setting set to the dutch language."
      },
      {
        "user": "Brombeertje69",
        "body": "I am able to type them manually. The 'localized' option depends on the regional settings of the browser. In Chrome this can be done by changing Settings -> Display Settings -> Dutch. \n\nWhen I paste a single value in a cell, it works fine. The paste issue also occurs when format is 'percent'. So I indeed suspect the values are not parsed properly.\n\nThanks for looking at it! "
      }
    ]
  },
  {
    "issue_number": 11399,
    "title": "streamlit.map not using my private mapbox token",
    "author": "sebplorenz",
    "state": "closed",
    "created_at": "2025-05-19T09:15:02Z",
    "updated_at": "2025-06-09T10:07:58Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.map"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI added my private mapbox token to ./streamlit/config.toml in my app directory.\n\nWhen I run\n```sh\nstreamlit config show\n```\n\nThe output contains the following lines with my correct private mapbox token (I x-ed some parts):\n```\n[mapbox]\n\n# Configure Streamlit to use a custom Mapbox\n# token for elements like st.pydeck_chart and st.map.\n# To get a token for yourself, create an account at\n# https://mapbox.com. It's free (for moderate usage levels)!\n\n# Default: \"\"\n# The value below was set in C:\\Users\\xxxxxx\\Documents\\workspace\\my-app\\app\\.streamlit\\config.toml\ntoken = \"pk.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n```\n\nWhen I start the app in the same directory\n```sh\nstreamlit run my_app.py\n```\n\nand check my network logs, then I can see that streamlit is still using the default token that it got from the tokens.json endpoint for all mapbox request.\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\nStreamlit should use my private mapbox token.\n\n### Current Behavior\n\nStreamlit uses the default streamlit mapbox token, even if a private mapbox token is configured.\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.34.1\n- Python version: 3.13.3\n- Operating System: Windows 11\n- Browser: Firefox 138.0.3\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11399)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @sebplorenz, thanks for your submission!\nI tested on `1.34.1` and was not able to reproduce -  the mapbox token set in `config.toml` was used for my `st.pydeck_chart`.\nCould you confirm if you are still seeing this issue? Are you able to provide any additional info/share your code or repo?"
      },
      {
        "user": "sebplorenz",
        "body": "Hi, now I tested with pydeck_chart and it works. I realized, that this issue only occurs, if a map component is used, like in this example:\n\n```python\nimport streamlit as st\nimport pandas as pd\nimport numpy as np\n\nchart_data = pd.DataFrame(\n    np.random.randn(1000, 2) / [50, 50] + [37.76, -122.4],\n    columns=[\"lat\", \"lon\"],\n)\n\ndf_map = pd.DataFrame(chart_data)\nst.map(\n    df_map,\n    latitude='lat',\n    longitude='lon',\n    size=10,\n    zoom=13,\n    use_container_width=True\n)\n```"
      }
    ]
  },
  {
    "issue_number": 5733,
    "title": "st.altair_chart shows blank axis and chart when provided a datetime domain ",
    "author": "tyler-simons",
    "state": "closed",
    "created_at": "2022-11-18T18:39:31Z",
    "updated_at": "2025-06-09T10:05:16Z",
    "labels": [
      "type:bug",
      "type:regression",
      "status:confirmed",
      "priority:P3",
      "feature:st.altair_chart",
      "upstream"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nAxis shows blank and the chart shows blank for an altair chart when it is passed a datetime domain. Setting a domain for a non-datetime axis works (tried for quantitative, Q). Chart shows up correctly when passed to altair.show() which indicates this may be a bug with Streamlit. \n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-5733)\n\n```Python\nimport altair as alt\nimport pandas as pd\nimport streamlit as st\nfrom vega_datasets import data\n\ntemps = data.seattle_temps()\ntemps = temps[temps.date.dt.hour == 10]\n\nstartDate = pd.to_datetime(\"2010-06-01\")\nendDate = pd.to_datetime(\"2010-06-30\")\nmyScale = alt.Scale(domain=[startDate, endDate])\n\nc = (\n    alt.Chart(temps)\n    .mark_line(clip=True)\n    .encode(x=alt.X(\"date:T\", scale=myScale), y=\"temp:Q\")\n)\nst.altair_chart(c)\n```\n\n\n### Steps To Reproduce\n\n1. Run the reproducible code (streamlit run app.py) in with Streamlit 1.15 and see that the chart is blank. \n2. Downgrade Streamlit to 1.13 and see that the chart displays as expected.\n3. Upgrade to Streamlit 1.14 to see that it does not work in version 1.14 either. \n\n### Expected Behavior\n\nWe expect that the domain adjusts the st.altair_chart axis when passed the datetime domain and that the data displays correctly. \n\n### Current Behavior\n\nThe chart and axis is blank. \n\n### Is this a regression?\n\n- [X] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.15.0\n- Python version: 3.10.8\n- Operating System: Mac OSX 12.6.1\n- Browser: Chrome\n- Virtual environment: Pipenv\n\n\n### Additional Information\n\nThis error was reported by user [xavierc](https://discuss.streamlit.io/u/xavierc) on the Streamlit forums. Thanks xavierc for noticing it!\n\nWorks in Streamlit 1.13\n<img width=\"471\" alt=\"Screen Shot 2022-11-18 at 10 22 15 AM\" src=\"https://user-images.githubusercontent.com/39609292/202777649-599f8f20-af44-4977-b618-9273e89c236e.png\">\n\n\nFails in Streamlit >1.14\n<img width=\"486\" alt=\"image\" src=\"https://user-images.githubusercontent.com/39609292/202777758-f5c9196a-a232-4d12-82ff-dfa170d3cd8c.png\">\n\n\n### Are you willing to submit a PR?\n\n- [ ] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "mayagbarnes",
        "body": "Hi @tyler-simons, thanks for reporting! \r\nI used xavier's code snippet since there were some differences from yours, but was able to confirm the bug/regression occurred between st version 1.13.0 & 1.14.0. Added a deployed version for future reference."
      },
      {
        "user": "kmcgrady",
        "body": "I have investigated this, and I think this is actually a bug in vega. I started a conversation here https://github.com/vega/vega/issues/3632"
      },
      {
        "user": "willhuang1997",
        "body": "Going to note down that this bug from long ago is also being affected: https://github.com/streamlit/streamlit/issues/3351"
      }
    ]
  },
  {
    "issue_number": 11519,
    "title": "`st.data_editor` `NumberColumn` rounds 4.52 to 4.51 despite correct step and format settings",
    "author": "RashminDungrani",
    "state": "closed",
    "created_at": "2025-06-04T17:24:37Z",
    "updated_at": "2025-06-09T10:03:41Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor",
      "feature:st.column_config"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\n\nI'm experiencing an issue with `st.data_editor` where entering the value `4.52` into a `NumberColumn` results in it being automatically converted to `4.51`. This occurs even though I've set the `step` to `0.01` and the `format` to `\"%.2f\"`.([[discuss.streamlit.io](https://discuss.streamlit.io/t/cannot-keep-float-number-from-st-data-editor/50583?utm_source=chatgpt.com)][1])\n\n**Steps to Reproduce**:\n\n1. Use the following code snippet:\n\n   ```python\n   import streamlit as st\n   import pandas as pd\n\n   df = pd.DataFrame({\"min_diameter\": [4.51]})\n   st.data_editor(\n       df,\n       column_config={\n           \"min_diameter\": st.column_config.NumberColumn(\n               \"MIN DM\",\n               min_value=0.00,\n               step=0.01,\n               format=\"%.2f\",\n               width=\"small\",\n           )\n       },\n       num_rows=\"dynamic\",\n       use_container_width=True,\n   )\n   ```\n\n\n\n2. In the `min_diameter` field, attempt to enter the value `4.52`.\n\n**Expected Behavior**:\n\nThe value `4.52` should be accepted and retained as entered.\n\n**Actual Behavior**:\n\nUpon entering `4.52`, the value is automatically changed to `4.51`.\n\n**Additional Information**:\n\n* **Streamlit Version**: 1.45.1\n* **Python Version**: 3.12.5\n* **Operating System**: Max\n* **Browser**: Firefox\n\nPlease let me know if any additional information is required to address this issue.\n\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11519)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@RashminDungrani Thanks for reporting this issue. I reproduced it [here](https://issues.streamlit.app/?issue=gh-11519). The root cause is a rounding issue when we truncate decimals, which is applied when `step` is specified. I started preparing a fix. "
      }
    ]
  },
  {
    "issue_number": 2242,
    "title": "Pydeck basemap and tooltip",
    "author": "AVSuni",
    "state": "closed",
    "created_at": "2020-10-21T12:23:53Z",
    "updated_at": "2025-06-09T09:54:20Z",
    "labels": [
      "type:bug",
      "priority:P3",
      "feature:st.pydeck_chart"
    ],
    "body": "Hi guys,\r\n\r\nThanks for the amazing work. I don't want to double-up on the bug reports since tooltips are known to be broken for Pydeck in Streamlit, but this is related but separate. I am able to get tooltips by doing the following\r\n\r\n\r\n```\r\nmap_df = pd.read_csv('map_df.csv')\r\n\r\nlayer = pdk.Layer(\r\n      'ScatterplotLayer',   \r\n    map_df,\r\n    get_position=['longitude', 'latitude'],\r\n    auto_highlight=True,\r\n    get_radius=100,         \r\n    get_fill_color=[180, 0, 200, 140],  \r\n    pickable=True)\r\n\r\n\r\nview_state = pdk.ViewState(\r\n    longitude=23.767198813310845,\r\n    latitude=61.49044615109907,\r\n    zoom=10,\r\n    min_zoom=5,\r\n    max_zoom=15,\r\n    pitch=0,\r\n    bearing=-27.36)\r\n\r\n\r\nr = pdk.Deck(layers=[layer], initial_view_state=view_state)\r\ndeck_map = r.to_html(as_string=True)\r\n\r\nst.components.v1.html(deck_map,width=1000, height=600) \r\n```\r\n\r\n... But now there is no basemap. The mapbox API is correct and shows on the HTML. In fact, trying to open a Kepler.gl HTML shows the same behavior. Any thoughts? Many thanks!",
    "comments": [
      {
        "user": "arkanoid87",
        "body": "this is sufficient to expose the problem\r\n\r\nthis should add a pydeck map with Goole Htybrid basemap, but it shows Carto instead\r\n```python\r\nimport leafmap.deck as leafmap\r\nm = leafmap.Map()\r\nm.add_basemap()\r\nst.pydeck_chart(m)\r\n```\r\n\r\nIf I do this, it works\r\n```python\r\ndeck_map = m.to_html(as_string=True)\r\nst.components.v1.html(deck_map,width=1000, height=600)\r\n```"
      },
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-2242)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "Closing this since the issue is very old and pydeck tooltips seem to work fine with the latest version of Streamlit."
      }
    ]
  },
  {
    "issue_number": 11449,
    "title": "UI Bug: Sidebar toggle button becomes hidden or overlaps with sidebar when expanded",
    "author": "VipulSingh2",
    "state": "closed",
    "created_at": "2025-05-25T06:55:10Z",
    "updated_at": "2025-06-09T09:44:59Z",
    "labels": [
      "type:bug",
      "status:awaiting-user-response",
      "feature:st.sidebar"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen the sidebar in a Streamlit app is expanded, the toggle button used to collapse it becomes hidden behind the sidebar. It temporarily becomes visible when the user scrolls down, but once the scroll is released, the button is again covered by the sidebar content. This creates confusion and negatively affects usability, as users may think the button is missing or broken. The toggle should always remain visible and positioned outside the scrollable sidebar area.\n\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\n\n# Title in main area\nst.title(\"Sidebar Toggle Button Bug Example\")\n\n# Fill the sidebar with many elements to make it scrollable\nsidebar_placeholder = st.sidebar.empty()\n\n\n# Instruction for the user\nst.write(\n    \"Expand the sidebar and observe the toggle (collapse) button. \"\n    \"It appears briefly when scrolling, but becomes hidden behind the sidebar content afterward.\"\n)\n```\n\n### Steps To Reproduce\n\n1. Create a new Streamlit app and add multiple elements inside st.sidebar using st.sidebar.button() or st.sidebar.empty().container().\n2. Run the app using streamlit run app.py.\n3. Click the sidebar toggle button to expand the sidebar.\n4. Observe the toggle button's position ‚Äî it is not clearly visible or appears covered by the sidebar contents.\n5. Scroll down the sidebar ‚Äî the toggle button briefly appears.\n6. Once you release scrolling, the button gets hidden again under the sidebar content.\n\n### Expected Behavior\n\nWhen the sidebar is expanded, the toggle (collapse) button should be visible only once at the top of the sidebar.\n\nAs the user scrolls down inside the expanded sidebar, the toggle button should not remain in view or appear again ‚Äî it should scroll out of view naturally with the sidebar content.\n\nThere should be no duplicate toggle button appearing lower in the sidebar as the user scrolls.\n\nThis behavior ensures a clean UI where the toggle button behaves like a regular part of the sidebar layout ‚Äî visible at the top when in view, and hidden when scrolled past.\n\n### Current Behavior\n\nWhen the sidebar is expanded, the toggle (collapse) button becomes hidden behind the sidebar content.\n\nAs the user scrolls down inside the sidebar, the toggle button becomes visible again, even though it should have scrolled out of view.\n\nOnce scrolling stops, the toggle button appears to be overlapping or floating over the sidebar content instead of behaving like a fixed element at the top.\n\nThis creates a confusing and broken UI, where the button appears and disappears inconsistently depending on scroll position, and does not maintain a proper layout structure.\n\n![Image](https://github.com/user-attachments/assets/9959c177-f5ef-4f54-8caa-7aa9094229b6)\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\nStreamlit version: 1.25.0\nPython version: 3.10.9\nOperating System: Windows 10\nBrowser: Google Chrome 131.0.6778.205\n\n\n### Additional Information\n\nThe default Streamlit sidebar toggle (collapse/expand) button is implemented as a fixed-position UI element pinned at the top right corner of the sidebar.\n\nBecause of its fixed positioning, the toggle button remains visible even when scrolling the sidebar content.\n\nThis can cause the toggle button to overlap or appear covered by sidebar elements if the sidebar contains many interactive widgets or buttons.\n\nThe toggle button does not scroll out of view naturally with the sidebar content.\n\nThere is no built-in Streamlit option to make the toggle button behave like regular sidebar content that scrolls away.\n\nTo achieve a toggle button that scrolls with the sidebar content and appears only once at the top (disappearing as you scroll down), you must:\n\nHide the default toggle button via CSS.\n\nImplement a custom toggle button inside the sidebar content area at the top.\n\nNote that custom toggle buttons inside the sidebar cannot trigger the native sidebar collapse animation or automatic resizing.\n\nAdding extra padding or margin at the bottom of the sidebar content can help prevent overlapping the toggle button with sidebar widgets.\n\nBe aware that CSS classes used to style or hide the toggle button may change with Streamlit updates, so maintenance may be required.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11449)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @VipulSingh2 thanks for filing this issue. We've updated the sidebar quite a bit in since the version of streamlit you're on. Could you try updating to the latest version 1.45.1 and see if this issue persists. Furthermore, there are some changes that should be landing in 1.46.0 that will change sidebar more, so stay tuned for those. "
      },
      {
        "user": "lukasmasuch",
        "body": "Closing this since it seems to be related to an old Streamlit version and not reproducible with the latest version."
      }
    ]
  },
  {
    "issue_number": 10578,
    "title": "Input events immediately terminate everything?",
    "author": "ConcurrentCrab",
    "state": "open",
    "created_at": "2025-03-01T15:18:51Z",
    "updated_at": "2025-06-09T09:44:05Z",
    "labels": [
      "type:enhancement",
      "feature:st.rerun"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nFor a minimal reproducer, I have provided a distilled version of the \"LLM Chat\" demo app, with the \"LLM\" extracted out into a generator.\n\nEverything works fine as long as you wait for a response before sending your next query. But if you send a query while the generator is still running (e.g. if it is still in the `sleep()` call), on the next rerun you get this exception:\n\n```\nValueError: generator already executing\n```\n\nIt seems input events immediately terminate the running instance of the script and do a next rerun, which puts the generator (and one would presume other state-machine-like constructs as well) into an inconsistent state.\n\nNote that this is not specific to generators, as you can never be sure that some \"critical section\" of code for a state transition got completed. This, to me, sounds like undesirable behaviour, at least in some contexts.\n\nThansk for the help!\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nimport time\n\nif \"messages\" not in st.session_state:\n    st.session_state.messages = []\n\nif \"prompt\" not in st.session_state:\n    st.session_state.prompt = None\n\n# Generator coroutine to simulate external API\n# Returns true if data updated, false otherwise\ndef run_stream():\n    while True:\n        prompt = st.session_state.prompt\n        if prompt:\n            st.session_state.messages.append({\"role\": \"user\", \"content\": prompt})\n            yield True\n            time.sleep(0.5) # API delay\n            st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"Do you need help?\"})\n            yield True\n        yield False\n\nif \"run_stream\" not in st.session_state:\n    st.session_state.run_stream = run_stream()\n\nfor message in st.session_state.messages:\n    with st.chat_message(message[\"role\"]):\n        st.markdown(message[\"content\"])\n\nst.session_state.prompt = st.chat_input(\"What is up?\")\n\nif next(st.session_state.run_stream):\n    st.rerun() # Rerun if stream updated something\n```\n\n### Steps To Reproduce\n\n1. send a message\n2. send another message before the coroutine has responded\n\n### Expected Behavior\n\nI would expect the input event to be queued for the next rerun, or some way to be able to configure input widgets to do that. Or perhaps ways to have the current run terminate somewhat gracefully, by marking sections of code to be run \"atomically\".\n\n### Current Behavior\n\nIt throws the exception:\n```\nValueError: generator already executing\n```\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.42.2\n- Python version: 3.13.2\n- Operating System: MacOS 15.3.1\n- Browser: Firefox\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10578)\n"
      },
      {
        "user": "sfc-gh-lwilby",
        "body": "Hi @ConcurrentCrab , \n\nI believe the issue here is that in your example code you are using `st.rerun()` which does kill the current script run and start a new one and can lead to issues. In [our documentation](https://docs.streamlit.io/develop/api-reference/execution-flow/st.rerun), we recommend caution when using this command and seeking out alternatives when possible. \n\nCan you give more information on what you are trying to accomplish with `st.rerun()` and maybe I can find an alternative?\n\nLaura"
      },
      {
        "user": "ConcurrentCrab",
        "body": "@sfc-gh-lwilby \n\nHi Laura,\nThank you for taking time to look at this issue.\n\nI do not believe the issue here is with the `st.rerun()` call. Note that there is nothing `async` in the code, everything runs synchronously. By the time we reach there, the generator has already yielded the `next()` call and has been \"parked\". The call can only happen at the end of the execution flow. The `st.rerun()` is innocent :D\n\nThe generator and the rerun call are merely a neat trick I use to avoid having to write rendering code twice: it lets the main rendering code rerun after every state change, while keeping the state mutation logic in a clean single flow.\n\nBut it is indeed my fault for providing an example that was slightly convoluted. Let me demonstrate my point with an example without either `st.rerun()` or coroutines:\n\n```python\nimport streamlit as st\nimport time\n\nif \"value\" not in st.session_state:\n    st.session_state.value = 0\n\ndef critical_section():\n    for i in range(10):\n        st.session_state.value += 1\n        time.sleep(0.1)\n\ncounter = st.empty()\ncounter.title(st.session_state.value)\n\nif st.button(\"Increment\"):\n    with st.spinner(\"Incrementing...\"):\n        critical_section()\n    counter.title(st.session_state.value)\n```\n\nIf you are a patient clicker, the counter will keep updating at nice round multiples of 10. But if you are a bit impatient and start spam-clicking the button, you will soon find the counter not-so-rounded anymore. This would seem to be because, on every input event, Streamlit is terminating the currently running instance of the script, no matter at what point of execution it is at.\n\nPresume that the `critical_section()` call was an important piece of code (e.g. a resource that needs cleanup) or external API call that should not be interrupted. My query is, how do I ensure that Streamlit does not interrupt its execution whatsoever?"
      }
    ]
  },
  {
    "issue_number": 11376,
    "title": "No carga plataforma",
    "author": "EVY-ZUL",
    "state": "closed",
    "created_at": "2025-05-15T20:17:45Z",
    "updated_at": "2025-06-09T09:42:14Z",
    "labels": [
      "type:bug",
      "status:awaiting-user-response"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nAl abrir la plataforma, no termina de cargar, se ha quedado horas sin moverse y ocupo frecuentamente el portal, normalmente no tarda ni un minuto.\n\n![Image](https://github.com/user-attachments/assets/0464471d-7a5d-4e03-9794-36d7dd3c0722)\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11376)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @EVY-ZUL, thanks for your submission!\nCould you provide the code you are trying to run, the steps you are running through, and the streamlit version you are using?"
      },
      {
        "user": "lukasmasuch",
        "body": "Closing this since we didn't get any additional response."
      }
    ]
  },
  {
    "issue_number": 6804,
    "title": "st.multiselect doesn't respond in Docker container",
    "author": "LucasBFrancois",
    "state": "closed",
    "created_at": "2023-06-06T14:34:47Z",
    "updated_at": "2025-06-09T09:40:00Z",
    "labels": [
      "type:bug",
      "status:cannot-reproduce",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nWhen using st.multiselect locally (with `streamlit run streamlit_app.py`) I am able to store the selected values, however, when I containerize my app with Docker I experience a different behavior. Values won't get stored anymore.\r\nBelow is the function that uses the st.multiselect widget. It should be sufficient to reproduce the results.\r\n\r\n### Reproducible Code Example\r\n\r\n```Python\r\nimport streamlit as st\r\n\r\nfrom pandas import DataFrame\r\nfrom json import loads\r\nimport logging\r\n\r\nlogging.basicConfig(encoding=\"utf-8\", level=logging.INFO)\r\n\r\nASSET_MODEL = \"\"\"{\\n\r\n    \"name\": null,\\n\r\n    \"equipement_type\": null,\\n\r\n    \"serial_number\": null,\\n\r\n    \"address\": null,\\n\r\n    \"building_name\": null,\\n\r\n    \"floor\": null,\\n\r\n    \"room\": null,\\n\r\n    \"installation_date\": null,\\n\r\n    \"manufactured_by\": null,\\n\r\n    \"serviced_by\": null\\n\r\n    }\r\n    \"\"\"\r\n\r\ndata = {\r\n    \"name\": \"Public elevator\",\r\n    \"equipement_type\": \"Elevator\",\r\n    \"serial_number\": \"12341234\",\r\n    \"address.street_name\": \"Broadway 1\",\r\n    \"address.city\": \"NYC\",\r\n    \"address.postal_code\": 1234,\r\n    \"building_name\": \"Empire State Building\",\r\n    \"floor\": 50,\r\n    \"room\": 4,\r\n    \"installation_date\": \"N/A\",\r\n    \"manufactured_by\": \"Siemens\",\r\n    \"serviced_by\": \"Elevator Service Inc.\",\r\n}\r\n\r\nst.session_state.asset = data\r\n\r\n@st.cache_data(experimental_allow_widgets=True)\r\ndef edit_asset(incoming_data: dict, verbose: bool = False) -> dict:\r\n    \"\"\"\r\n    The purpose of this funtion is to change the values of a dictionary with a selection of values in list.\r\n    \"\"\"\r\n\r\n    list_values = [str(value) for key, value in incoming_data.items()]\r\n    set_values = set(list_values)\r\n    logging.warning(st.session_state)\r\n    if \"asset\" in st.session_state:\r\n        asset = st.session_state.asset\r\n        if verbose:\r\n            logging.info(f\"Asset was retrieved from session {asset}\")\r\n    else:\r\n        asset = loads(ASSET_MODEL)\r\n        if verbose:\r\n            logging.info(f\"Asset was loaded {asset}\")\r\n    col1, col2 = st.columns(2)\r\n    id = 0\r\n    # Column with multiselect box to switch the values of a dictionary with values from set_values\r\n    with col2:\r\n        for key, value in st.session_state.asset.items():\r\n            st.session_state.asset[key] = st.multiselect(\r\n                label=key.capitalize(),\r\n                options=set_values,\r\n                key=key + str(id),\r\n                default=None,\r\n            )\r\n            asset[key] = st.session_state.asset[key]\r\n            id += 1\r\n            if verbose:\r\n                logging.info(st.session_state.asset[key])\r\n                logging.info(\r\n                    f'Selected asset key \"{key}\" with value \"{st.session_state.asset[key]}\"'\r\n                )\r\n    # Representation of the dictionary as a dataframe\r\n    with col1:\r\n        df_data = [{\"Field\": key, \"Value\": value} for key, value in asset.items()]\r\n        df = DataFrame(df_data)\r\n        st.data_editor(df, hide_index=True, width=400)\r\n        if verbose:\r\n            st.write(asset)\r\n    return st.session_state.asset\r\n\r\n\r\ndef main():\r\n    edit_asset(incoming_data=data, verbose=True)\r\n    \r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nDockerfile:\r\n```dockerfile\r\nFROM python:3.10.6-slim\r\n\r\nWORKDIR <set_working_directory>\r\n\r\nENV PYTHONPATH=<set_working_directory>\r\n\r\nCOPY . .\r\n\r\nRUN apt-get update && \\\r\n    pip install -r requirements.txt\r\n\r\nEXPOSE 8080\r\n\r\nENTRYPOINT [ \"streamlit\", \"run\", \"test.py\", \"--server.port=8080\", \"--server.address=0.0.0.0\" ]\r\n```\r\n\r\n### Steps To Reproduce\r\n\r\n1. Test the function with a local script with `streamlit run streamlit_app.py`\r\n3. Containerize the same script\r\n4. Run the container and test\r\n\r\n### Expected Behavior\r\n\r\nChoices from st.multiselect get saved in a local variable\r\n\r\n### Current Behavior\r\n\r\nChoices from st.multiselect don't get saved in a local variable\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.23.1\r\n- Python version: 3.10.6\r\n- Operating System: Pop!_OS 22.04 LTS\r\n- Browser: Mozilla Firefox\r\n- Virtual environment: [\r\npandas,\r\nopenai>=0.27.0,\r\npymupdf,\r\nfiletype,\r\ndocx2txt,\r\nrdflib,\r\nsqlalchemy,\r\npydantic,\r\npsycopg2-binary,\r\npython-Levenshtein,\r\nthefuzz,\r\ntiktoken]\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_\r\n\r\n### Are you willing to submit a PR?\r\n\r\n- [ ] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "carolinefrasca",
        "body": "Hey @LucasBFrancois, thank you for sharing this! Are you able to share the contents of your Dockerfile? It also looks like that code snippet might not be complete enough for reproducing issue, since the function `edit_asset` which creates the `st.multiselect` is never called?"
      },
      {
        "user": "LucasBFrancois",
        "body": "Hi Caroline,\r\nI've now updated my Python script so now it should work as is. I have also added my Dockerfile, just remember to change the values in it."
      },
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-6804)\n"
      }
    ]
  },
  {
    "issue_number": 6818,
    "title": "Asynchronous code fails to use session state on Streamlit Cloud while it works locally",
    "author": "tommitt",
    "state": "closed",
    "created_at": "2023-06-09T08:39:41Z",
    "updated_at": "2025-06-09T09:38:07Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.session_state",
      "status:unlikely",
      "feature:fast-reruns",
      "area:threading/processing"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe error appears while running an asynchronous chronometer/stopwatch controlled by a Streamlit interface.\nThe session state variables are failed to be used on the deployed version on Streamlit Cloud, while the same code works fine locally.\n\n### Reproducible Code Example\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-6818)\n\n```Python\nimport asyncio\nimport time\n\nimport streamlit as st\n\n\nasync def run_chronometer(container):\n    while st.session_state[\"chrono_running\"]:\n        st.session_state[\"chrono_stop_ts\"] = time.time()\n        run_time = (\n            st.session_state[\"chrono_stop_ts\"] - st.session_state[\"chrono_start_ts\"]\n        )\n        container.subheader(f\"{run_time:.2f}\")\n        await asyncio.sleep(0.01)\n\n\ndef init_chrono():\n    st.session_state[\"chrono_running\"] = False\n    st.session_state[\"chrono_start_ts\"] = None\n    st.session_state[\"chrono_stop_ts\"] = None\n\n\nif \"chrono_running\" not in st.session_state:\n    init_chrono()\n\nst.header(\"Chronometer\")\ncol1_run, col2_run = st.columns(2)\ncontainer = st.empty()\ncol1_save, col2_save = st.columns(2)\n\n# buttons to run chronometer\nwith col1_run:\n    if st.button(\"Start\", use_container_width=True):\n        st.session_state[\"chrono_start_ts\"] = time.time()\n        st.session_state[\"chrono_running\"] = True\n        st.session_state[\"chrono_stop_ts\"] = None\n\nwith col2_run:\n    if st.button(\"Stop\", use_container_width=True):\n        st.session_state[\"chrono_running\"] = False\n\n# fill container when chrono is not running\nif not st.session_state[\"chrono_running\"]:\n    if not st.session_state[\"chrono_stop_ts\"]:\n        container.subheader(f\"{0.0:.2f}\")\n    else:\n        run_time = round(\n            st.session_state.chrono_stop_ts - st.session_state.chrono_start_ts, 2\n        )\n        container.subheader(f\"{run_time:.2f}\")\n\n# buttons to save chronometer result\nwith col1_save:\n    if st.button(\n        \"Save\",\n        disabled=(not st.session_state[\"chrono_stop_ts\"]),\n        use_container_width=True,\n    ):\n        st.write(\"Saved time:\", run_time)\n\nwith col2_save:\n    if st.button(\n        \"Delete\",\n        disabled=(not st.session_state[\"chrono_stop_ts\"]),\n        use_container_width=True,\n    ):\n        init_chrono()\n        st.experimental_rerun()\n\n# run chronometer asynchronously\nasyncio.run(run_chronometer(container))\n```\n\n\n### Steps To Reproduce\n\nGo to the [deployed version](https://chronometer-error.streamlit.app/).\n\nThen follow these steps:\n- Click on \"Start\" button\n- Click on \"Stop\" button\n- Click on \"Save\" or \"Delete\" buttons\n- Click on \"Start\" button again\n- Click on \"Stop\" button again\n\n### Expected Behavior\n\nWhen you click \"Start\" the app displays the running time, when you click \"Stop\" it shows the time that passed from start to stop.\n\n### Current Behavior\n\nRunning the code locally works fine.\n\nRunning the deployed app, the stop time is failed to be captured (showing 0) and the following error message pops up:\n```\nTraceback (most recent call last):\n\n  File \"/home/appuser/venv/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 565, in _run_script\n\n    exec(code, module.__dict__)\n\n  File \"/app/streamlit-chronometer/chronometer.py\", line 78, in <module>\n\n    asyncio.run(run_chronometer(container))\n\n  File \"/usr/local/lib/python3.10/asyncio/runners.py\", line 44, in run\n\n    return loop.run_until_complete(main)\n\n  File \"/usr/local/lib/python3.10/asyncio/base_events.py\", line 649, in run_until_complete\n\n    return future.result()\n\n  File \"/app/streamlit-chronometer/chronometer.py\", line 14, in run_chronometer\n\n    while st.session_state[\"chrono_running\"] and run_time < MAX_TIME - TIMESTEP_REAL:\n\n  File \"/home/appuser/venv/lib/python3.10/site-packages/streamlit/runtime/state/session_state_proxy.py\", line 90, in __getitem__\n\n    return get_session_state()[key]\n\n  File \"/home/appuser/venv/lib/python3.10/site-packages/streamlit/runtime/state/safe_session_state.py\", line 104, in __getitem__\n\n    raise KeyError(key)\nKeyError: 'chrono_running'\n```\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.19\n- Python version: 3.10\n- Operating System: Windows\n- Browser: Google Chrome\n- Virtual environment: conda\n\n\n### Additional Information\n\nThe repository with the full reproducible code and the used `requirements.txt` file can be found [here](https://github.com/tommitassi/streamlit-chronometer).\n\nIf you try to use `streamlit==1.20+`, you would obtain the same error locally as well. I found out this is due to the `fastReruns` default value which has become `true` in these releases. If you overwrite the value to `false` within `.streamlit/config.toml` file, you would solve the problem locally but it will persist on the deployed version. Using `streamlit==1.19` overcomes this problem.\n\n### Are you willing to submit a PR?\n\n- [ ] Yes, I am willing to submit a PR!",
    "comments": [
      {
        "user": "DannySee",
        "body": "Same issue - did you find any other fix? I tried setting my streamlit version to 1.19 in the requirements.txt file, but no luck. "
      },
      {
        "user": "tommitt",
        "body": "> Same issue - did you find any other fix? I tried setting my streamlit version to 1.19 in the requirements.txt file, but no luck. \n\nNo, I haven't found any fix. Does your code work fine when running locally?"
      },
      {
        "user": "DannySee",
        "body": "> > Same issue - did you find any other fix? I tried setting my streamlit version to 1.19 in the requirements.txt file, but no luck.\r\n> \r\n> No, I haven't found any fix. Does your code work fine when running locally?\r\n\r\nYes - it works locally, but not when it's deployed to the community cloud. "
      }
    ]
  },
  {
    "issue_number": 11365,
    "title": "Bug in the browser app regarding the use of np.deprecate",
    "author": "c-nogueira",
    "state": "closed",
    "created_at": "2025-05-14T20:55:51Z",
    "updated_at": "2025-06-09T09:37:04Z",
    "labels": [
      "type:bug",
      "status:awaiting-user-response"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThere is a Bug in the browser app regarding the use of np.deprecate. \nThe error message is: AttributeError: `np.deprecate` was removed in the NumPy 2.0 release. Emit `DeprecationWarning` with `warnings.warn` directly, or use `typing.deprecated`.\nand the line which uses it appears at:\nFile \"/usr/local/lib/python3.11/dist-packages/pymatgen/core/units.py\", line 295, in FloatWithUnit\n    @np.deprecate(message=\"Use from_str instead\")\n     ^^^^^^^^^^^^\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\n- Python version:\n- Operating System:\n- Browser:\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11365)\n"
      },
      {
        "user": "mayagbarnes",
        "body": "Hi @c-nogueira, thanks for your submission! Are you trying to file an issue with the streamlit open source library, or a specific app you are viewing?"
      },
      {
        "user": "lukasmasuch",
        "body": "Closing this since it seems to be related to `pymatgen` and not Streamlit. "
      }
    ]
  },
  {
    "issue_number": 5251,
    "title": "Latex not rendered in plotly charts",
    "author": "edsaac",
    "state": "open",
    "created_at": "2022-08-26T22:56:04Z",
    "updated_at": "2025-06-09T09:36:02Z",
    "labels": [
      "type:enhancement",
      "feature:st.plotly_chart"
    ],
    "body": "### Summary\r\n`st.plotly_chart()` does not render latex in plot elements. \r\nThe [`include_mathjax`](https://plotly.com/python-api-reference/generated/plotly.graph_objects.Figure.html?highlight=include_mathjax) kwarg might take care of this but passing it to `st.plotly_chart()` makes no difference. Using raw strings or double dollar signs makes no difference either.\r\n\r\n### Steps to reproduce\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-5251)\r\n\r\nCode snippet:\r\n\r\n```python\r\nimport streamlit as st\r\nimport plotly.express as px\r\n\r\nfig = px.scatter(x=[0, 1, 2, 3, 4], y=[0, 1, 4, 9, 16],\r\n                 labels={'x':r\"$x \\to x^2$\", 'y':\"$x^2$\"})\r\n\r\nst.plotly_chart(fig) # No latex rendered\r\nst.plotly_chart(fig,include_mathjax=\"cdn\") # No latex rendered either\r\nst.markdown(r\"$x \\to x^2$\") # But streamlit latex (KaTex?) does work\r\n```\r\n**Expected behavior:**\r\n\r\nThe labels should be rendered as latex equations, \r\n\r\n![image](https://user-images.githubusercontent.com/34405119/187000305-35b966d8-4819-4423-91bd-9ff1c2cb13cd.png)\r\n\r\n**Actual behavior:**\r\n\r\nThe literal strings are shown instead\r\n\r\n![image](https://user-images.githubusercontent.com/34405119/187000364-d5685236-e742-4abf-813f-e252d7374c26.png)\r\n\r\n### Is this a regression?\r\nFrom [this discussion](https://discuss.streamlit.io/t/plotly-problem-using-latex-in-titles-and-axis-labels/4766), it seems that this has never worked :face_with_spiral_eyes: :skull: \r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.12.2\r\n- Python version: 3.9.5\r\n- Using pipenv\r\n- OS version: Ubuntu 20.04.5 LTS\r\n- Browser version: Firefox 104.0 (64-bit)\r\n\r\n### Additional information\r\n\r\nIt has been mentioned in a couple discuss entries:\r\n\r\n- https://discuss.streamlit.io/t/render-mathjax-library-in-streamlit/18081\r\n- https://discuss.streamlit.io/t/plotly-problem-using-latex-in-titles-and-axis-labels/4766\r\n",
    "comments": [
      {
        "user": "edsaac",
        "body": "Here is a better example (and a possible fix). Exporting the plotly figure to HTML using `include_mathjax='cdn'` seems to do the trick, but it won't work with `st.plotly_chart` component.\r\n\r\n![latexPlotlyIssue](https://user-images.githubusercontent.com/34405119/187031447-9adde8e0-fa54-4613-a476-46ac154456a6.gif)\r\n\r\n```python\r\nimport streamlit as st\r\nimport plotly.express as px\r\n\r\nfig = px.scatter(x=[0, 1, 2, 3, 4], y=[0, 1, 4, 9, 16],\r\n                labels={\r\n                    'x':r\"$ x \\to x^2 $\",\r\n                    'y':r\"$ x^2 $\" })\r\n\r\n\"## ‚ùå Using streamlit\"\r\nwith st.echo():\r\n    st.plotly_chart(fig)\r\n\r\n\"## ‚ùå Rendering the exported HTML\"\r\nwith st.echo():\r\n    st.components.v1.html(fig.to_html(),height=500)\r\n\r\n\"## ‚ùå Using streamlit with kwarg `include_mathjax`\"\r\nwith st.echo():\r\n    ## This is not really a kwarg to be passed to a plotly fig\r\n    # st.plotly_chart(fig,include_mathjax=\"cdn\")\r\n    st.plotly_chart(fig,kwargs={\"include_mathjax\":\"cdn\"})\r\n\r\n\"## ‚úÖ Rendering the exported HTML with kwarg `include_mathjax`:\"\r\nwith st.echo():\r\n    st.components.v1.html(fig.to_html(include_mathjax='cdn'),height=500)\r\n```"
      },
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-5251)\n"
      },
      {
        "user": "edsaac",
        "body": "## Hint\n\nTo render LaTeX in plotly, we need to make MathJax available. \n\n|Before|After|\n|---|---|\n|![Image](https://github.com/user-attachments/assets/3e1ec936-40c9-45ab-8d03-6a73f35e356f)|![Image](https://github.com/user-attachments/assets/a5f3198b-4e3e-40ae-b9fd-fca0719bdab1)|\n\n## Test\n\n*app.py*:\n\n```py\nimport streamlit as st\nimport numpy as np\nimport plotly.express as px\n\nwith open(\"load-mathjax.js\", \"r\") as f:\n    js = f.read()\n    st.components.v1.html(f\"<script>{js}</script>\", height=0)\n\nx = np.linspace(0, 2 * np.pi, 100)\ny = x * np.sin(x)\n\nfig = px.scatter(\n    x=x,\n    y=y,\n    labels={\"x\": R\"$x$\", \"y\": R\"$f(x) = x \\sin\\left(x\\right)$\"},\n    title=R\"$\\textsf{Hello, this is a plot} \\quad x \\to f(x)$\",\n)\n\nst.header(R\"‚úÖ Fixing Plotly $\\LaTeX$ in Streamlit\")\nwith st.echo():\n    st.plotly_chart(fig)\n```\n\n*load-mathjax.js*\n\n```js\n// Access the main app window\nvar main_app = window.parent.document\n\n// Start the MathJax configuration before loading from the CDN\nmain_app.defaultView.MathJax = {\n    tex: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n    },\n    svg: {\n        fontCache: 'global'\n    }\n};\n\n(function () {\n    var script = main_app.createElement('script');\n    // Load the MathJax version that Plotly bundles when exporting to HTML\n    script.type = 'text/javascript';\n    script.async = true;\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG';\n    main_app.head.appendChild(script);\n    console.log(\"[edsaac] > Plotly should render LaTeX now!\");\n})();\n```\n\n### Environment\n- streamlit==1.44.0\n- plotly==6.0.1\n- python==3.12.9"
      }
    ]
  },
  {
    "issue_number": 7336,
    "title": "Streamlit Crashing with Error: `free(): double free detected in tcache 2`",
    "author": "hoggatt",
    "state": "closed",
    "created_at": "2023-09-14T22:39:07Z",
    "updated_at": "2025-06-09T09:35:20Z",
    "labels": [
      "type:bug",
      "feature:cache",
      "status:cannot-reproduce"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\n**UPDATE**: I believe the culprit is a bug in the `@st.cache_resource` logic and/or the way streamlit handles db connections that try to persist (had same issues using `session_state`). See my follow-up message below. \r\n\r\nMy initial issue:\r\n\r\nUnfortunately I have a fairly complicated app. My streamlit application is crashing and I'm not sure why. The error seems somewhat ominous, but there's really not much information that helps me figure out what's going on, which is why I've made this issue. \r\n\r\nI've seen this error on rare occasion when building my complex application. Normally, this happens after I update the file and hit 'rerun', so I just chalk it up to: something happens when I hot-reload a new version of the file that breaks things. Nothing I'm concerned about since I don't expect to do this in production.\r\n\r\nHowever, after adding a normal [selectbox](https://docs.streamlit.io/library/api-reference/widgets/st.selectbox), streamlit intermittently crashes when I use [this](https://github.com/hoggatt/st-combobox) simple custom component that gives me the ability to define my own auto complete function. I don't actually think it's related to the combobox itself, it's just that when the combobox is auto-completing, it's rerunning a lot. This was working before I added a normal `st.textbox`, but now it's completely broken. However, the fact that I saw it very infrequently before indicates to me it's probably not directly related to the selectbox. \r\n\r\n\r\n### Reproducible Code Example\r\n\r\n```Python\r\n# THIS IS PSEUDO-CODE #\r\n\r\nsearch_input = st.text_input()\r\n\r\n...\r\nmany conditional statements doing something with the search input including setting st.experimental_set_query_params at one point\r\nalso queries the database using a cached_resource mysql connector (see below)\r\n...\r\n\r\nvalue = st.selectbox(items based on search_input)\r\n\r\n# allow selecting something using a combobox (st-combobox) with autocomplete\r\ndef search_files(searchterm):\r\n  refine search based (in part) on value\r\nselected_value = st_combobox(search_files, ...)\r\n\r\n# this method is cached\r\nfile = get_file(selected_value)\r\n\r\n...\r\nsetting up controls for the plot based on the file loaded\r\nuses st.experimental_set_query_params at some point\r\nno database or complex cached stuff\r\n...\r\n\r\n# make plotly plot(s) here\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\nUnfortunately I'm not able to figure out exactly why this happens. It doesn't seem to happen consistently. \r\n\r\nHowever, often I see this error nearby: `2013 (HY000): Lost connection to MySQL server during query`. \r\n\r\nI have a method that looks like this:\r\n```\r\n@st.cache_resource\r\ndef loaddb():\r\n    creds = ...\r\n    dbconn = SQL(\"EXAMPLE\", \"example.com\", creds[\"username\"], creds[\"password\"], True)\r\n    return dbconn\r\n```\r\n\r\n### Expected Behavior\r\n\r\nI expect this crash not to happen. \r\n\r\n### Current Behavior\r\n\r\nThis is all that happens. Streamlit prints out two lines in the console, then hard-crashes:\r\n```\r\nfree(): double free detected in tcache 2\r\nAborted\r\n```\r\n\r\nSometimes I see this error too (maybe it's related to the cache_resource having issues?):\r\n```\r\n2013 (HY000): Lost connection to MySQL server during query\r\n```\r\nThis error doesn't seem to crash outright, but something tells me it's related. \r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.26.0\r\n- Python version: 3.11\r\n- Operating System: Ubuntu 20.04\r\n- Browser: Brave Version 1.57.62, Chromium: 116.0.5845.180 (Official Build) (64-bit)\r\n\r\n\r\n### Additional Information\r\n\r\nI'm going to be trying to nail down exactly why this issue is happening over the next few days (try to figure out how to reproduce it) but I wanted to make the issue now since it seems like a very strange error someone on the team might have insight into. ",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-7336)\n"
      },
      {
        "user": "hoggatt",
        "body": "With some further digging, I've found out two very useful pieces of information:\r\n\r\n1. If I type slowly into the combobox (so the app reloads less frequently), it does not crash nearly as often. \r\n2. If I remove the `@st.cache_resource` decorator from the `loaddb()` method described above, the app seems to work without any issues no matter how quickly/often it reloads (although the db connection is no longer cached). For those of you looking for a more satisfactory solution than \"don't use cache\", unfortunately the [st.session_state](https://docs.streamlit.io/library/api-reference/session-state) api causes the same issues.\r\n\r\n### My non-expert opinion\r\n\r\nThis `free(): double free detected in tcache 2` error is being generated in c++ or c code (possibly cpython stuff). My guess is that something in the `cache_resource` logic doesn't like very rapidly reloading the app (especially when the app has more complexity). My initial research indicates some variable is being freed in memory, then some other variable is being assigned to it. However, this only seems to happen in situations with more complex applications and frequent reloads. Since the `cache_resource` function is newer, my guess is there is some bug that shows up under these conditions with multiple threads/restarts. I hope this helps someone figure out what is going on. "
      },
      {
        "user": "hoggatt",
        "body": "I ran into the same error/behavior when trying to use `session_state` to store the database connection. This is strange and points to something a big deeper than just the cache_resource logic. Looks like restarting quickly in general + database connections that try to persist in any way cause issues. "
      }
    ]
  },
  {
    "issue_number": 5467,
    "title": "Altair chart clipped when no legend title",
    "author": "dougmet",
    "state": "closed",
    "created_at": "2022-10-03T11:52:03Z",
    "updated_at": "2025-06-09T09:33:45Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.altair_chart"
    ],
    "body": "### Summary\r\n\r\nWhen displaying an altair plot, with a legend at the top or the bottom without a title, the chart is being clipped at the sides, losing the y-axis labels.\r\n\r\nI'm not 100% sure if this is a streamlit issue or an altair issue. However, I do not experience this problem in a Jupyter notebook without streamlit so thought I'd start here.\r\n\r\n### Steps to reproduce\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-5467)\r\n\r\nCode snippet:\r\n\r\n```\r\nimport altair as alt\r\nimport streamlit as st\r\nfrom vega_datasets import data\r\n\r\niris = data.iris()\r\n\r\niris_chart = alt.Chart(iris).mark_point().encode(\r\n    x='petalWidth',\r\n    y='petalLength',\r\n    color=alt.Color('species', legend=alt.Legend(title=None, orient=\"top\")),\r\n)\r\n\r\nst.altair_chart(iris_chart, use_container_width=True)\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nI would expect that the y-axis label is rendered within the viewable area. If you set `title=\" \"` then you get the following:\r\n![image](https://user-images.githubusercontent.com/5878305/193568321-2d3043be-5fec-441f-b3ec-82327bdd5ca9.png)\r\n\r\n**Actual behavior:**\r\n\r\nWith `title=None` or `title=\"\"` I get the y-axis label clipped. You can just about see it's there:\r\n\r\n![image](https://user-images.githubusercontent.com/5878305/193568469-5c7bab07-9824-404f-94a1-2e2e3dad60fc.png)\r\n\r\n### Is this a regression?\r\n\r\nNo. But I am a new user.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.13.0\r\n- Python version: 3.10.6\r\n- Using Pipenv and Poetry\r\n- OS version: MacOS 12.6 (M1 arm64)\r\n- Browser version: Chrome 106.0.5249.91\r\n\r\n### Additional information\r\n\r\nAs a workaround you can simply set `legend=alt.Legend(title=\" \", orient=\"top\")`.\r\n",
    "comments": [
      {
        "user": "lukasmasuch",
        "body": "@dougmet Thanks for reporting this issue. I was able to reproduce this [here](https://issues.streamlitapp.com/?issue=gh-5467). I haven't figured out the root cause, but it does look like a bug in altair/vega lite. "
      },
      {
        "user": "willhuang1997",
        "body": "Just fyi, this also affects our internal charts like st.line_chart or st.bar chart. \r\n@jrieke  fyi\r\ncc: @blackary "
      },
      {
        "user": "willhuang1997",
        "body": "I did do some investigating too and I also came to the same conclusion that it does seem like an altair/vega lite bug."
      }
    ]
  },
  {
    "issue_number": 11041,
    "title": "Bug: enforce_filename_restriction Fails to Handle Double Extensions Like .tar.gz",
    "author": "moutayam",
    "state": "closed",
    "created_at": "2025-04-06T12:30:59Z",
    "updated_at": "2025-06-09T09:32:22Z",
    "labels": [
      "type:bug",
      "feature:st.file_uploader",
      "status:confirmed",
      "priority:P4",
      "feature:st.chat_input"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe enforce_filename_restriction function in Streamlit's backend validation logic does not correctly handle double extensions such as .tar.gz. For example:\n\n- When uploading a file named archive.tar.gz with allowed_types=['.tar.gz'], the function incorrectly identifies the extension as .gz instead of .tar.gz.\n- This results in the following error: \n`StreamlitAPIException: Invalid file extension: .gz. Allowed: ['.tar.gz']`\n\nThis issue arises because the function uses os.path.splitext() to extract the file extension, which splits the filename based on the last period (.). As a result, .tar.gz is treated as two separate extensions: .tar and .gz.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nuploaded_files = st.file_uploader(\"Upload .tar.gz file :sunglasses:\",\n                                  type=\"tar.gz\",\n                                  accept_multiple_files=True)\n```\n\n### Steps To Reproduce\n\n1. Attempt to upload a file named archive.tar.gz\n2. Observe the error:\n`StreamlitAPIException: Invalid file extension: .gz. Allowed: ['.tar.gz']`\n\n### Expected Behavior\n\nThe function should correctly identify `.tar.gz` as a valid extension and allow the file to be uploaded.\n\nActual Behavior\nThe function raises an exception because it incorrectly identifies the extension as `.gz`.\n\nImpact\nThis bug prevents users from uploading files with double extensions like `.tar.gz`, which are common in many use cases (e.g., compressed archives).\n\nProposed Solution\nModify the enforce_filename_restriction function to handle double extensions by checking for known multi-part extensions like `.tar.gz`.\n\n### Current Behavior\n\nError Message:\n```\nStreamlitAPIException: Invalid file extension: `.gz`. Allowed: ['.tar.gz']\n```\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.44.1\n- Python version: 3.12.3\n- Operating System: Windows 11 Pro, 23H2\n- Browser: Edge\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11041)\n"
      },
      {
        "user": "moutayam",
        "body": "I‚Äôve reviewed this issue and would like to volunteer to fix it. The problem arises because the current implementation of enforce_filename_restriction does not handle double extensions like `.tar.gz` properly. I propose the following solution:\n\n- Modify the function to combine base names and extensions for known multi-part extensions (e.g., .tar.gz).\n\n- Add comprehensive test cases to cover both valid and invalid file types.\n\n- Perform manual testing to ensure compatibility with real-world scenarios.\n\nIf this approach aligns with your expectations, I‚Äôll proceed with implementing the fix and submitting a pull request.\n\nLet me know if there are any additional considerations or preferences for the solution!"
      },
      {
        "user": "kajarenc",
        "body": "Hey @moutayam thank you for opening this issue!\n\nYeah, I can confirm that this is an example of an edge case we don't handle, and it would be great to handle it better!\nFeel free to work on the fix; the proposed plan sounds good to me!\n\nI am marking this bug as P4, since although this behavior could look counterintuitive (and should be fixed), the workaround for that right now is straightforward: specify `.gz.` in the list of allowed types!\n\nThank you for your work again!"
      }
    ]
  },
  {
    "issue_number": 7015,
    "title": "Buttons in dataframe / table cells with callbacks",
    "author": "dpinol",
    "state": "open",
    "created_at": "2023-07-14T10:11:01Z",
    "updated_at": "2025-06-08T01:53:42Z",
    "labels": [
      "type:enhancement",
      "feature:st.dataframe",
      "feature:st.data_editor"
    ],
    "body": "\r\n### Problem\r\n\r\nI'd like to display a table where a column displays links or buttons, so that when user clicks, a new page from a multipage application is opened.\r\n\r\n",
    "comments": [
      {
        "user": "carolinefrasca",
        "body": "Hey @dpinol,\r\n\r\nThanks for sharing this request! \r\n\r\nDisplaying a table with a link in a cell is already possible today via `st.dataframe` or `st.data_editor` (check out the doc [here](https://docs.streamlit.io/library/api-reference/data/st.column_config/st.column_config.linkcolumn)). Using this functionality, you could add a link to a specific page to your `st.dataframe` or `st.data_editor.`\r\n\r\nWhat's not possible today is displaying a button within a cell of `st.dataframe` or `st.data_editor` or programmatically switching navigating the pages of your app.\r\n\r\nThere is an open feature request **[here](https://github.com/streamlit/streamlit/issues/4832)** for programmatically navigating the pages of your multipage app ‚Äì please upvote that request if you'd like to see it prioritized."
      },
      {
        "user": "dpinol",
        "body": "yes https://github.com/streamlit/streamlit/issues/7015#issuecomment-1637172592 is what I'd need but it be nice if LinkColumn could be used to trigger it.\r\n\r\nthanks"
      },
      {
        "user": "CHerSun",
        "body": "Ability to display buttons with callbacks on tables could be nice sometimes to run actions on specific row (well, at least till there's a way to get selected row for dataframe)"
      }
    ]
  },
  {
    "issue_number": 11556,
    "title": "Anchored st.expander",
    "author": "davidhu-openai",
    "state": "open",
    "created_at": "2025-06-07T03:53:55Z",
    "updated_at": "2025-06-07T17:16:00Z",
    "labels": [
      "type:enhancement",
      "feature:st.expander"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nThe label of a `st.expander` will also move as you scroll down through its content. It would be nice to make it possible to anchor/freeze a `st.expander` label to make it easier to navigate/find the top after scrolling down.\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11556)\n"
      }
    ]
  },
  {
    "issue_number": 5053,
    "title": "Defered data for download button",
    "author": "Vinno97",
    "state": "open",
    "created_at": "2022-07-28T12:38:04Z",
    "updated_at": "2025-06-07T07:45:27Z",
    "labels": [
      "type:enhancement",
      "feature:st.download_button",
      "status:likely"
    ],
    "body": "### Problem\n\nThe download button currently expects its data to be available when declaring the button. If data needs to be read from disk (or worse: compiled multiple disk sources), this can make the app needlessly slow.\nIn my app, the data downloading is not a common use case, but the packing of the data for downloading is relatively expensive. Caching helps, but only when the data doesn't change.\n\n### Solution\n\nI propose a method to only load and preprocess (archive, pickle, etc) when the download is actually requested.\n\nI propose to also allow a function as a data type that gets called as soon as the download button is pressed. This callback then returns the actual data.\n\n```py\ndef get_data():\n    data = some_heavy_data_loading()\n    return data\n\nst.download_button(\"Download Data\", get_data, file_name=\"my-data.dat\")\n```\n\n\n**Possible additions:**\n\nCurrently a download button accepts `str`, `bytes`, `TextIO`, `BinaryIO`, or `io.RawIOBase`. With deferred loading, it would also be possible to accept a file pointer and stream the data to the user. This might bring huge speed and memory benefits when downloading large files.\n\n_Technically_ this streaming would also be possible without deferred loading, but then you're keeping unnecessary files open.\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-5053)\n",
    "comments": [
      {
        "user": "lukasmasuch",
        "body": "@Vinno97 Thanks for the suggestion. This would be indeed a nice addition to the download button, especially when dealing with large files. I will forward this feature request to our product team. "
      },
      {
        "user": "tomgallagher",
        "body": "In the meantime, I'm using this as a way of ensuring that page flow is not interrupted by large file prep\r\n\r\n```\r\ndef customDownloadButton(df):\r\n    if st.button('Prepare downloads'):\r\n        #prep data for downloading\r\n        csv = convert_df(df)\r\n        json_lines = convert_json(df)\r\n        parquet = convert_parquet(df)\r\n        tab1, tab2, tab3 = st.tabs([\"Convert to CSV\", \"Convert to JSON\", \"Convert to Parquet\"])\r\n        with tab1:\r\n            st.download_button('Download', csv, file_name='data.csv')\r\n        with tab2:\r\n            st.download_button('Download', json_lines, file_name='data.json')\r\n        with tab3:\r\n            st.download_button('Download', parquet, file_name='data.parquet')\r\n```"
      },
      {
        "user": "jrieke",
        "body": "Yes agree! Back when we implemented download button, I know that we also thought about allowing users to pass a function. Not sure if we cut that just to reduce scope or if there were any reasons against doing that. Will revisit!"
      }
    ]
  },
  {
    "issue_number": 11531,
    "title": "Need nav-bar ASAP",
    "author": "shriyashshitole",
    "state": "closed",
    "created_at": "2025-06-05T16:25:21Z",
    "updated_at": "2025-06-06T19:16:42Z",
    "labels": [
      "type:enhancement",
      "status:duplicate"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nNeed a horizontal navigation bar as most websites have. Below is my makeshift navbar, which doesn't even work properly :  \n\n![Image](https://github.com/user-attachments/assets/5c372cd9-971c-42c4-b1b6-d5cbf57f5dc2)\n![Image](https://github.com/user-attachments/assets/0b886e4c-930e-4b29-b433-4d7dee105cca)\n\n### Why?\n\n_No response_\n\n### How?\n\nst.navbar() would doüëç\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11531)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hello @shriyashshitole , thank you for filing this issue. We are actively working on a Top Navigation bar for multipage apps. The overarching tracking issue for this can be found here: https://github.com/streamlit/streamlit/issues/727. In the interest of streamlining our issues, I am going to close this one, but feel free to utilize the Reactions to upvote the other issue to show your interest. Thank you! "
      },
      {
        "user": "shriyashshitole",
        "body": "### Enhancement issue since **Nov 21, 2019**. \n### Working on it since **May 14, 2021**.\n### It's been 4 years, give an update at least!"
      }
    ]
  },
  {
    "issue_number": 10756,
    "title": "Custom components unmount and reload on switch_page",
    "author": "vquilon",
    "state": "open",
    "created_at": "2025-03-12T20:31:14Z",
    "updated_at": "2025-06-06T17:45:03Z",
    "labels": [
      "type:enhancement",
      "feature:custom-components",
      "feature:st.switch_page"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHi! I have found that when I change pages with `st.switch_pages` , If I have a Custom component loaded, it's unmounted and remounted, and it's a little bit glitched way to have the component. So is very inconsistent the state of my component.\n\nI have troubles to keep the state aligned to session. I would like to know if it's planned to have a better implementations, a more native  use of Custom Components in streamlit, and try to mount the react component one time only in the user session.\n\nI have an example with my custom navigation component in my repo. If run the demon with the checkbox \"with native way\", you can see the glitched unmount\n\nhttps://github.com/quiradev/streamlit-plugins/tree/main/examples/components/navbar/native_streamlit_multipage\n\nThanks in advance.\n\n### Reproducible Code Example\n\n```Python\nimport sys\nimport streamlit as st\n\nst.set_page_config(layout=\"wide\")\n\nif \"logged_in\" not in st.session_state:\n    st.session_state.logged_in = True\n\nUSER = \"admin\"\nPASSWORD = \"admin\"\n\npositions = [\"top\", \"under\", \"side\"]\n\ndef my_sidebar():\n    with st.sidebar:\n        st.write(\"Logged in:\", st.session_state.logged_in)\n        position_mode = st.radio(\n            \"Navbar position mode\",\n            positions,\n            index=positions.index(st.session_state.get(\"position_mode\", \"side\")),\n            key=\"position_mode_input\",\n        )\n        sticky_nav = st.checkbox(\n            \"Sticky navbar\",\n            value=st.session_state.get(\"sticky_nav\", True),\n            key=\"sticky_nav_input\"\n        )\n        native_way = st.checkbox(\n            \"Use native way\",\n            value=st.session_state.get(\"native_way\", True),\n            key=\"native_way_input\"\n        )\n        st.session_state[\"position_mode\"] = position_mode\n        st.session_state[\"sticky_nav\"] = sticky_nav\n        st.session_state[\"native_way\"] = native_way\n\n\ndef my_heading():\n    st.title(\"Streamlit Multi-Page App\")\n    st.subheader(\"This is a multi-page app with a native Streamlit navbar.\")\n    st.markdown(\"> But only vizualize well with navbar on `top` position\")\n\n\ndef login():\n    _, col, _ = st.columns([2, 6, 2])\n    with col:\n        with st.form(key=\"login_form\"):\n            user = st.text_input(\"Username\")\n            password = st.text_input(\"Password\", type=\"password\")\n            submitted = st.form_submit_button(\"Submit\")\n\n        with st.expander(\"Psst! Here's the login info\"):\n            st.write(f\"Username and Password is:\")\n            st.markdown(f\"\"\"\n            ```bash\n            {USER}\n            ```\n            \"\"\")\n\n    if submitted:\n        if user == USER and password == PASSWORD:\n            st.session_state.logged_in = True\n            st_switch_home()\n        else:\n            st.toast(\"Invalid username or password\", icon=\"‚ùå\")\n\n\ndef account():\n    st.write(\"Account page\")\n    st.caption(\"This is a protected page. Only logged in users can view this.\")\n\n\ndef settings():\n    st.button(\"Theme\")\n\n\ndef logout():\n    st.session_state.logged_in = False\n    st.session_state.app_id = None\n    st.session_state.active_app_id = None\n    st.rerun()\n\nst.logo(\n    image=\"https://streamlit.io/images/brand/streamlit-logo-primary-colormark-darktext.svg\",\n    icon_image=\"https://streamlit.io/images/brand/streamlit-mark-color.png\"\n)\n\ndashboard = st.Page(\"dashboard.py\", title=\"Dashboard\", icon=\":material/dashboard:\", default=True, url_path=\"dashboard\")\nlogin_page = st.Page(login, title=\"Log in\", icon=\":material/login:\", url_path=\"login\")\naccount_page = st.Page(account, title=\"Account\", icon=\":material/account_circle:\", url_path=\"account\")\nsettings_page = st.Page(settings, title=\"Settings\", icon=\":material/settings:\", url_path=\"settings\")\nbugs = st.Page(\"reports/bugs.py\", title=\"Bug reports\", icon=\":material/bug_report:\", url_path=\"bugs\")\nbugs2 = st.Page(\"reports/bugs.py\", title=\"Bug reports2\", icon=\":material/bug_report:\", url_path=\"bugs2\")\nbugs3 = st.Page(\"reports/bugs.py\", title=\"Bug reports3\", icon=\":material/bug_report:\", url_path=\"bugs3\")\nalerts = st.Page(\"reports/alerts.py\", title=\"System alerts\", icon=\":material/notification_important:\", url_path=\"alerts\")\nsearch = st.Page(\"tools/search.py\", title=\"Search\", icon=\":material/search:\", url_path=\"search\")\nhistory = st.Page(\"tools/history.py\", title=\"History\", icon=\":material/history:\", url_path=\"history\")\nlogout_page = st.Page(logout, title=\"Log out\", icon=\":material/logout:\", url_path=\"logout\")\n\n# HERE IS THE CHANGE\nfrom streamlit_plugins.components.navbar import st_navbar, build_menu_from_st_pages, NavbarPositionType, st_navigation, st_switch_home\n\nmy_sidebar()\n\nposition_mode: NavbarPositionType = st.session_state.get(\"position_mode\", \"top\")\nsticky_nav = st.session_state.get(\"sticky_nav\", True)\nnative_way = st.session_state.get(\"native_way\", False)\n\nif st.session_state.logged_in:\n    if position_mode == \"top\":\n            my_heading()\n    \npage = st_navigation(\n    {\n        \"\": [dashboard],\n        \"Reports\": [alerts],\n        \"Tools\": [search, history, bugs, bugs2, bugs3]\n    },\n    section_info={\n        \"Reports\": {\"icon\": \":material/assessment:\"},\n        \"Tools\": {\"icon\": \":material/extension:\"}\n    },\n    position_mode=position_mode if st.session_state.logged_in else \"hidden\", sticky_nav=sticky_nav,\n    login_page=login_page, logout_page=logout_page,\n    account_page=account_page,\n    settings_page=settings_page,\n    native_way=native_way\n)\n\nif st.session_state.logged_in:\n    # SOME TEXT ABOVE THE NAVBAR\n    page.run()\n\nelse:\n    login_page._can_be_called = True\n    login_page.run()```\n\n### Steps To Reproduce\n\nUse Custom component with st.navigation, and when change page the component change but other streamlit components if are common in multiple pages are preserved, because the html dont change only the custom components are removed.\n\n### Expected Behavior\n\nKeep mounted the custom components dont removed or unmounted.\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.42.0\n- Python version: 3.11\n- Operating System: Windows\n- Browser: Chrome\n\n\n### Additional Information\n\n![Image](https://github.com/user-attachments/assets/268b23a1-8b04-4623-a15f-32faff7ff75c)",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-10756)\n"
      },
      {
        "user": "kajarenc",
        "body": "Hello @vquilon thank you for opening this issue!\n\nUnfortunately, it was difficult to reproduce this issue based on the code you provided. \n\nIf I understand correctly, the main problem you described is that using `switch_page` inside your custom component code leads to a custom component remount and, therefore, the loss of the custom component's react state. \n\nThe main enhancement request here is to have more convenient primitives for Custom Components to switch page.\nIs this correct? "
      },
      {
        "user": "vquilon",
        "body": "I did deep research on the internal flow of Streamlit, both front and back. I noticed that other widgets, including custom ones, retain their state during the switch_page event.\n\nHowever, a custom component can have additional internal states.\n\nWhat I can't figure out is why the <iframe> element is removed on the front end and then re-rendered. I found a function that filters and cleans all custom component iframes. The switch_page event is interpreted as a new session event but without changing the session_id or the widget session states.\n\nMy component retains the StreamlitValue, but it gets remounted, causing a slight flicker before initializing again.\n\nI have a Streamlit Cloud page example that you can check out. If you click the checkbox \"Use native_way\", it works differently. If it‚Äôs not checked, only the main area changes without switching pages.\n\nhttps://plugins-navbar.streamlit.app/"
      }
    ]
  },
  {
    "issue_number": 11541,
    "title": "ButtonGroup.select() fails when options use format_func or are not primitive strings",
    "author": "dmitrkozlovsk",
    "state": "open",
    "created_at": "2025-06-06T09:32:13Z",
    "updated_at": "2025-06-06T17:30:29Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P4",
      "feature:app-testing"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nButtonGroup.select(...) in streamlit.testing.v1 crashes with a TypeError when used with option objects (not plain strings),  This makes it impossible to programmatically select a button in tests unless the value is a raw string.\n\nCode below fails with `TypeError: 'in <string>' requires string as left operand, not Option`\n\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\noptions = ['List', 'Create', 'Update']\nst.segmented_control(\n            label=\"Section\",\n            options=options,\n            selection_mode=\"single\",\n            default=options[0],\n        )\n#---- in test with pytest\nfrom streamlit.testing.v1 import AppTest\n\ndef test_button_group_selection():\n    at = AppTest.from_file(\"app.py\").run()\n    at.button_group[0].select(\"List\").run()  # or even\n```\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\nCalling .select() with an actual entry from .options should work regardless of how options are displayed (with or without format_func). At least, passing a value that already exists in .value should not break.\n\n### Current Behavior\n\nTypeError: 'in <string>' requires string as left operand, not Option\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.12\n- Operating System: macOS 15.5\n- Browser:  testing mode\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11541)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hello @dmitrkozlovsk, thank you for filing this issue!\n\nWe're aware of gaps in our AppTest functionality, and unfortunately, there's no immediate timeline for a resolution. We'll leave this issue open so we can gauge interest and better prioritize when to address it. Thanks for your understanding."
      }
    ]
  },
  {
    "issue_number": 11327,
    "title": "Plotly chart `Reset axes` not working after `Fullscreen`",
    "author": "ghilesmeddour",
    "state": "closed",
    "created_at": "2025-05-12T08:38:45Z",
    "updated_at": "2025-06-06T16:31:20Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.plotly_chart"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nHi,\n\nPlotly chart `Reset axes` is not working after `Fullscreen`.\n\n### Reproducible Code Example\n\n```Python\nimport plotly.express as px\nimport streamlit as st\n\ndata_canada = px.data.gapminder().query(\"country == 'Canada'\")\nfig = px.bar(data_canada, x=\"year\", y=\"pop\")\n\nst.plotly_chart(fig)\n```\n\n### Steps To Reproduce\n\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-11327)\n\n1. Make a selection in the graph\n2. Click `Fullscreen`\n3. `Reset axes` is not working\n\n### Expected Behavior\n\n_No response_\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.0\n- Plotly version : 6.0.1\n- Python version: 3.12\n- Operating System: Windows 11\n- Browser: Chrome\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11327)\n"
      }
    ]
  },
  {
    "issue_number": 2011,
    "title": "Would be nice to have a resizable text_area, which adapt length to the content. ",
    "author": "nthmost",
    "state": "open",
    "created_at": "2020-09-17T17:24:04Z",
    "updated_at": "2025-06-06T14:53:19Z",
    "labels": [
      "type:enhancement",
      "feature:st.text_area"
    ],
    "body": "Would also be nice to have a resizable text_area, which adapt length to the content. Thank you for the great work!\r\n\r\n_Originally posted by @P-mir in https://github.com/streamlit/streamlit/issues/277#issuecomment-694138238_",
    "comments": [
      {
        "user": "rluong003",
        "body": "Hi, I'm new to open source contributions. May I work on this?"
      },
      {
        "user": "Poseidonx",
        "body": "Has there been any update to this?"
      },
      {
        "user": "jrieke",
        "body": "`text_area` is resizable since a while, closing."
      }
    ]
  },
  {
    "issue_number": 11238,
    "title": "Add ability to remove link to Google and ChatGPT for Exception, even when using Localhost (#11021)",
    "author": "carlosicc",
    "state": "open",
    "created_at": "2025-04-30T13:47:08Z",
    "updated_at": "2025-06-06T14:41:30Z",
    "labels": [
      "type:enhancement",
      "feature:st.exception"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nRelated issue: https://github.com/streamlit/streamlit/issues/11021\n\nHi! A lot of companies do not permit the use of ChatGPT, due potential data leaks, GDPR, or even Commercial or Intellectual Property conflicts. Streamlit is widely used, and constantly used for internal end users to test something. \n\n### Why?\n\nSo, if I create a simple ST app for our Data Science team (who will run the app locally / localhost for testing), and something fails (i.e. error shows queries, tables, PII, etc.), the end users will not hesitate in clicking the ChatGPT button. We can't share any info with ChatGPT. We have our corporate Virtual Assistant equivalent for these type of tasks. \n\n### How?\n\nA simple way to disable this feature, even if it runs only on localhost. \n\n### Additional Context\n\nRelated issue: https://github.com/streamlit/streamlit/issues/11021",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11238)\n"
      },
      {
        "user": "ooloth",
        "body": "Underlining that this is quite important for enterprise security when operating on datasets that include information that should absolutely not be included in public Google or ChatGPT searches. Please do make this configurable."
      }
    ]
  },
  {
    "issue_number": 5009,
    "title": "Detect if the app is in Light/Dark mode at runtime",
    "author": "vhoulbreque",
    "state": "closed",
    "created_at": "2022-07-21T11:26:26Z",
    "updated_at": "2025-06-05T22:18:45Z",
    "labels": [
      "type:enhancement",
      "feature:custom-components",
      "area:styling",
      "feature:theming"
    ],
    "body": "### Problem\n\nWhile developing custom styling components, it is impossible right now to detect if the app is in Light or Dark mode. I would like to be able to detect what mode the user is viewing the app in in order to choose the correct custom styling. \n\n### Solution\n\n1. Create a new API function: `get_current_style`.\n\t  ```python\n\t  if st.get_current_style() == \"light\":\n\t      # do something\n\t  elif st.get_current_style() == \"dark\":\n\t      # do something else\n\t  ```\n\n2. Add this info to `get_config_option`.\n    \n\n### Additional context\n\nSome people have already discussed it here: https://discuss.streamlit.io/t/check-if-the-app-is-in-dark-mode-or-light-mode-at-runtime/20222\n\n---\n\nCommunity voting on feature requests enables the Streamlit team to understand which features are most important to our users.\n\n**If you'd like the Streamlit team to prioritize this feature request, please use the üëç (thumbs up emoji) reaction in response to the initial post.**\n\n![Views](https://api.views-badge.org/badge/st-issue-5009)\n",
    "comments": [
      {
        "user": "lukasmasuch",
        "body": "@vinzeebreak Thanks for suggesting this feature, this would definitely be useful! Unfortunately, it might be a bit more complex to implement since we currently do not have the info in the backend on which theme is selected. Currently, only the frontend knows about the selection."
      },
      {
        "user": "sfc-gh-pkommini",
        "body": "There seems to be a [way for custom components](https://docs.streamlit.io/library/components/components-api#working-with-themes) to access this information:\r\n\r\nin the react component via `this.props.theme.base`\r\nand in CSS via\r\n```css\r\n.mySelector {\r\n  color: var(--base);\r\n}\r\n```\r\n\r\n\r\n"
      },
      {
        "user": "jrieke",
        "body": "# Update\r\n\r\nHey all, just wanted to give a quick update for everyone watching. We definitely want to support this at some point but don't have a concrete timeline at the moment since it's a bit more complicated as Lukas mentioned. Please keep upvoting, then it's more likely we'll prioritize!"
      }
    ]
  },
  {
    "issue_number": 11536,
    "title": "Expose all theming config options in `st.context.theme`",
    "author": "jrieke",
    "state": "open",
    "created_at": "2025-06-05T22:16:28Z",
    "updated_at": "2025-06-05T22:18:02Z",
    "labels": [
      "type:enhancement",
      "feature:theming",
      "feature:st.context"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nIn 1.46, we'll release `st.context.theme`, which is an attribute dict to contain information about the currently active theme. For now, this will only contain `st.context.theme.type`, which returns either `\"light\"` or `\"dark\"` based on which theme is active. \n\nBut we should also expose the values of all other theming config options in this dict!\n\n### Why?\n\nLet us know which concrete use cases you have and which parameters you want to access!\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11536)\n"
      }
    ]
  },
  {
    "issue_number": 8149,
    "title": "Could not run streamlit on `3000` port. ",
    "author": "kajarenc",
    "state": "closed",
    "created_at": "2024-02-13T15:44:55Z",
    "updated_at": "2025-06-05T17:50:41Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P4",
      "feature:cli"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen I try to run stremalit application with `streamlit run app.py --server.port=3000` the streamlit app failed to load. \r\n\r\nThis happens because we detect the dev environment based on port number, so in the case of `server.port=3000` it is falsly thinks that we are in development mode. \n\n### Reproducible Code Example\n\n```Python\nstreamlit run app.py --server.port=3000\n```\n\n\n### Steps To Reproduce\n\nTry to run arbitrary streamlit application on `3000` port\n\n### Expected Behavior\n\nIt should work correctly, similarly to any other available port.\n\n### Current Behavior\n\nIt fails to load. \n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version:\r\n- Python version:\r\n- Operating System:\r\n- Browser:\r\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-8149)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@kajarenc I agree that we should somehow make port 3000 usable. Maybe we should just migrate our internal development to a port that is much less likely to be used, e.g. `51231`. But for a short term solution, I created added a warning here to show when the port is set to 3000 to make this a bit more obvious: https://github.com/streamlit/streamlit/pull/8152 What do you thing about that?\r\n\r\n"
      }
    ]
  },
  {
    "issue_number": 11524,
    "title": "Discrepancy: st.expander key parameter missing in distributed wheels (e.g., v1.10.0 - v1.45.1 for Python 3.13/Win) despite documentation and PR #4290",
    "author": "PyPIPuzzle007",
    "state": "closed",
    "created_at": "2025-06-05T01:00:43Z",
    "updated_at": "2025-06-05T17:08:57Z",
    "labels": [
      "type:enhancement",
      "status:duplicate"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nst.expander() is documented to accept a key parameter since Streamlit v1.10.0 (PR #4290). However, when installing various Streamlit versions (tested 1.10.0 through 1.45.1) via pip on Python 3.13.2 (64-bit) on Windows 10, the actual source code for the expander method within the distributed wheel files on PyPI does not include the key parameter. This results in a TypeError when attempting to use this documented feature.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\nimport inspect # For further debugging if needed by maintainers\n\nst.set_page_config(page_title=\"Expander Key Test\")\nst.write(f\"Streamlit version: {st.__version__}\")\n\nst.subheader(\"Attempting to use st.expander with 'key'\")\n\ntry:\n    with st.expander(\"Test Expander with Key\", key=\"my_expander_key_123\"):\n        st.write(\"This content should appear if 'key' is supported.\")\n    st.success(\"st.expander with 'key' parameter was accepted.\")\nexcept TypeError as e:\n    st.error(f\"TypeError encountered: {e}\")\n    st.subheader(\"Signature of st.expander from this environment:\")\n    if hasattr(st, 'expander'):\n        st.code(str(inspect.signature(st.expander)))\n    else:\n        st.write(\"st.expander not found.\")\nelse:\n    st.write(\"No TypeError, but please verify 'key' functionality if this message appears without error.\")\n\nst.subheader(\"Attempting st.expander WITHOUT 'key'\")\ntry:\n    with st.expander(\"Test Expander without Key\"):\n        st.write(\"This content will appear.\")\n    st.success(\"st.expander WITHOUT 'key' parameter works as expected.\")\nexcept Exception as e:\n    st.error(f\"Error with expander without key: {e}\")\n```\n\n### Steps To Reproduce\n\nSet up an environment with Python 3.13.2 (64-bit) on Windows 10.\nEnsure no conflicting Python installations (e.g., disable Microsoft Store app execution aliases for python.exe, python3.exe).\nIn a clean virtual environment (or global, though the issue persists even in venvs):\npip install --no-cache-dir streamlit==1.45.1 # (or 1.44.0, 1.39.0, down to 1.10.0)\nUse code with caution.\nBash\nRun the \"Reproducible Code Example\" above as a Streamlit app.\nObserve the TypeError for the expander using the key parameter.\n\n### Expected Behavior\n\nWhen running the reproducible code example with Streamlit versions >= 1.10.0, the st.expander(\"Test Expander with Key\", key=\"my_expander_key_123\") call should execute without a TypeError, and the expander should be rendered, respecting the key for state management if applicable. The inspect.signature(st.expander) should show key as an accepted parameter.\n\n### Current Behavior\n\nTypeError: LayoutsMixin.expander() got an unexpected keyword argument 'key'\n\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\nIt's unclear if it's a recent regression or a long-standing packaging discrepancy. Testing with an advanced_wheel_inspector.py script (see Gist linked in Additional Information) on wheels downloaded directly from PyPI shows the key parameter missing from the expander source code in streamlit/elements/layouts.py for versions 1.45.1, 1.44.0, 1.39.0, 1.35.0, 1.30.0, 1.25.0, and even 1.10.0 when wheels for Python 3.13/Windows are inspected. This suggests the key parameter may have been missing from the distributed code for st.expander for these combinations for a long time, despite being documented and intended since PR #4290.\n\nStreamlit version: Tested 1.45.1, 1.44.0, 1.39.0, 1.35.0, 1.30.0, 1.25.0, 1.10.0 (all from PyPI)\nPython version: 3.13.2 (64-bit, CPython from python.org)\nOperating System: Windows 10 Pro\nBrowser: Chrome\n\n### Additional Information\n\nOfficial Documentation for st.expander (shows key parameter):\n[https://docs.streamlit.io/library/api-reference/layout/st.expander](https://www.google.com/url?sa=E&q=https%3A%2F%2Fdocs.streamlit.io%2Flibrary%2Fapi-reference%2Flayout%2Fst.expander)\n\nGitHub PR #4290 introducing key to st.expander for v1.10.0:\n[https://github.com/streamlit/streamlit/pull/4290](https://www.google.com/url?sa=E&q=https%3A%2F%2Fgithub.com%2Fstreamlit%2Fstreamlit%2Fpull%2F4290)\n\nadvanced_wheel_inspector_v2.py Gist:\nhttps://gist.github.com/PyPIPuzzle007/3436ad13181555741cbafcc26c7ebbdf\n\nSummary of advanced_wheel_inspector_v2.py findings:\n\nThe script directly downloaded and extracted .whl files from PyPI for the listed Streamlit versions. For all tested versions (1.10.0 through 1.45.1), inspection of the streamlit/elements/layouts.py (or equivalent) source file within the wheel showed that the def expander(...) signature and its implementation did not include the key parameter. This indicates a discrepancy between the documented/intended API and the code being distributed in the wheels selected by pip for Python 3.13 on Windows.\n\nadvanced_wheel_inspector_v2.py findings/wheel_inspector_output.txt Gist:\nhttps://gist.github.com/PyPIPuzzle007/2519e0c84df10c30d90f9f6b5bd5cb5f",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11524)\n"
      },
      {
        "user": "PyPIPuzzle007",
        "body": "Updated: Sorry! Missed Gist links."
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @PyPIPuzzle007 , thank you for filing this issue!\n\nI appreciate the reproducible code and the thoroughness by going through many versions of Streamlit! With that said, `st.expander` does not have a `key` param, so this behavior is expected.\n\nTo better understand your usecase, is there something in particular you are attempting to do that would benefit from a key param for `st.expander`? Thanks in advance!"
      }
    ]
  },
  {
    "issue_number": 8904,
    "title": "Make `st.dialog` even wider",
    "author": "christian-heins-velero",
    "state": "open",
    "created_at": "2024-06-14T10:08:03Z",
    "updated_at": "2025-06-05T14:58:38Z",
    "labels": [
      "type:enhancement",
      "feature:st.dialog"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nAt the moment the experimental_dialog size when set to large it enlarges the dialog window to the bottom, it would be great to have a wide mode so we can see and place more elements on the current windows, otherwise we have to always scroll down, lets say we want to display the profile of a selection with options and tables, images and charts etc.\n\n### Why?\n\nGive a much better experience to the user, not looking at the information in a small vertical only window.\n\n### How?\n\nexpanding the inside options of the st.dialog(dialog_mode=\"wide\",  size=\"large\")\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8904)\n"
      },
      {
        "user": "sfc-gh-jrieke",
        "body": "Hey, that's already supported with `width=\"large\"`, see the [docs](https://docs.streamlit.io/develop/api-reference/execution-flow/st.dialog). \r\n\r\nE.g. here's the large dialog:\r\n\r\n![CleanShot 2024-06-14 at 12 17 57](https://github.com/streamlit/streamlit/assets/127552870/409669b1-7df0-44ec-8e56-b2f1a7953b41)\r\n\r\nVs a standard dialog: \r\n\r\n![CleanShot 2024-06-14 at 12 18 26](https://github.com/streamlit/streamlit/assets/127552870/41013c77-881d-4493-9473-c82caec0b925)\r\n\r\nOr are you saying you want an *even larger* dialog?\r\n"
      },
      {
        "user": "christian-heins-velero",
        "body": "exactly, for example the option to cover a greater area, see in bigger screens or with greater resolutions the window remains very short and a great a mount of wider real estate is still available.\r\n\r\n![Screenshot 2024-06-14 123209](https://github.com/streamlit/streamlit/assets/149429263/0cebf8d9-0a79-4713-ac8f-9a1ae9628a3c)\r\n"
      }
    ]
  },
  {
    "issue_number": 11527,
    "title": "Differently colored tags in st.multiselect",
    "author": "LPHallo",
    "state": "open",
    "created_at": "2025-06-05T12:48:18Z",
    "updated_at": "2025-06-05T14:14:30Z",
    "labels": [
      "type:enhancement",
      "feature:st.multiselect"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nAdd the ability to have the option tags differently coloured rather than only having one default colour in st.multiselect.  \n\n### Why?\n\nLet us assume for example we plot multiple data sets on a scatter plot each represented by a single colour, rather than having labels inside the plot obstructing the view, we would like the chosen data set tags to be coloured in the same colour as the points in the set.\n\nThis problem can be extended to any plot type where we represent different data sets e.g. barplots, pie charts,\n\n### How?\n\na list of colours (of same size as options)  or dictionary {option1: colour1, option2:colour2} as additional input, let us call it tag_colors\n\nstreamlit. multiselect(label, options, tag_colors = None, default=None, format_func=special_internal_function, key=None, help=None, on_change=None, args=None, kwargs=None, *, max_selections=None, placeholder=None, disabled=False, label_visibility=\"visible\", accept_new_options=False)\n\n### Additional Context\n\nhttps://discuss.streamlit.io/t/different-colours-for-multiselect-options/64727",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11527)\n"
      }
    ]
  },
  {
    "issue_number": 11207,
    "title": "container width parameter for st.toggle",
    "author": "madhukarjadhav736",
    "state": "open",
    "created_at": "2025-04-28T07:35:47Z",
    "updated_at": "2025-06-05T13:25:14Z",
    "labels": [
      "type:enhancement",
      "feature:st.toggle"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\ncontainer width parameter for st.toggle is must as small st.toogle sometime doesnt look good among large st buttons\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11207)\n"
      },
      {
        "user": "jrieke",
        "body": "Hey @madhukarjadhav736! Can you give a few more details what you actually want here? Do you want the complete toggle component (i.e. the toggle + its label) to stretch e.g. to the container width? Or do you want to change the size of the toggle itself, e.g. to make it as big as a button? A screenshot or drawing of what you want to achieve would also help a lot!"
      }
    ]
  },
  {
    "issue_number": 8235,
    "title": "st.dataframe new parameter: hide_header, hide_index for column headers",
    "author": "davidsanchez222",
    "state": "open",
    "created_at": "2024-03-04T20:47:24Z",
    "updated_at": "2025-06-05T06:12:04Z",
    "labels": [
      "type:enhancement",
      "feature:st.dataframe",
      "feature:st.table",
      "feature:st.data_editor"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\r\n- [X] I added a descriptive title and summary to this issue.\r\n\r\n### Summary\r\n\r\nst.dataframe parameter -> hide_header: bool | None = None. Just like hide_index, but for the column headers of a pd.DataFrame. Useful for displaying just rows extracted from pd.DataFrame instances.\r\n\r\n### Why?\r\n\r\nI want to be able to take a row from a dataframe and render it in my streamlit app. I want to have a lot of separate rows rendered separately, but near each other, so having a column header each time would be redundant. The only solution to this as seen in this screenshot is to style the dataframe within pandas and then render the html string of the dataframe. This is hacky and does not get the UI styles and functionality that a st.dataframe object would. Also, pandas.Styler has bugs and it adds trailing zeros to my floating point values.\r\n\r\n![Screenshot 2024-03-04 at 3 33 35‚ÄØPM](https://github.com/streamlit/streamlit/assets/84427300/ad244052-af93-4908-8944-d4255c517b33)\r\n\r\n\r\nTwo discussions have been made for this topic and the suggest the hacky html method:\r\nhttps://discuss.streamlit.io/t/hoe-create-table-without-header/23822\r\nhttps://discuss.streamlit.io/t/st-dataframe-remove-the-header-row/49751\r\n\r\n\r\n\r\n### How?\r\n\r\nHow could I go about adding this feature?\r\n\r\n### Additional Context\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8235)\n"
      },
      {
        "user": "jrieke",
        "body": "For everyone seeing/upvoting this: please make sure to describe your exact use case here. If we see good use cases, that will help us prioritize this feature!"
      },
      {
        "user": "ds7608",
        "body": "This would be pretty useful specially when having to display multiple tables on the same page and trying to save screen real estate. The header takes up a bunch of space and sometimes it's not needed."
      }
    ]
  },
  {
    "issue_number": 8195,
    "title": "Scan for `config.toml` file relative to main app file before defaulting to working directory",
    "author": "sfc-gh-dmatthews",
    "state": "closed",
    "created_at": "2024-02-24T01:06:22Z",
    "updated_at": "2025-06-05T00:54:06Z",
    "labels": [
      "type:enhancement",
      "feature:config"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [X] I added a descriptive title and summary to this issue.\n\n### Summary\n\nCurrently, Streamlit looks for `.streamlit/config.toml` in the directory where `streamlit run` is executed. If you execute `streamlit run app/main.py` then Streamlit will not see or use `app/.streamlit/config.toml`.\n\n### Why?\n\nThis creates a problem on Community Cloud, for example. When you deploy more than one app from the same repository, you are restricted to one, global `config.toml` file which must be placed in `.streamlit/config.toml` in the root of the repository.\n\n### How?\n\nAlthough there could be a Community-Cloud-specific solution to this, Streamlit could also be modified to look for (and prioritize) any `.streamtlit/config.toml` files that exist relative to the entry-point file.\r\n\r\nThis is similar to how it works for `requirements.txt` files: first check relative to the app's main file, then check in the root of the repo (where the command is executed). This principle could be extended for all `.streamlit`, environment, or configuration-like files.\n\n### Additional Context\n\nRelated to #7578",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-8195)\n"
      }
    ]
  },
  {
    "issue_number": 9872,
    "title": "`st.column_config.TimeColumn` does not enforce `step`",
    "author": "edsaac",
    "state": "open",
    "created_at": "2024-11-14T14:20:28Z",
    "updated_at": "2025-06-05T00:53:02Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor",
      "feature:st.column_config"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nNot sure if I am missing the purpose of the `step` argument in `st.column_config.TimeColumn`, but it seems to be completely ignored.  The `min_value` and `max_value` arguments are enforced with invalid inputs, but nothing seems to happen with `step`.  \r\n\r\n[output.webm](https://github.com/user-attachments/assets/fb96d90f-f1a2-4e16-8153-1974a7e4b23d)\r\n\r\n\r\n\r\n### Reproducible Code Example\r\n\r\n[![Open in Streamlit Cloud](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://issues.streamlitapp.com/?issue=gh-9872)\r\n\r\n```Python\r\nfrom datetime import time, timedelta\r\nimport pandas as pd\r\nimport streamlit as st\r\n\r\ndata_df = pd.DataFrame(\r\n    {\r\n        \"appointment\": [\r\n            time(12, 0),\r\n            time(18, 15),\r\n            time(9, 30),\r\n            time(16, 45),\r\n        ]\r\n    }\r\n)\r\n\r\nst.data_editor(\r\n    data_df,\r\n    column_config={\r\n        \"appointment\": st.column_config.TimeColumn(\r\n            \"Appointment\",\r\n            min_value=time(8, 0, 0),\r\n            max_value=time(19, 0, 0),\r\n            format=\"hh:mm A\",\r\n            step=timedelta(minutes=15),\r\n        ),\r\n    },\r\n    hide_index=True,\r\n    num_rows=\"dynamic\",\r\n)\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n1. Run the script\r\n2. Edit a cell typing a valid time, for example `10:00AM` :heavy_check_mark: \r\n3. Enter an invalid time, for example `6:00AM`  :heavy_check_mark: \r\n4. Enter an invalid time, for example, `11:13AM` :no_entry_sign: \r\n\r\n### Expected Behavior\r\n\r\nWhen the data entered by the user doesn't adhere to the stepping configuration, the value should:\r\n- Be rounded to the nearest valid value?\r\n- Be dropped and invalidate the time input?\r\n\r\nThis is more or less described [here](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time#using_the_step_attribute) but not sure what is the expectation from `st.data_editor`.\r\n\r\n### Current Behavior\r\n\r\n`step` is ignored :(\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.40.1\r\n- Python version: 3.12\r\n- Operating System: N/A\r\n- Browser: Firefox & Chrome\r\n\r\n\r\n### Additional Information\r\n\r\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9872)\n"
      },
      {
        "user": "lukasmasuch",
        "body": "@edsaac Thanks for reporting this issue. I was able to reproduce it [here](https://issues.streamlit.app/?issue=gh-9872) and verify that the validation for the step in TimeColumn has not been implemented yet. "
      },
      {
        "user": "ashm-dev",
        "body": "The problem was that the dates were being compared as strings, and since each string is unique, this was causing a crash. I am working on fixing this error and will soon submit my PR with the attached code.\n\nFor a more accurate comparison, I changed the algorithm, converting dates to seconds for a more accurate check"
      }
    ]
  },
  {
    "issue_number": 11509,
    "title": "STREAMLIT_SERVER_BASE_URL_PATH not working with `docker run -e STREAMLIT_SERVER_BASE_URL_PATH=test_path`",
    "author": "frankcaoyun",
    "state": "open",
    "created_at": "2025-06-04T03:39:51Z",
    "updated_at": "2025-06-04T20:29:54Z",
    "labels": [
      "type:bug",
      "area:docker",
      "status:awaiting-user-response",
      "status:cannot-reproduce"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nI'm trying to run a Streamlit application docker container with the `STREAMLIT_SERVER_BASE_URL_PATH` environment variable according to the [documentation here](https://docs.streamlit.io/develop/concepts/configuration/options). The same configuration worked if I include the configuration in the `.streamlit/.config.toml` when building the image, but not working when trying to run the container with the environment variable.\n\nRelevant discussion:\nhttps://discuss.streamlit.io/t/run-streamlit-app-on-specific-url-path/32147\n\n### Reproducible Code Example\n\n```Python\ndocker run --rm --env STREAMLIT_SERVER_BASE_URL_PATH=test -p 8501:8501 <image_id>\n```\n\n### Steps To Reproduce\n\nTo reproduce the issue:\n1. Create a streamlit application with a docker image\n2. Run the docker image with the `-e STREAMLIT_SERVER_BASE_URL_PATH=test_path` argument\n3. You will see that the application is running on `Local URL: http://localhost:8501` instead of `Local URL: http://localhost/test_path:8501`\n\n### Expected Behavior\n\nThe `-e STREAMLIT_SERVER_BASE_URL_PATH=test_path` should work and the applicaiton should run on `localhost/test_path`\n\n### Current Behavior\n\nOnly runs on `localhost`\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.45.1\n- Python version: 3.13.2\n- Operating System: Mac OS 15.5 (24F74)\n- Browser: Chrome Version 137.0.7151.41 (Official Build) (arm64)\n\n\n### Additional Information\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11509)\n"
      },
      {
        "user": "frankcaoyun",
        "body": "Screenshots:\n\n<img width=\"550\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8f1bee67-83e2-42fc-8eb0-a73a8f8dfaf4\" />\n\n<img width=\"844\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b5ea5056-8421-4e0b-975a-56a4d379286b\" />"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hello @frankcaoyun , thank you for filing this issue. I have attempted to reproduce your issue but have not been able to do so yet. \n\nFor context, here is my Dockerfile:\n\n```dockerfile\nFROM python:3.11-slim\n\nWORKDIR /app\n\nRUN pip install streamlit==1.45.1\n\nEXPOSE 8501\n\nCOPY app.py /app/\n\nCMD [\"streamlit\", \"run\", \"app.py\"]\n```\n\nAnd the Streamlit `app.py` file\n\n```py\nimport streamlit as st\n\nst.title(\"Base URL Test App\")\n\nst.write(f\"Streamlit Version: {st.__version__}\")\n\n# Display the configured server.baseUrlPath\ntry:\n    base_url_path = st.config.get_option(\"server.baseUrlPath\")\n    st.write(f\"Effective `server.baseUrlPath` from config: '{base_url_path}'\")\n    if base_url_path:\n        st.success(f\"The app should be accessible at `/{base_url_path}`.\")\n        st.write(\n            f\"If you are seeing this page at the root (e.g. `http://localhost:8501`) and not at `http://localhost:8501/{base_url_path}`, then the `STREAMLIT_SERVER_BASE_URL_PATH` environment variable might not be correctly applied by the server's routing.\"\n        )\n    else:\n        st.info(\n            \"`server.baseUrlPath` is currently empty. The app should be accessible at the root.\"\n        )\n\nexcept Exception as e:\n    st.error(f\"Error getting server.baseUrlPath: {e}\")\n\nst.markdown(\"---\")\nst.write(\"If `STREAMLIT_SERVER_BASE_URL_PATH` was set to `test`, you should see:\")\nst.code(\"Effective server.baseUrlPath from config: 'test'\", language=\"text\")\nst.write(\n    \"And the browser URL should reflect this base path if the web server is respecting it.\"\n)\n```\n\nI build it via `docker build -t streamlit-baseurl-test .` and run it via `docker run --rm --name streamlit_test_app --env STREAMLIT_SERVER_BASE_URL_PATH=test -p 8501:8501 streamlit-baseurl-test` It opens and runs successfully at `http://localhost:8501/test`\n\nDo you have any other information that may be helpful in reproducing the issue you're seeing?"
      }
    ]
  },
  {
    "issue_number": 9339,
    "title": "Altair chart left side cut off on initial load if legend is on bottom, only visible after rerun",
    "author": "blackary",
    "state": "closed",
    "created_at": "2024-08-27T13:00:26Z",
    "updated_at": "2025-06-04T16:31:28Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.altair_chart"
    ],
    "body": "### Checklist\n\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [X] I added a very descriptive title to this issue.\n- [X] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen an altair line or scatter chart is first rendered, if there is a legend on the bottom instead of the default on the right side, than the chart is initially shown with the Y axis label and Y numbers partially cut off. If you trigger a rerender, either once or twice, than the full chart shows up.\n\n### Reproducible Code Example\n\n```Python\nimport streamlit as st\r\nimport pandas as pd\r\nimport altair as alt\r\n\r\n\r\nst.title(\"Altair Chart cut-off bug\")\r\n\r\n\r\ndf = pd.DataFrame(\r\n    {\"x\": [1, 2, 3, 4], \"y\": [1, 2, 3, 4], \"category\": [\"A\", \"B\", \"C\", \"D\"]}\r\n)\r\n\r\nchart = (\r\n    alt.Chart(df)\r\n    .mark_line(point=True)\r\n    .encode(\r\n        x=alt.X(\"x\", title=\"Date\"),\r\n        y=alt.Y(\"y:Q\", title=\"Legend Value\"),\r\n        color=alt.Color(\"category:N\", title=\"Category\").legend(\r\n            orient=\"bottom\", title=None\r\n        ),\r\n    )\r\n)\r\n\r\nst.write(\"use_container_width=True\")\r\nst.altair_chart(chart, use_container_width=True)\r\n\r\n# THE REST OF THIS JUST SHOWS MORE EXAMPLES\r\n\r\nst.write(\"use_container_width=False\")\r\nst.altair_chart(chart, use_container_width=False)\r\n\r\nst.write(\"No bottom legend\")\r\n# This one renders properly initially\r\nchart = (\r\n    alt.Chart(df)\r\n    .mark_line(point=True)\r\n    .encode(\r\n        x=alt.X(\"x\", title=\"Date\"),\r\n        y=alt.Y(\"y:Q\", title=\"Legend Value\"),\r\n        color=alt.Color(\"category:N\", title=\"Category\"),\r\n    )\r\n)\r\n\r\nst.altair_chart(chart, use_container_width=True)\r\n\r\n\r\nst.button(\"Rerender\")\n```\n\n\n### Steps To Reproduce\n\n* Load the app, and see that the y axis is cut off\r\n* Hit the rerender button twice to see it fully show the chart\r\n\r\n![2024-08-26_16-53-49_(2)](https://github.com/user-attachments/assets/da96fbb4-c9d2-4b2f-9f63-7b20888d92b8)\r\n\n\n### Expected Behavior\n\nThe chart should show fully on the initial load\n\n### Current Behavior\n\n_No response_\n\n### Is this a regression?\n\n- [ ] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.37.1\r\n- Python version: 3.10.3\r\n- Operating System: OSX\r\n- Browser: Chrome\r\n\n\n### Additional Information\n\nTested also on 1.35 on Streamlit-in-Snowflake, same behavior",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9339)\n"
      },
      {
        "user": "kajarenc",
        "body": "Thank you @blackary for opening this issue, I was able to reproduce it here https://issues.streamlit.app/?issue=gh-9339"
      },
      {
        "user": "goncalossmartins",
        "body": "I was working on a solution for this issue and it has come to my attention that the problem comes actually from having legend(title=None), if the title=None argument is taken off, the graph plots just fine without any issues. Could the problem actually be related to this and not the orientation? As it also cuts off the X axis when the orientation is the default one."
      }
    ]
  },
  {
    "issue_number": 11517,
    "title": "487798408-92",
    "author": "guilhermems17",
    "state": "closed",
    "created_at": "2025-06-04T15:22:06Z",
    "updated_at": "2025-06-04T15:43:58Z",
    "labels": [
      "type:kudos"
    ],
    "body": "### Message\n\nagadeco pelos seus trabalhos",
    "comments": []
  },
  {
    "issue_number": 11515,
    "title": "Custom bi-directional component - how to extend native/base widgets/components",
    "author": "samsze0",
    "state": "open",
    "created_at": "2025-06-04T11:56:53Z",
    "updated_at": "2025-06-04T14:11:51Z",
    "labels": [
      "type:enhancement",
      "feature:custom-components"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nHi all,\n\nI would want to know if it is possible to create bi-directional components that \"extends\" the native components such as st.button such that my bi-directional components' styles could be more inline with the native components.\n\nFor instance, would it be possible to extend https://github.com/streamlit/streamlit/blob/develop/frontend/lib/src/components/widgets/Button/Button.tsx. \n\nI could see that the streamlit-component-lib npm package exposes the following APIs:\n\n<img width=\"972\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8b1ecdf6-be0a-4fae-965f-358cf03fef28\" />\n\nBut it seems to me that those base widgets/components are not exposed publicly.\n\nThanks\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11515)\n"
      }
    ]
  },
  {
    "issue_number": 11510,
    "title": "st.page_link should not require http(s) protocol for external links",
    "author": "xixixao",
    "state": "open",
    "created_at": "2025-06-04T08:22:24Z",
    "updated_at": "2025-06-04T14:11:19Z",
    "labels": [
      "type:enhancement",
      "feature:st.page_link"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar feature requests.\n- [x] I added a descriptive title and summary to this issue.\n\n### Summary\n\nNot all links start with http or https protocol. For example to open Microsoft Storage Explorer a link starts with `storageexplorer://`. Therefore external links in st.page_link should support other protocols.\n\n### Why?\n\n_No response_\n\n### How?\n\n_No response_\n\n### Additional Context\n\n_No response_",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**To help Streamlit prioritize this feature, react with a üëç (thumbs up emoji) to the initial post.**\n\nYour vote helps us identify which enhancements matter most to our users.\n\n![Views](https://api.views-badge.org/badge/st-issue-11510)\n"
      }
    ]
  },
  {
    "issue_number": 11500,
    "title": "Bad message format: Tried to use SessionInfo before it was initialized",
    "author": "susan-actionintel",
    "state": "closed",
    "created_at": "2025-06-02T18:37:40Z",
    "updated_at": "2025-06-04T13:40:00Z",
    "labels": [
      "type:bug",
      "status:awaiting-user-response"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nThe following issue does not seem to be resolved or is manifesting from a different root cause.\n[https://github.com/streamlit/streamlit/issues/9767](url)\n\nWithin the last couple of weeks, the \"Bad message format\" popup started appearing in my commercial application that uses Streamlit for the UI. We have not deployed a new version, changed the Docker container, or changed the application hosting. The Bad message format was not a problem before. \n\nOnce the dialog box is cleared, there is no issue with the application running as normal. *Is this notification needed on the front end at all???*\n\nI have tried multiple solutions with session_state variables, loading delays, and configuration file updates, but nothing I have tried resolves the error. \n\nI have no idea how to go about replicating this with a simpler code. While i cannot share my commercial codebase here, I would be happy to privately share on a screenshare with a developer working on the bug.\n\nPlease see additional details below. @jrieke\n \n\n\n### Reproducible Code Example\n\n```Python\n\n```\n\n### Steps To Reproduce\n\n1. Start a session of the application BargeAI at https://barge-ai.com with a browser OR refresh the browser \n2. Login (or cookies activated)\n3. Wait for the application to load\n4. Bad message format dialog box appears\n5. Close Bad message format dialog box\n6. Application runs normally\n\n![Image](https://github.com/user-attachments/assets/d274c831-2c9c-40fa-910e-21ce56c2698b)\n\n### Expected Behavior\n\nSteps 4 & 5 above would not happen\n\n### Current Behavior\n\nERROR MESSAGE:\n\"Bad message format: Tried to use SessionInfo before it was initialized\"\n![Image](https://github.com/user-attachments/assets/71aeb747-b149-4e05-b8da-dff5513b3cb5)\n\nCONSOLE:\nHere is the corresponding error message from the console.\nindex.DmrHunjf.js:811 Error: Tried to use SessionInfo before it was initialized\n    at get current (index.DmrHunjf.js:735:48883)\n    at App.handlePageProfileMsg (index.DmrHunjf.js:811:24732)\n    at Object.pageProfile (index.DmrHunjf.js:811:22384)\n    at Me (index.DmrHunjf.js:811:21802)\n    at App.handleMessage [as onMessage] (index.DmrHunjf.js:811:21864)\n    at WebsocketConnection.handleMessage (index.DmrHunjf.js:762:2855)\n\nELASTIC BEANSTALK DOCKER CONTAINER LOG:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/tornado/websocket.py\", line 1113, in wrapper\n    await fut\ntornado.iostream.StreamClosedError: Stream is closed\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/tornado/websocket.py\", line 1115, in wrapper\n    raise WebSocketClosedError()\ntornado.websocket.WebSocketClosedError\nTask exception was never retrieved\nfuture: <Task finished name='Task-151850' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/local/lib/python3.11/site-packages/tornado/websocket.py:1111> exception=WebSocketClosedError()>\n\nADDITIONAL INFO:\nThe dialog box does not appear every time a new session is created but the occurrence is now frequent. It seems like the websocket may be disconnecting periodically with this new paradigm. Occasionally, in the upper right hand corner, I see the word \"CONNECTION\" or \"CONNECTING\" appear just before the message appears, which seems to signify that the websocket was disconnected. \n\n\n### Is this a regression?\n\n- [x] Yes, this used to work in a previous version.\n\n### Debug info\n\n- Streamlit version: 1.41.0\n- Python version: python:3.11-slim\n- Operating System: Docker running on 64bit Amazon Linux 2023/4.5.2 (AWS Elastic Beanstalk, EC2)\n- Browser: Chrome Version 136.0.7103.114 (Official Build) (x86_64)\n\n\n### Additional Information\n\nMost recent related issue:\n[https://github.com/streamlit/streamlit/issues/9767]",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11500)\n"
      },
      {
        "user": "sfc-gh-bnisco",
        "body": "Hi @susan-actionintel , thank you for filing this issue!\n\nBased on the information given in this ticket, it looks like this is happening on an app running Streamlit 1.41.0. The [patch to fix the originally linked issue](https://github.com/streamlit/streamlit/pull/9886) was shipped in Streamlit v1.45.0. Could you please update to the latest version of Streamlit (v1.45.1 as of writing), and see if that solves the issue for you? Thanks in advance!"
      },
      {
        "user": "susan-actionintel",
        "body": "@sfc-gh-bnisco A million thanks! I had incorrectly determined the patch went in 1.41.0. \n\nOne correction to the ticket: the existing Streamlit version was 1.43.2 not 1.41.0 when the ticket was written. \n\nWe updated to Streamlit 1.45.0, and we are not seeing the info message insofar. I will update at end of day with further testing and close the issue as appropriate. \n\n"
      }
    ]
  },
  {
    "issue_number": 9498,
    "title": "min/max_value incorrectly(?) converted to UTC in DatetimeColumn in st.data_editor",
    "author": "christianfosli",
    "state": "open",
    "created_at": "2024-09-18T20:18:14Z",
    "updated_at": "2025-06-04T12:49:41Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P3",
      "feature:st.data_editor",
      "feature:st.column_config",
      "upstream"
    ],
    "body": "### Checklist\r\n\r\n- [X] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\r\n- [X] I added a very descriptive title to this issue.\r\n- [X] I have provided sufficient information below to help reproduce this issue.\r\n\r\n### Summary\r\n\r\nWhen using `st.data_editor` with a datetime column, and specifying a min_value and/or max_value using timezone aware datetime's, i.e. `DatetimeColumn(min_value=min_date, max_value=max_date)`, it seems the min/max values get converted to UTC before they end up in the `<input type=\"datetime-local\">` field in frontend.\r\n\r\nI would expect that they should instead be converted to the user's local time, if they are converted at all.\r\n\r\nIn the example below I expect that the input field should let me pick any time today (my local time zone is Europe/Oslo, meaning UTC+2 now during summer time), but instead it lets me pick from yesterday at 22 until today at 22 (the UTC equivalent).\r\n\r\n### Reproducible Code Example\r\n\r\n```Python\r\nfrom datetime import date, datetime, time, timedelta\r\n\r\nimport pandas as pd\r\nimport streamlit as st\r\nfrom streamlit.elements.lib.column_types import DatetimeColumn\r\nfrom zoneinfo import ZoneInfo\r\n\r\ntz = \"Europe/Oslo\"\r\n\r\nmin_date = datetime.combine(date.today(), time(), tzinfo=ZoneInfo(tz))\r\nmax_date = min_date + timedelta(days=1)\r\n\r\ndf = pd.DataFrame([{\"date\": datetime.now(tz=ZoneInfo(tz))}])\r\n\r\nst.data_editor(df, column_config={\"date\": DatetimeColumn(timezone=tz, min_value=min_date, max_value=max_date)})\r\n```\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n1. Run app with code sample above\r\n2. Double click the date column to edit its value\r\n3. Inspect the min/max constraints on the date column\r\n\r\n### Expected Behavior\r\n\r\n`<input type=\"datetime-local\" min=\"2024-09-18T00:00:00\" max=\"2024-09-19T00:00:00\">`\r\n\r\n(when today is Sep 18, and my time zone is \"Europe/Oslo\")\r\n\r\n### Current Behavior\r\n\r\n`<input type=\"datetime-local\" min=\"2024-09-17T22:00:00\" max=\"2024-09-18T22:00:00\">`\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this used to work in a previous version.\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.38.0\r\n- Python version: 3.10.12\r\n- Operating System: Ubuntu 22.04.5 LTS x86_64\r\n- Browser: MS Edge 129.0.6668.58\r\n\r\n\r\n### Additional Information\r\n\r\nHere is a screenshot to demonstrate, running the above code example on Sep 18 at 16:14 +2:\r\n![Screenshot from 2024-09-18 16-16-01](https://github.com/user-attachments/assets/384547b5-f341-4995-a1ef-04164979e609)\r\n\r\nAlso note that the input field _value_ is correct (remains the same as in the dataframe), it's just the min/max value that seems to get converted to utc.",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-9498)\n"
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @christianfosli, thanks for filing this issue. "
      }
    ]
  },
  {
    "issue_number": 4576,
    "title": "streamlit's webserver not working when using BAZEL for installation bug",
    "author": "rubenverhack",
    "state": "open",
    "created_at": "2022-03-31T09:13:59Z",
    "updated_at": "2025-06-04T12:23:10Z",
    "labels": [
      "type:enhancement",
      "area:deployment"
    ],
    "body": "### Summary\r\n\r\nRelated to https://github.com/streamlit/streamlit/issues/3132 .\r\n\r\nAn internal check to see if streamlit is running in development mode or not. This checks if some strings are present in the script's file path. This check is not valid for other installation types, e.g. bazel.\r\n\r\nThe script path in a bazel build is for example:\r\n`/home/{user}/.cache/bazel/_bazel_{user}/b775940771a888524b9eed82a7f43708/execroot/{organization}/bazel-out/k8-fastbuild/bin/apps/daq/streamlit_main.runfiles/pip_deps_pypi__streamlit/streamlit/hello/hello.py`\r\n\r\nThis could be solved by also checking for \"pip_deps_pypi__streamlit\" in the development_mode check, or by just having a better check in general.\r\n\r\n### Steps to reproduce\r\n\r\nCode snippet:\r\n\r\nstreamlit_main.py\r\n```\r\nimport sys\r\nfrom streamlit import cli as stcli\r\n\r\nif __name__ == '__main__':\r\n    sys.argv = [\"streamlit\", \"hello\"]\r\n    sys.exit(stcli.main())\r\n\r\n```\r\n\r\nBUILD.bazel\r\n```python\r\nload(\"@rules_python//python:defs.bzl\", \"py_binary\")\r\n\r\npy_binary(\r\n    name = \"streamlit_main\",\r\n    srcs = [\r\n        \"streamlit_main.py\",\r\n    ],\r\n    main = \"streamlit_main.py\",\r\n    visibility = [\"//visibility:public\"],\r\n    deps = [\r\n        requirement('streamlit')\r\n    ],\r\n)\r\n```\r\nIf applicable, please provide the steps we should take to reproduce the bug:\r\n\r\nrun \"bazel build streamlit_main\"\r\n\r\n**Expected behavior:**\r\n\r\nTo not run in development mode;\r\n\r\n**Actual behavior:**\r\n\r\nRuns in development mode. \r\n\r\n### Is this a regression?\r\n\r\nno\r\n\r\n### Debug info\r\n\r\n- Streamlit version: 1.8.1\r\n- Python version: 3.7\r\n- Using Conda? PipEnv? PyEnv? Pex? BAZEL\r\n- OS version: Ubuntu 20.04\r\n- Browser version:\r\n\r\n### Additional information\r\n\r\nWorkaround: explicitly set developmentMode to false:\r\n\r\n```\r\nimport sys\r\nfrom streamlit import cli as stcli\r\n\r\nif __name__ == '__main__':\r\n    sys.argv = [\"streamlit\", \"hello\", \"--global.developmentMode\", \"0\"]\r\n    sys.exit(stcli.main())\r\n\r\n```",
    "comments": [
      {
        "user": "rubenverhack",
        "body": "Just wanted to add that I'm new to streamlit and I'm not sure if developmentMode is useful in any way. The main issue was that I would get a \"connection refused\" at port 3000 (where it was opening automatically) and a \"404 Not Found\" if I manually went to localhost:8501."
      },
      {
        "user": "lukasmasuch",
        "body": "@rubenverhack Thanks for reporting this issue! I think we could fix this if we somehow add another check that detects if it is installed with bazel here: \r\n\r\nhttps://github.com/streamlit/streamlit/blob/6e7c08b9eea49d16f05e2e7b245a61395506f8ef/lib/streamlit/config.py#L301\r\n\r\nI think this issue would be perfect for a community contribution from someone working with bazel."
      },
      {
        "user": "serteal",
        "body": "Hi! @LukasMasuch @rubenverhack \r\nI'd love to look into this! Can I take this up?"
      }
    ]
  },
  {
    "issue_number": 11391,
    "title": "Cannot use common tenant with microsoft login: authlib.jose.errors.InvalidClaimError: invalid_claim: Invalid claim 'iss'",
    "author": "cendrillon",
    "state": "open",
    "created_at": "2025-05-17T22:14:20Z",
    "updated_at": "2025-06-04T12:22:48Z",
    "labels": [
      "type:bug",
      "status:confirmed",
      "priority:P2",
      "upstream",
      "feature:authentication"
    ],
    "body": "### Checklist\n\n- [x] I have searched the [existing issues](https://github.com/streamlit/streamlit/issues) for similar issues.\n- [x] I added a very descriptive title to this issue.\n- [x] I have provided sufficient information below to help reproduce this issue.\n\n### Summary\n\nWhen setting server_metadata_url (in secrets.toml [auth]) to https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration, i.e. tenant set to \"common\" the following error occurs:\n\n```authlib.jose.errors.InvalidClaimError: invalid_claim: Invalid claim 'iss'```\n\nThis error does not occur when limiting logins to personal accounts with server_metadata_url set to https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration.\n\nThis means that non-personal accounts (i.e. work accounts) cannot login to streamlit significantly reducing the utility of streamlit microsoft login support.\n\nIt looks like this is a problem with authlib\n\nhttps://github.com/authlib/authlib/issues/605\n\nFor others struggling with this, a workaround I've found is to manage the login yourself directly using the msal library. A good code example can be found here https://github.com/Prhmma/Streamlit_Azure_AD/tree/main\n\n### Debug info\n\n- Streamlit version: 1.44.1\n- Python version: 3.12.3\n- Operating System: Ubuntu\n- Browser: Chrome\n",
    "comments": [
      {
        "user": "github-actions[bot]",
        "body": "**If this issue affects you, please react with a üëç (thumbs up emoji) to the initial post.**\n\nYour feedback helps us prioritize which bugs to investigate and address first.\n\n![Views](https://api.views-badge.org/badge/st-issue-11391)\n"
      },
      {
        "user": "LeonardHd",
        "body": "Hi I am facing a comparable situation (when trying to support multiple tenants and work accounts, hence using `server_metadata_url = \"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\"`) and explored a few options on how to work around the issue without waiting for a fix in `streamlit` or `authlib`.\n\nWhen digging I realized that by default, Streamlit's `OpenIDMixin` loads the server metadata using `authlib`. When using multi-tenant scenarios, the endpoint `https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration` returns an issue with the value `https://login.microsoftonline.com/{tenantid}/v2.0`. `authlib` doesn't replace the `{tenantid}` with the actual tenant id, which makes sense given different tenants might be valid.\nA Entraid token usually has a `tid` property that specifies the tenant the token belongs to.\n\nI explored how I could workaround the issue without changing authlib or streamlit, the following options came to my mind:\n\n1. Monkeypatch the `validate_iss` in the `authlib` library to fix the issuer validation.\n2. Patching a CustomJWTClass with the adjusted logic.\n\nIn the process I realized that we that Streamlit doesn't pass `claims_options` when calling `authorize_access_token` (`TornadoOAuth2App` in `streamlist.web.server.oidc_mixin.py`).\nWhen this call happens and no claims_options are passed the OAuth metadata is used during the token validation process (see `parse_id_token` in `OpenIDMixin`).\n\n\nWhile the support in `authlib` is probably benefical I realized that I can simply implement the following as a workaround.\n**This workaround currently below allows any issuer** -> Pass your explicit issuer claim option (if single tenant, or a list of specific tenants).\n\n```python\nfrom streamlit.web.server.oidc_mixin import TornadoOAuth2App, TornadoOAuth\nimport tornado.web\n\nclass TornadoOAuth2AppWithEntraAuth(TornadoOAuth2App):\n    \n    \n    def authorize_access_token(\n        self, request_handler: tornado.web.RequestHandler, **kwargs\n    ):\n        return super().authorize_access_token(\n            request_handler, claims_options={}\n        )\n\nclass TornadoOAuthWithEntra(TornadoOAuth):\n    oauth2_client_cls = TornadoOAuth2AppWithEntraAuth\n\n```\n\nI then only need to monkeypatch the streamlit app at the top of the app.py:\n\n```python\nfrom app.streamlit.adauth import TornadoOAuthWithEntra\n\nimport streamlit.web.server.oauth_authlib_routes\n\nstreamlit.web.server.oauth_authlib_routes.TornadoOAuth = TornadoOAuthWithEntra # type: ignore\n\n```\n\nAlternatively, as a workaround it might also be feasible to monkeypatch the validate_iss (for more complex scenarios).\n\n```python\ndef validate_iss(self) -> None:\n    \"\"\"Validate the 'iss' claim for Azure AD.\"\"\"\n    claim_name = \"iss\"\n\n    option = self.options.get(claim_name)\n    if not option:\n        return\n\n\n    value = self.get(claim_name)\n\n    option_value = option.get(\"value\")\n    if option_value and value != option_value:\n        raise InvalidClaimError(claim_name)\n\n    option_values = option.get(\"values\")\n\n    # replace '{tenantid}' with actual tenant ID (option_values is a list of options)\n    option_values = [\n        v.replace(\"{tenantid}\", self.get(\"tid\", \"\"))\n        for v in option_values\n    ] if option_values else None\n\n    if option_values and value not in option_values:\n        raise InvalidClaimError(claim_name)\n\n    validate = option.get(\"validate\")\n    if validate and not validate(self, value):\n        raise InvalidClaimError(claim_name)\n```\n\n```python\nfrom app.streamlit.azuread_jwt_claims import validate_iss\nimport authlib.jose.rfc7519.claims\n\nauthlib.jose.rfc7519.claims.JWTClaims.validate_iss = validate_iss\n```\n\n\nOverall these seem to be only workarounds for now, but hope they help."
      },
      {
        "user": "sfc-gh-nbellante",
        "body": "Hi @cendrillon thanks for finding and filing this issue. And thanks to both of you for providing workarounds in the meantime while we investigate. "
      }
    ]
  }
]